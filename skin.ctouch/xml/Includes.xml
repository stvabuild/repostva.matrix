<?xml version="1.0" encoding="utf-8"?>
<includes>
    <include file="Includes_Menu.xml" />
	<!--
	CUSTOM WINDOWS LIST
		_Overlay 1150
		_3DDialogSelect 1151
		_HomeCustomise 1152
		_HomeMenuItems 1153
		_DialogSelect 1154
		_AddonsList 1155
		_PVRRootList 1156
		_DummyDialog 1157
		_RidSoundtrack 1158
		_StartSoundtrack 1159
		_StopSoundtrack 1160
	-->
	<!-- Expressions section -->
	<expression name="isFullscreenVideo">Window.IsActive(fullscreenvideo)</expression>
	<expression name="isnotFullscreenVideo">!Window.IsActive(fullscreenvideo)</expression>
	<expression name="isVideoAddon">String.Contains(Container.FolderPath,plugin://plugin.video)</expression>
	<expression name="isRepository">String.isEqual(addons://repository.hirayasoftware/xbmc.addon.video)</expression>	
	<expression name="isMovie">String.IsEqual(ListItem.DBTYPE,movie)</expression>
	<expression name="isVideo">String.IsEqual(ListItem.DBTYPE,video)</expression>
	<expression name="isTvshow">String.IsEqual(ListItem.DBTYPE,tvshow)</expression>
	<expression name="isnotTvshow">!String.IsEqual(ListItem.DBTYPE,tvshow)</expression>	
	<expression name="isSeason">String.IsEqual(ListItem.DBTYPE,season)</expression>
	<expression name="isnotSeason">!String.IsEqual(ListItem.DBTYPE,season)</expression>	
	<expression name="isSet">String.IsEqual(ListItem.DBTYPE,set)</expression>
	<expression name="isEpisode">String.IsEqual(ListItem.DBTYPE,episode)</expression>
	<expression name="isMusicvideo">String.IsEqual(ListItem.DBTYPE,musicvideo)</expression>
	<expression name="isArtist">String.IsEqual(ListItem.DBTYPE,artist)</expression>
	<expression name="isnotArtist">![String.IsEqual(ListItem.DBTYPE,artist)]</expression>
	<expression name="isAlbum">String.IsEqual(ListItem.DBTYPE,album)</expression>
	<expression name="isSong">String.IsEqual(ListItem.DBTYPE,song)</expression>
	<expression name="isEmptyIcon">String.IsEmpty(ListItem.Icon)</expression>
	<expression name="isnotEmptyIcon">![String.IsEmpty(ListItem.Icon)]</expression>
	<expression name="isEmptyPVRIcon">String.IsEmpty(ListItem.Icon) + String.IsEmpty(Window(home).Property(SkinHelper.ListItem.ChannelLogo))</expression>
	<expression name="isnotEmptyPVRIcon">!String.IsEmpty(ListItem.Icon) | !String.IsEmpty(Window(home).Property(SkinHelper.ListItem.ChannelLogo))</expression>
	<expression name="isEmptyDBID">String.IsEmpty(ListItem.DBID)</expression>
	<expression name="isnotEmptyDBID">![String.IsEmpty(ListItem.DBID)]</expression>
	<expression name="isDefaultIcon">String.StartsWith(ListItem.Icon,Default)</expression>
	<expression name="isnotDefaultIcon">![String.StartsWith(ListItem.Icon,Default)]</expression>
	<expression name="isInfoDialog">[Window.IsVisible(addoninformation) | Window.IsVisible(movieinformation) | Window.IsVisible(musicinformation) | Window.IsVisible(songinformation)]</expression>
	<expression name="isEnabledTouch">Skin.HasSetting(show-touchcontrols)</expression>
	<expression name="isEnabledParentDirectory">System.GetBool(filelists.showparentdiritems)</expression>
	<expression name="isnotEnabledParentDirectory">!System.GetBool(filelists.showparentdiritems)</expression>
	<expression name="isEnabledScrollbar">!String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])</expression>
	<expression name="isParentFolder">ListItem.IsParentFolder</expression>
	<expression name="isnotParentFolder">!ListItem.IsParentFolder</expression>
	<expression name="PlayerSeek">[Player.Seeking | [!Player.Paused + Player.DisplayAfterSeek] | !String.IsEmpty(Player.SeekNumeric)]</expression>

	<variable name="Label_WidgetPSNumber">
		<value condition="!String.IsEmpty(Skin.String(widgetpsnumber))">$INFO[Skin.String(widgetpsnumber)]</value>
		<value>30</value>
	</variable>
	<variable name="Label_WidgetLSNumber">
		<value condition="!String.IsEmpty(Skin.String(widgetpsnumber))">$INFO[Skin.String(widgetlsnumber)]</value>
		<value>30</value>
	</variable>
	<variable name="WidgetIcon">
		<value condition="Control.HasFocus(9806)">icons/palantir.png</value>
		<value condition="Control.HasFocus(9814)">icons/palantir.png</value>
		<value condition="Control.HasFocus(9807)">icons/palantir.png</value>
		<value condition="Control.HasFocus(9808)">icons/palantir.png</value>
		<value condition="Control.HasFocus(9809)">icons/palantir.png</value>
		<value condition="Control.HasFocus(9830)">icons/palantir.png</value>
		<value condition="Control.HasFocus(9831)">icons/palantir.png</value>
		<value condition="Control.HasFocus(9802)">icons/alfa.png</value>
		<value condition="Control.HasFocus(9803)">icons/alfa.png</value>
		<value condition="Control.HasFocus(9804)">icons/alfa.png</value>
		<value condition="Control.HasFocus(9805)">icons/alfa.png</value>
		<value condition="Control.HasFocus(9827)">skin-logo-little.png</value>
		<value condition="Control.HasFocus(9828)">skin-logo-little.png</value>
		<value condition="Control.HasFocus(9829)">skin-logo-little.png</value>		
	</variable>
	<variable name="AddonIcon">
		<value condition="String.Contains(Container.FolderPath,plugin://plugin.video.alfa)">icons/alfa.png</value>
		<value condition="String.Contains(Container.FolderPath,plugin://plugin.video.palantir3)">icons/palantir.png</value>
		<value condition="String.Contains(Container.FolderPath,plugin://plugin.video.moestv)">icons/moes.jpg</value>
		<value condition="String.Contains(Container.FolderPath,plugin://plugin.video.magellan)">icons/magellan.png</value>
		<value condition="String.Contains(Container.FolderPath,plugin://plugin.video.duffyou)">icons/duffyou.jpg</value>
		<value condition="String.Contains(Container.FolderPath,plugin://script.stva)">icons/complementostva.png</value>
		<value>skin-logo-little.png</value>
	</variable>
	<variable name="SeekLabel">
		<value condition="!String.IsEmpty(Player.SeekStepSize)">[COLOR button_focus]$LOCALIZE[773][/COLOR] $INFO[Player.SeekStepSize]</value>
		<value condition="!String.IsEmpty(Player.SeekOffset) + Player.HasPerformedSeek(3)">[COLOR button_focus]$LOCALIZE[773][/COLOR] $INFO[Player.SeekOffset]</value>
		<value condition="Player.IsTempo">$LOCALIZE[31142]: $INFO[Player.PlaySpeed]</value>
	</variable>
	<variable name="AccentColorLabel">
		<value condition="!String.IsEmpty(Skin.String(color_accent)) + !String.IsEqual(Skin.String(color_accent),None)">$INFO[Skin.String(color_accent),,       ]</value>
		<value>Azul Cristal</value>
	</variable>
	<variable name="AccentColor">
		<value condition="!String.IsEmpty(Skin.String(color_accent)) + !String.IsEqual(Skin.String(color_accent),None)">$INFO[Skin.String(color_accent)]</value>
		<value>accent</value>
	</variable>
	<variable name="BackgndSimpleImage">
		<value condition="!String.IsEmpty(Skin.String(background-custom))">$INFO[Skin.String(background-custom)]</value>
	</variable>
	<variable name="BackgndFanart">
		<value condition="Skin.HasSetting(background-slideshow) + Player.HasAudio + !String.IsEmpty(Window(visualisation).Property(ArtistSlideshow.Image))">$INFO[Window(visualisation).Property(ArtistSlideshow.Image)]</value>
		<value condition="!Skin.HasSetting(background-fanarts) + Player.HasAudio + !String.IsEmpty(MusicPlayer.Property(Fanart_Image))">$INFO[MusicPlayer.Property(Fanart_Image)]</value>
		<value condition="!Skin.HasSetting(background-fanarts) + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
	</variable>	
	<!-- Skin Variable section -->
	<variable name="BackgndImage">
		<value condition="Window.IsActive(weather) + Skin.HasSetting(background-customweather.multi) + !String.IsEmpty(Skin.String(background-customweather.name))">$INFO[Skin.String(background-customweather.path)]$INFO[Window(weather).Property(Day0.FanartCode)]</value>
		<value condition="Window.IsActive(weather) + !Skin.HasSetting(background-customweather.multi) + String.IsEmpty(Window(weather).Property(Current.FanartCode)) + !String.IsEmpty(Skin.String(background-customweather.name))">$INFO[Skin.String(background-customweather.path)]$INFO[Window(weather).Property(Day0.FanartCode)]</value>
		<value condition="Window.IsActive(weather) + !Skin.HasSetting(background-customweather.multi) + !String.IsEmpty(Skin.String(background-customweather.name))">$INFO[Skin.String(background-customweather.path)]$INFO[Window(weather).Property(Day0.FanartCode)]$INFO[Skin.String(background-customweather.ext)]</value>
		<value condition="Skin.HasSetting(background-slideshow) + Player.HasAudio + !String.IsEmpty(Window(visualisation).Property(ArtistSlideshow))">$INFO[Window(visualisation).Property(ArtistSlideshow)]</value>
		<value condition="Skin.HasSetting(SkinHelper.EnableExtraFanart) + Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(ListItem.Art(animatedfanart))">$INFO[ListItem.Art(animatedfanart)]</value>
		<value condition="Skin.HasSetting(SkinHelper.EnableExtraFanart) + Player.HasAudio + String.IsEmpty(Window(home).Property(PlayingOST))+ !String.IsEmpty(Window(home).Property(SkinHelper.Player.Art.ExtraFanArt))">$INFO[Window(home).Property(SkinHelper.Player.Art.ExtraFanArt)]</value>
		<value condition="Skin.HasSetting(SkinHelper.EnableExtraFanart) + !String.IsEmpty(Control.GetLabel(300000))">$INFO[Control.GetLabel(300000)]</value>
		<value condition="!Skin.HasSetting(background-fanarts) + Player.HasAudio + !String.IsEmpty(MusicPlayer.Property(Fanart_Image))">$INFO[MusicPlayer.Property(Fanart_Image)]</value>
		<value condition="!Skin.HasSetting(background-fanarts) + !String.IsEmpty(Window(home).Property(SkinHelper.Music.FanArt))">$INFO[Window(home).Property(SkinHelper.Music.FanArt)]</value>
		<value condition="!Skin.HasSetting(background-fanarts) + !String.IsEmpty(ListItem.Art(set.fanart)) + !Skin.HasSetting(staticbg)">$INFO[ListItem.Art(set.fanart)]</value>
		<value condition="!Skin.HasSetting(background-fanarts) + !String.IsEmpty(ListItem.Art(fanart)) + !Skin.HasSetting(staticbg)">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!Skin.HasSetting(background-fanarts) + !String.IsEmpty(ListItem.Property(Fanart_Image)) + !Skin.HasSetting(staticbg)">$INFO[ListItem.Property(Fanart_Image)]</value>
		<value condition="!Skin.HasSetting(background-fanarts) + !String.IsEmpty(Fanart.Image) + !Skin.HasSetting(staticbg)">$INFO[Fanart.Image]</value>
		<value condition="!Skin.HasSetting(background-fanarts) + !String.IsEmpty(Window.Property(Fanart)) + !Skin.HasSetting(staticbg)">$INFO[Window.Property(Fanart)]</value>
		<value condition="!String.IsEmpty(Skin.String(background-custom))">$INFO[Skin.String(background-custom)]</value>
		<value condition="String.IsEmpty(Skin.String(background-custom))">background-iconhome.jpg</value>
		<value>colours/black.png</value>
	</variable>
	<variable name="BackgndImagesport">
		<value condition="!String.IsEmpty(Skin.String(background-custom))">$INFO[Skin.String(background-custom)]</value>
		<value condition="String.IsEmpty(Skin.String(background-custom))">background-iconhome.jpg</value>
		<value>colours/black.png</value>
	</variable>
    <variable name="Label_Tagline">
        <value condition="String.IsEqual(ListItem.DBType,season)">$INFO[ListItem.Label]</value>
        <value condition="!String.IsEmpty(ListItem.Tagline)">[I]$INFO[ListItem.Tagline][/I]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Tagline))">[I]$INFO[Window(Home).Property(SkinHelper.ListItem.Tagline)][/I]</value>
        <value condition="!String.IsEmpty(ListItem.Property(Artist_Description))">$INFO[ListItem.Property(Artist_Description)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description)]</value>
        <value condition="!String.IsEmpty(ListItem.AddonDescription)">$INFO[ListItem.AddonDescription]</value>
        <value condition="String.IsEqual(ListItem.DBType,episode)">$VAR[videoinfo_play_label]</value>
        <value condition="String.IsEqual(ListItem.DBType,episode) + String.IsEqual(ListItem.Episode,1)">[I][COLOR=green]Season Premiere[/COLOR] $INFO[ListItem.Season, S,: ]$INFO[ListItem.Episode,E, ][/I]</value>
        <value condition="String.IsEqual(ListItem.DBType,season)">$INFO[ListItem.Season,Season , ]</value>
        <value condition="String.IsEqual(ListItem.DBType,tvshow) + !String.IsEmpty(ListItem.Property(TotalSeasons))">[I]Watch Season $INFO[ListItem.Property(TotalSeasons)] Now[/I]</value>
        <value condition="String.IsEqual(ListItem.DBType,tvshow) + !String.IsEmpty(ListItem.Studio)">[I]$INFO[ListItem.Year,Premiered  , ] $VAR[studios_var][/I]</value>
        <value condition="String.IsEqual(ListItem.DBType,tvshow)">[I]$INFO[ListItem.Year,Premiered  , ] $INFO[Window(Home).Property(SkinHelper.ListItem.Studio),on , ][/I]</value>

    </variable>	
	<variable name="BackgndImageVisibity">
		<value condition="!Skin.HasSetting(background-visibiltymed) + !Skin.HasSetting(background-visibiltyhigh)">LowBgnVisibity</value>
		<value condition="Skin.HasSetting(background-visibiltymed)">MedBgnVisibity</value>
		<value condition="Skin.HasSetting(background-visibiltyhigh)">HighBgnVisibity</value>
	</variable>
	<variable name="VideoRating">
		<value condition="String.Contains(ListItem.Mpaa,Rated G) | String.Contains(ListItem.Mpaa,Rated: G)">special://skin/extras/images/rating/mpaa_general.png</value>
		<value condition="[String.Contains(ListItem.Mpaa,Rated PG) | String.Contains(ListItem.Mpaa,Rated: PG)] + !String.Contains(ListItem.Mpaa,Rated PG-13) + !String.Contains(ListItem.Mpaa,Rated: PG-13)">special://skin/extras/images/rating/mpaa_pg.png</value>
		<value condition="String.Contains(ListItem.Mpaa,Rated PG-13) | String.Contains(ListItem.Mpaa,Rated: PG-13)">special://skin/extras/images/rating/mpaa_pg13.png</value>
		<value condition="String.Contains(ListItem.Mpaa,Rated R) | String.Contains(ListItem.Mpaa,Rated: R)">special://skin/extras/images/rating/mpaa_restricted.png</value>
		<value condition="String.Contains(ListItem.Mpaa,Rated NC-17) | String.Contains(ListItem.Mpaa,Rated: NC-17)">special://skin/extras/images/rating/mpaa_nc17.png</value>
		<value condition="String.IsEqual(ListItem.Mpaa,UK:U)">special://skin/extras/images/rating/bbfc_u.png</value>
		<value condition="String.IsEqual(ListItem.Mpaa,UK:UC)">special://skin/extras/images/rating/bbfc_uc.png</value>
		<value condition="String.IsEqual(ListItem.Mpaa,UK:PG)">special://skin/extras/images/rating/bbfc_pg.png</value>
		<value condition="String.IsEqual(ListItem.Mpaa,UK:12)">special://skin/extras/images/rating/bbfc_12.png</value>
		<value condition="String.IsEqual(ListItem.Mpaa,UK:12A)">special://skin/extras/images/rating/bbfc_12A.png</value>
		<value condition="String.IsEqual(ListItem.Mpaa,UK:15)">special://skin/extras/images/rating/bbfc_15.png</value>
		<value condition="String.IsEqual(ListItem.Mpaa,UK:18)">special://skin/extras/images/rating/bbfc_18.png</value>
		<value condition="String.IsEqual(ListItem.Mpaa,UK:R18)">special://skin/extras/images/rating/bbfc_R18.png</value>
		<value condition="String.Contains(ListItem.Mpaa,FSK0) | String.Contains(ListItem.Mpaa,FSK 0) | String.Contains(ListItem.Mpaa,FSK o.A.)">special://skin/extras/images/rating/FSK-0.png</value>
		<value condition="String.Contains(ListItem.Mpaa,FSK6) | String.Contains(ListItem.Mpaa,FSK 6)">special://skin/extras/images/rating/FSK-6.png</value>
		<value condition="String.Contains(ListItem.Mpaa,FSK12) | String.Contains(ListItem.Mpaa,FSK 12)">special://skin/extras/images/rating/FSK-12.png</value>
		<value condition="String.Contains(ListItem.Mpaa,FSK16) | String.Contains(ListItem.Mpaa,FSK 16)">special://skin/extras/images/rating/FSK-16.png</value>
		<value condition="String.Contains(ListItem.Mpaa,FSK18) | String.Contains(ListItem.Mpaa,FSK 18)">special://skin/extras/images/rating/FSK-18.png</value>
		<value condition="String.IsEqual(Listitem.Mpaa,Australia:G) | String.IsEqual(Listitem.Mpaa,Australia:TV-G) | String.IsEqual(Listitem.Mpaa,Australia:TV-C) | String.IsEqual(Listitem.Mpaa,Australia:TV-P)">special://skin/extras/images/rating/australia_g.png</value>
		<value condition="String.Contains(Listitem.Mpaa,Australia:MA) | String.Contains(Listitem.Mpaa,Australia:TV-MA) | String.Contains(Listitem.Mpaa,Australia:TV-MAV) | String.Contains(Listitem.Mpaa,Australia:TV-AV)">special://skin/extras/images/rating/australia_ma.png</value>
		<value condition="String.IsEqual(Listitem.Mpaa,Australia:M) | String.IsEqual(Listitem.Mpaa,Australia:TV-M)">special://skin/extras/images/rating/australia_m.png</value>
		<value condition="String.IsEqual(Listitem.Mpaa,Australia:PG) | String.IsEqual(Listitem.Mpaa,Australia:TV-PG)">special://skin/extras/images/rating/australia_pg.png</value>
		<value condition="String.IsEqual(Listitem.Mpaa,Australia:R) | String.IsEqual(Listitem.Mpaa,Australia:TV-R)">special://skin/extras/images/rating/australia_r.png</value>
		<value condition="String.IsEqual(Listitem.Mpaa,Australia:X)">special://skin/extras/images/rating/australia_x.png</value>
		<value condition="String.Contains(ListItem.Mpaa,Brazil:Livre) | String.Contains(ListItem.Mpaa,Livre)">special://skin/extras/images/Brazil_Livre.png</value>
		<value condition="String.Contains(ListItem.Mpaa,Brazil:10) | String.Contains(ListItem.Mpaa,10 anos)">special://skin/extras/images/Brazil_10.png</value>
		<value condition="String.Contains(ListItem.Mpaa,Brazil:12) | String.Contains(ListItem.Mpaa,12 anos)">special://skin/extras/images/Brazil_12.png</value>
		<value condition="String.Contains(ListItem.Mpaa,Brazil:14) | String.Contains(ListItem.Mpaa,14 anos)">special://skin/extras/images/Brazil_14.png</value>
		<value condition="String.Contains(ListItem.Mpaa,Brazil:16) | String.Contains(ListItem.Mpaa,16 anos)">special://skin/extras/images/Brazil_16.png</value>
		<value condition="String.Contains(ListItem.Mpaa,Brazil:18) | String.Contains(ListItem.Mpaa,18 anos)">special://skin/extras/images/Brazil_18.png</value>
		<value condition="String.Contains(ListItem.Mpaa,HU-KN)">special://skin/extras/images/rating/HU_KN.png</value>
		<value condition="String.Contains(ListItem.Mpaa,HU-12)">special://skin/extras/images/rating/HU_12.png</value>
		<value condition="String.Contains(ListItem.Mpaa,HU-16)">special://skin/extras/images/rating/HU_16.png</value>
		<value condition="String.Contains(ListItem.Mpaa,HU-18)">special://skin/extras/images/rating/HU_18.png</value>
		<value condition="String.Contains(ListItem.Mpaa,TV-Y) + ![String.Contains(ListItem.Mpaa,TV-Y7) | String.Contains(ListItem.Mpaa,TV-Y7-FV)]">special://skin/extras/images/rating/TV-Y.png</value>
		<value condition="String.Contains(ListItem.Mpaa,TV-Y7) | String.Contains(ListItem.Mpaa,TV-Y7-FV)">special://skin/extras/images/rating/TV-Y7.png</value>
		<value condition="String.Contains(ListItem.Mpaa,TV-G)">special://skin/extras/images/rating/TV-G.png</value>
		<value condition="String.Contains(ListItem.Mpaa,TV-PG)">special://skin/extras/images/rating/TV-PG.png</value>
		<value condition="String.Contains(ListItem.Mpaa,TV-14)">special://skin/extras/images/rating/TV-14.png</value>
		<value condition="String.Contains(ListItem.Mpaa,TV-MA)">special://skin/extras/images/rating/TV-MA.png</value>
	</variable>
	<variable name="VideoInfoRating">
		<value condition="String.Contains(Window.Property(mpaa),Rated G) | String.Contains(Window.Property(mpaa),Rated: G)">special://skin/extras/images/rating/mpaa_general.png</value>
		<value condition="[String.Contains(Window.Property(mpaa),Rated PG) | String.Contains(Window.Property(mpaa),Rated: PG)] + !String.Contains(Window.Property(mpaa),Rated PG-13) + !String.Contains(Window.Property(mpaa),Rated: PG-13)">special://skin/extras/images/rating/mpaa_pg.png</value>
		<value condition="String.Contains(Window.Property(mpaa),Rated PG-13) | String.Contains(Window.Property(mpaa),Rated: PG-13)">special://skin/extras/images/rating/mpaa_pg13.png</value>
		<value condition="String.Contains(Window.Property(mpaa),Rated R) | String.Contains(Window.Property(mpaa),Rated: R)">special://skin/extras/images/rating/mpaa_restricted.png</value>
		<value condition="String.Contains(Window.Property(mpaa),Rated NC-17) | String.Contains(Window.Property(mpaa),Rated: NC-17)">special://skin/extras/images/rating/mpaa_nc17.png</value>
		<value condition="String.IsEqual(Window.Property(mpaa),UK:U)">special://skin/extras/images/rating/bbfc_u.png</value>
		<value condition="String.IsEqual(Window.Property(mpaa),UK:UC)">special://skin/extras/images/rating/bbfc_uc.png</value>
		<value condition="String.IsEqual(Window.Property(mpaa),UK:PG)">special://skin/extras/images/rating/bbfc_pg.png</value>
		<value condition="String.IsEqual(Window.Property(mpaa),UK:12)">special://skin/extras/images/rating/bbfc_12.png</value>
		<value condition="String.IsEqual(Window.Property(mpaa),UK:12A)">special://skin/extras/images/rating/bbfc_12A.png</value>
		<value condition="String.IsEqual(Window.Property(mpaa),UK:15)">special://skin/extras/images/rating/bbfc_15.png</value>
		<value condition="String.IsEqual(Window.Property(mpaa),UK:18)">special://skin/extras/images/rating/bbfc_18.png</value>
		<value condition="String.IsEqual(Window.Property(mpaa),UK:R18)">special://skin/extras/images/rating/bbfc_R18.png</value>
		<value condition="String.Contains(Window.Property(mpaa),FSK0) | String.Contains(Window.Property(mpaa),FSK 0) | String.Contains(Window.Property(mpaa),FSK o.A.)">special://skin/extras/images/rating/FSK-0.png</value>
		<value condition="String.Contains(Window.Property(mpaa),FSK6) | String.Contains(Window.Property(mpaa),FSK 6)">special://skin/extras/images/rating/FSK-6.png</value>
		<value condition="String.Contains(Window.Property(mpaa),FSK12) | String.Contains(Window.Property(mpaa),FSK 12)">special://skin/extras/images/rating/FSK-12.png</value>
		<value condition="String.Contains(Window.Property(mpaa),FSK16) | String.Contains(Window.Property(mpaa),FSK 16)">special://skin/extras/images/rating/FSK-16.png</value>
		<value condition="String.Contains(Window.Property(mpaa),FSK18) | String.Contains(Window.Property(mpaa),FSK 18)">special://skin/extras/images/rating/FSK-18.png</value>
		<value condition="String.IsEqual(Window.Property(mpaa),Australia:G) | String.IsEqual(Window.Property(mpaa),Australia:TV-G) | String.IsEqual(Window.Property(mpaa),Australia:TV-C) | String.IsEqual(Listitem.Mpaa,Australia:TV-P)">special://skin/extras/images/rating/australia_g.png</value>
		<value condition="String.Contains(Window.Property(mpaa),Australia:MA) | String.Contains(Window.Property(mpaa),Australia:TV-MA) | String.Contains(Window.Property(mpaa),Australia:TV-MAV) | String.Contains(Window.Property(mpaa),Australia:TV-AV)">special://skin/extras/images/rating/australia_ma.png</value>
		<value condition="String.IsEqual(Window.Property(mpaa),Australia:M) | String.IsEqual(Window.Property(mpaa),Australia:TV-M)">special://skin/extras/images/rating/australia_m.png</value>
		<value condition="String.IsEqual(Window.Property(mpaa),Australia:PG) | String.IsEqual(Window.Property(mpaa),Australia:TV-PG)">special://skin/extras/images/rating/australia_pg.png</value>
		<value condition="String.IsEqual(Window.Property(mpaa),Australia:R) | String.IsEqual(Window.Property(mpaa),Australia:TV-R)">special://skin/extras/images/rating/australia_r.png</value>
		<value condition="String.IsEqual(Window.Property(mpaa),Australia:X)">special://skin/extras/images/rating/australia_x.png</value>
		<value condition="String.Contains(Window.Property(mpaa),Brazil:Livre) | String.Contains(Window.Property(mpaa),Livre)">special://skin/extras/images/Brazil_Livre.png</value>
		<value condition="String.Contains(Window.Property(mpaa),Brazil:10) | String.Contains(Window.Property(mpaa),10 anos)">special://skin/extras/images/Brazil_10.png</value>
		<value condition="String.Contains(Window.Property(mpaa),Brazil:12) | String.Contains(Window.Property(mpaa),12 anos)">special://skin/extras/images/Brazil_12.png</value>
		<value condition="String.Contains(Window.Property(mpaa),Brazil:14) | String.Contains(Window.Property(mpaa),14 anos)">special://skin/extras/images/Brazil_14.png</value>
		<value condition="String.Contains(Window.Property(mpaa),Brazil:16) | String.Contains(Window.Property(mpaa),16 anos)">special://skin/extras/images/Brazil_16.png</value>
		<value condition="String.Contains(Window.Property(mpaa),Brazil:18) | String.Contains(Window.Property(mpaa),18 anos)">special://skin/extras/images/Brazil_18.png</value>
		<value condition="String.Contains(Window.Property(mpaa),HU-KN)">special://skin/extras/images/rating/HU_KN.png</value>
		<value condition="String.Contains(Window.Property(mpaa),HU-12)">special://skin/extras/images/rating/HU_12.png</value>
		<value condition="String.Contains(Window.Property(mpaa),HU-16)">special://skin/extras/images/rating/HU_16.png</value>
		<value condition="String.Contains(Window.Property(mpaa),HU-18)">special://skin/extras/images/rating/HU_18.png</value>
		<value condition="String.Contains(Window.Property(mpaa),TV-Y) + ![String.Contains(Window.Property(mpaa),TV-Y7) | String.Contains(Window.Property(mpaa),TV-Y7-FV)]">special://skin/extras/images/rating/TV-Y.png</value>
		<value condition="String.Contains(Window.Property(mpaa),TV-Y7) | String.Contains(Window.Property(mpaa),TV-Y7-FV)">special://skin/extras/images/rating/TV-Y7.png</value>
		<value condition="String.Contains(Window.Property(mpaa),TV-G)">special://skin/extras/images/rating/TV-G.png</value>
		<value condition="String.Contains(Window.Property(mpaa),TV-PG)">special://skin/extras/images/rating/TV-PG.png</value>
		<value condition="String.Contains(Window.Property(mpaa),TV-14)">special://skin/extras/images/rating/TV-14.png</value>
		<value condition="String.Contains(Window.Property(mpaa),TV-MA)">special://skin/extras/images/rating/TV-MA.png</value>
	</variable>
	<variable name="MediaRating">
		<value condition="String.Contains(ListItem.UserRating,10)">rating10.png</value>
		<value condition="String.Contains(ListItem.UserRating,9)">rating9.png</value>
		<value condition="String.Contains(ListItem.UserRating,8)">rating8.png</value>
		<value condition="String.Contains(ListItem.UserRating,7)">rating7.png</value>
		<value condition="String.Contains(ListItem.UserRating,6)">rating6.png</value>
		<value condition="String.Contains(ListItem.UserRating,5)">rating5.png</value>
		<value condition="String.Contains(ListItem.UserRating,4)">rating4.png</value>
		<value condition="String.Contains(ListItem.UserRating,3)">rating3.png</value>
		<value condition="String.Contains(ListItem.UserRating,2)">rating2.png</value>
		<value condition="String.Contains(ListItem.UserRating,1)">rating1.png</value>
		<value condition="String.Contains(ListItem.Rating,10)">rating10.png</value>
		<value condition="String.Contains(ListItem.Rating,9)">rating9.png</value>
		<value condition="String.Contains(ListItem.Rating,8)">rating8.png</value>
		<value condition="String.Contains(ListItem.Rating,7)">rating7.png</value>
		<value condition="String.Contains(ListItem.Rating,6)">rating6.png</value>
		<value condition="String.Contains(ListItem.Rating,5)">rating5.png</value>
		<value condition="String.Contains(ListItem.Rating,4)">rating4.png</value>
		<value condition="String.Contains(ListItem.Rating,3)">rating3.png</value>
		<value condition="String.Contains(ListItem.Rating,2)">rating2.png</value>
		<value condition="String.Contains(ListItem.Rating,1)">rating1.png</value>
		<value>blank.png</value>
	</variable>
	<variable name="SelectDialogNumObjects">
		<value condition="Control.IsVisible(3)">$INFO[Container(3).NumItems,(,)]</value>
		<value condition="Control.IsVisible(6)">$INFO[Container(6).NumItems,(,)]</value>
	</variable>
	<variable name="MasterModeLabel">
		<value condition="!System.IsMaster">$LOCALIZE[20045]</value>
		<value>$LOCALIZE[20046]</value>
	</variable>
	<variable name="DelayListAnimation">
		<value condition="String.IsEqual(Skin.String(listview-idleanim),60)">60$LOCALIZE[31810]</value>
		<value condition="String.IsEqual(Skin.String(listview-idleanim),90)">90$LOCALIZE[31810]</value>
		<value condition="String.IsEqual(Skin.String(listview-idleanim),120)">120$LOCALIZE[31810]</value>
		<value>$LOCALIZE[31815]</value>
	</variable>
	<variable name="DefaultVideoInfoIcons">
		<value condition="String.IsEqual(ListItem.DBTYPE,movie)">videodb://recentlyaddedmovies/</value>
		<value condition="String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode)">videodb://tvshows/titles/</value>
	</variable>
	<variable name="Overlay">
		<value condition="ListItem.IsResumable + !ListItem.IsPlaying">OverlayPartialyWatched.png</value>
		<value condition="String.StartsWith(ListItem.Overlay,OverlayWatched)">OverlayWatched.png</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons)] + !ListItem.IsParentFolder + !Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + ListItem.IsCollection + !ListItem.IsPlaying"></value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons)] + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + !ListItem.IsPlaying"></value>
		<value condition="ListItem.IsFolder + !Container.Content(Addons) + !ListItem.isParentFolder + !ListItem.IsPlaying"></value>
		<value condition="!ListItem.IsFolder + !Container.Content(Addons) + !ListItem.IsPlaying"></value>
		<value condition="Container.Content(Addons) + !ListItem.IsPlaying"></value>		
        <value condition="ListItem.IsPlaying">icons/play.png</value>			
	</variable>
	<variable name="Overlaylist">
		<value condition="ListItem.IsResumable + !ListItem.IsPlaying">OverlayPartialyWatched.png</value>
		<value condition="String.StartsWith(ListItem.Overlay,OverlayWatched)">OverlayWatched.png</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons)] + !ListItem.IsParentFolder + !Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + ListItem.IsCollection + !ListItem.IsPlaying">icons/iconstva.png</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons)] + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + !ListItem.IsPlaying">OverlayPartialyWatched.png</value>
		<value condition="ListItem.IsFolder + !Container.Content(Addons) + !ListItem.isParentFolder + !ListItem.IsPlaying">icons/iconstva.png</value>
		<value condition="!ListItem.IsFolder + !Container.Content(Addons) + !ListItem.IsPlaying">icons/iconstva.png</value>
		<value condition="Container.Content(Addons) + !ListItem.IsPlaying">icons/iconstva.png</value>		
		<value condition="ListItem.isParentFolder">buttons/back.png</value>
        <value condition="ListItem.IsPlaying">icons/play.png</value>			
	</variable>	
	<variable name="Overlaytype">
		<value condition="ListItem.IsFolder + !Container.Content(Addons) + !ListItem.isParentFolder">buttons/folder.png</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons) | Container.Content(movies)] + !ListItem.IsParentFolder + !Integer.IsGreater(ListItem.Property(WatchedEpisodes),0)">buttons/web.png</value>
		<value condition="Container.Content(Addons)">defaultaddon.png</value>		
		<value condition="!ListItem.IsParentFolder">buttons/folder.png</value>	
	</variable>		
    <variable name="Overlay_Corner">
        <value condition="ListItem.IsPlaying">corner.png</value>
        <value condition="ListItem.IsResumable">corner.png</value>
        <value condition="Integer.IsGreater(ListItem.PlayCount,0)">corner.png</value>
        <value condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png)">corner.png</value>
        <value condition="ListItem.IsCollection">corner.png</value>
        <value condition="Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + [Container.Content(tvshows) | Container.Content(seasons) | Window.IsVisible(Home)]">corner.png</value>
        <value condition="Integer.IsGreater(ListItem.Property(TotalEpisodes),0) + Integer.IsLess(ListItem.Property(UnWatchedEpisodes),1) + [Container.Content(tvshows) | Container.Content(seasons)]">corner.png</value>
    </variable>
	
	<variable name="PVROverlay">
		<value condition="ListItem.IsRecording">overlayisrecording.png</value>
		<value condition="ListItem.HasTimer + !ListItem.IsRecording">overlayhastimer.png</value>
	</variable>
	<variable name="ListItemFlags">
		<value condition="ListItem.IsStereoscopic">listitem/3D.png</value>
		<value condition="!String.IsEmpty(ListItem.VideoResolution) + Integer.IsGreater(ListItem.VideoResolution,2000)">listitem/4K.png</value>
		<value condition="!String.IsEmpty(ListItem.VideoResolution) + Integer.IsGreater(ListItem.VideoResolution,700)">listitem/HD.png</value>
		<value condition="!String.IsEmpty(ListItem.VideoResolution)">listitem/SD.png</value>
	</variable>
	<variable name="ListItemShortcut">
		<value condition="Container.Content(movies) | Container.Content(episodes) | Container.Content(musicvideos) | Container.Content(songs) | Container.Content(playlists)">ActivateWindow(videos,"$INFO[ListItem.FolderPath]",return)</value>
		<value condition="Window.IsVisible(videos)">ActivateWindow(videos,"$INFO[ListItem.FolderPath]",return)</value>
		<value condition="Window.IsVisible(music)">ActivateWindow(music,"$INFO[ListItem.FolderPath]",return)</value>
		<value condition="Window.IsVisible(programs)">ActivateWindow(programs,"$INFO[ListItem.FolderPath]",return)</value>
	</variable>
	<variable name="ListItemShortcutlist">
		<value condition="Container.Content(movies) | Container.Content(episodes) | Container.Content(musicvideos) | Container.Content(songs) | Container.Content(playlists)">$INFO[ListItem.FolderPath]</value>
		<value condition="Window.IsVisible(videos)">$INFO[ListItem.FolderPath]</value>
		<value condition="Window.IsVisible(music)">$INFO[ListItem.FolderPath]</value>
		<value condition="Window.IsVisible(programs)">$INFO[ListItem.FolderPath]</value>
	</variable>		
	<variable name="ListDynamicContent">
		<value condition="Container.Content(movies)">videodb://recentlyaddedmovies/</value>
		<value condition="Container.Content(tvshows)">videodb://recentlyaddedepisodes/</value>
	</variable>
	<variable name="ListScrollNavVideo">
		<value condition="Control.IsVisible(50) + Skin.HasSetting(show-letterbar) + [Container.Content(sets) | Container.Content(movies) | Container.Content(tvshows) | Container.Content(musicvideos)]">SetFocus(1260)</value>
		<value condition="Control.IsVisible(50) + !String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])">SetFocus(1250)</value>
		<value condition="Control.IsVisible(50)">SetFocus(4502)</value>
		<value condition="Control.IsVisible(52) + Skin.HasSetting(show-letterbar) + [Container.Content(movies) | Container.Content(tvshows) | Container.Content(musicvideos)]">SetFocus(1262)</value>
		<value condition="Control.IsVisible(52) + !String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])">SetFocus(1252)</value>
		<value condition="Control.IsVisible(53) + Skin.HasSetting(show-letterbar) + Container.Content(tvshows)">SetFocus(1263)</value>
		<value condition="Control.IsVisible(53) + !String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])">SetFocus(1253)</value>
		<value condition="Control.IsVisible(54) + Skin.HasSetting(show-letterbar) + [Container.Content(movies) | Container.Content(tvshows) | Container.Content(musicvideos)]">SetFocus(1264)</value>
		<value condition="Control.IsVisible(54) + !String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])">SetFocus(1254)</value>
		<value condition="Control.IsVisible(57) + Skin.HasSetting(show-letterbar) + [Container.Content(movies) | Container.Content(tvshows) | Container.Content(musicvideos)]">SetFocus(1267)</value>
		<value condition="Control.IsVisible(57) + !String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])">SetFocus(1257)</value>
		<value condition="Control.IsVisible(58) + Skin.HasSetting(show-letterbar) + [Container.Content(sets) | Container.Content(movies) | Container.Content(tvshows) | Container.Content(musicvideos)]">SetFocus(1268)</value>
		<value condition="Control.IsVisible(58) + !String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])">SetFocus(1258)</value>
		<value condition="Control.IsVisible(59) + Skin.HasSetting(show-letterbar) + [Container.Content(sets) | Container.Content(movies) | Container.Content(tvshows) | Container.Content(musicvideos)]">SetFocus(1269)</value>
		<value condition="Control.IsVisible(59) + !String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])">SetFocus(1259)</value>
		
		<value>noop</value>
	</variable>
	<variable name="ListScrollNavMusic">
		<value condition="Control.IsVisible(50) + Skin.HasSetting(show-letterbar) + [Container.Content(artists) | Container.Content(albums) | Container.Content(musicvideos)]">SetFocus(1260)</value>
		<value condition="Control.IsVisible(50) + !String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])">SetFocus(1250)</value>
		<value condition="Control.IsVisible(50)">SetFocus(4501)</value>
		<value condition="Control.IsVisible(52) + Skin.HasSetting(show-letterbar) + [Container.Content(artists) | Container.Content(albums) | Container.Content(musicvideos)]">SetFocus(1262)</value>
		<value condition="Control.IsVisible(52) + !String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])">SetFocus(1252)</value>
		<value condition="Control.IsVisible(52)">SetFocus(4521)</value>
		<value condition="Control.IsVisible(54) + Skin.HasSetting(show-letterbar) + [Container.Content(artists) | Container.Content(albums) | Container.Content(musicvideos)]">SetFocus(1264)</value>
		<value condition="Control.IsVisible(54) + !String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])">SetFocus(1254)</value>
		<value condition="Control.IsVisible(54)">SetFocus(4541)</value>
		<value condition="Control.IsVisible(57) + Skin.HasSetting(show-letterbar) + [Container.Content(artists) | Container.Content(albums) | Container.Content(musicvideos)]">SetFocus(1267)</value>
		<value condition="Control.IsVisible(57) + !String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])">SetFocus(1257)</value>
		<value condition="Control.IsVisible(57)">SetFocus(4571)</value>
		<value condition="Control.IsVisible(58) + Skin.HasSetting(show-letterbar) + [Container.Content(artists) | Container.Content(albums) | Container.Content(musicvideos)]">SetFocus(1268)</value>
		<value condition="Control.IsVisible(58) + !String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])">SetFocus(1258)</value>
		<value condition="Control.IsVisible(58)">SetFocus(4581)</value>
	</variable>
	<variable name="ListScrollNavSets">
		<value condition="Control.IsVisible(50) + Container(50).Content(sets) + !Skin.HasSetting(lock-screensettings) + !ListItem.IsParentFolder">SetFocus(5050)</value>
		<value condition="Control.IsVisible(50) + !Skin.HasSetting(lock-screensettings)">SetFocus(9000)</value>
		<value condition="Control.IsVisible(50)">SetFocus(4501)</value>
		<value condition="Control.IsVisible(58) + Container(50).Content(sets) + !Skin.HasSetting(lock-screensettings) + !ListItem.IsParentFolder">SetFocus(5058)</value>
		<value condition="Control.IsVisible(58) + !Skin.HasSetting(lock-screensettings)">SetFocus(9000)</value>
		<value condition="Control.IsVisible(58)">SetFocus(4581)</value>
		<value condition="[Control.IsVisible(52) | Control.IsVisible(53) | Control.IsVisible(54) | Control.IsVisible(57)] + !Skin.HasSetting(lock-screensettings)">SetFocus(9000)</value>
	</variable>
	<variable name="ListScrollDiffuse">
		<value condition="Control.IsVisible(50) + Control.HasFocus(50)">white</value>
		<value condition="Control.IsVisible(50) + !Control.HasFocus(50)">UnFocusedCovers</value>
		<value condition="Control.IsVisible(52) + Control.HasFocus(52)">white</value>
		<value condition="Control.IsVisible(52) + !Control.HasFocus(52)">UnFocusedCovers</value>
		<value condition="Control.IsVisible(53) + Control.HasFocus(53)">white</value>
		<value condition="Control.IsVisible(53) + !Control.HasFocus(53)">UnFocusedCovers</value>
		<value condition="Control.IsVisible(54) + Control.HasFocus(54)">white</value>
		<value condition="Control.IsVisible(54) + !Control.HasFocus(54)">UnFocusedCovers</value>
		<value condition="Control.IsVisible(57) + Control.HasFocus(57)">white</value>
		<value condition="Control.IsVisible(57) + !Control.HasFocus(57)">SecondaryCovers</value>
		<value condition="Control.IsVisible(58) + Control.HasFocus(58)">white</value>
		<value condition="Control.IsVisible(58) + !Control.HasFocus(58)">UnFocusedCovers</value>
	</variable>
	<variable name="ListPlotLong">
        <value condition="!String.IsEmpty(ListItem.Property(Artist_Description))">$INFO[ListItem.Property(Artist_Description)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description)]</value>
        <value condition="!String.IsEmpty(ListItem.AddonDescription)">$INFO[ListItem.AddonDescription]</value>
        <value condition="!String.IsEmpty(ListItem.PlotOutline) + Skin.HasSetting(PlotOutline)">$INFO[ListItem.PlotOutline]</value>
        <value condition="!String.IsEmpty(ListItem.Plot)">$INFO[ListItem.Plot]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Plot))">$INFO[Window(Home).Property(SkinHelper.ListItem.Plot)]</value>
        <value condition="!String.IsEmpty(ListItem.Plot) + System.HasAddon(plugin.video.themoviedb.helper">$INFO[Container(10051).ListItem.Plot]</value>
	</variable>
	<variable name="PlayerControlRepeatImage">
		<value condition="Playlist.IsRepeatOne + Control.HasFocus(674)">osd-btn-repeatone-focus.png</value>
		<value condition="Playlist.IsRepeat + Control.HasFocus(674)">osd-btn-repeatall-focus.png</value>
		<value condition="Control.HasFocus(674)">osd-btn-repeat-focus.png</value>
		<value condition="Playlist.IsRepeatOne">osd-btn-repeatone.png</value>
		<value condition="Playlist.IsRepeat">osd-btn-repeatall.png</value>
		<value>osd-btn-repeat.png</value>
	</variable>
	<variable name="PlayStateImage">
		<value condition="Player.Caching">busy.png</value>
		<value condition="Player.Paused">osd-btn-pause.png</value>
		<value condition="Player.Forwarding">osd-btn-fastfwd.png</value>
		<value condition="Player.Rewinding">osd-btn-rewind.png</value>
		<value condition="[Player.Rewinding2x | Player.Rewinding4x | Player.Rewinding8x | Player.Rewinding16x | Player.Rewinding32x]">osd-btn-rewind.png</value>
		<value condition="[Player.Forwarding2x | Player.Forwarding4x | Player.Forwarding8x | Player.Forwarding16x | Player.Forwarding32x]">osd-btn-fastfwd.png</value>
		<value condition="Player.IsTempo">osd-btn-play.png</value>
		</variable>
	<variable name="PlayStateTxt">
		<value condition="Player.Caching"> $LOCALIZE[15107] $INFO[Player.CacheLevel]%</value>
		<value condition="Player.Paused">$LOCALIZE[112]</value>
		<value condition="[Player.Rewinding2x | Player.Forwarding2x]">x2</value>
		<value condition="[Player.Rewinding4x | Player.Forwarding4x]">x4</value>
		<value condition="[Player.Rewinding8x | Player.Forwarding8x]">x8</value>
		<value condition="[Player.Rewinding16x | Player.Forwarding16x]">x16</value>
		<value condition="[Player.Rewinding32x | Player.Forwarding32x]">x32</value>
		<value condition="Player.IsTempo">$INFO[Player.Playspeed,x,]</value>
	</variable>
	<variable name="Avance">
			<value condition="!String.IsEmpty(Player.SeekStepSize)">$INFO[Player.SeekStepSize]</value>
	</variable>
	<variable name="ListitemDuration">
		<value condition="!String.IsEmpty(Window(home).Property(SkinHelper.ListItemDuration)) + !String.IsEqual(Window(home).Property(SkinHelper.ListItemDuration.Hours),0)">$INFO[Window(home).Property(SkinHelper.ListItemDuration.Hours),,h]$INFO[Window(home).Property(SkinHelper.ListItemDuration.Minutes),,m]</value>
		<value condition="Integer.IsLess(ListItem.Duration(mins),1)">( $LOCALIZE[19695] )</value>
		<value condition="Integer.IsEqual(ListItem.Duration(mins),1)">$INFO[Listitem.Duration(h),,h] $INFO[Listitem.Duration(mm),,m]</value>
		<value condition="Integer.IsLess(ListItem.Duration(mins),60)">$INFO[Listitem.Duration(h),,h] $INFO[Listitem.Duration(mm),,m]</value>
		<value condition="Integer.IsLess(ListItem.Duration(mins),120)">$INFO[Listitem.Duration(h),,h] $INFO[Listitem.Duration(mm),,m]</value>
		<value condition="Integer.IsGreater(ListItem.Duration(hours),1)">$INFO[Listitem.Duration(h),,h] $INFO[Listitem.Duration(mm),,m]</value>
		<value>$INFO[Listitem.Duration(h),,h] $INFO[Listitem.Duration(mm),,m]</value>
	</variable>
	<variable name="MovieLibEntry">
		<value condition="!Library.HasContent(movies)">ActivateWindow(videos,Files,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-movie),$LOCALIZE[369])">ActivateWindow(videos,MovieTitles,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-movie),$LOCALIZE[20108])">ActivateWindow(videos,Movies,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-movie),$LOCALIZE[20386])">ActivateWindow(videos,RecentlyAddedMovies,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-movie),$LOCALIZE[135])">ActivateWindow(videos,MovieGenres,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-movie),$LOCALIZE[652])">ActivateWindow(videos,MovieYears,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-movie),$LOCALIZE[344])">ActivateWindow(videos,MovieActors,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-movie),$LOCALIZE[20348])">ActivateWindow(videos,MovieDirectors,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-movie),$LOCALIZE[20388])">ActivateWindow(videos,MovieStudios,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-movie),$LOCALIZE[20434])">ActivateWindow(videos,MovieSets,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-movie),$LOCALIZE[20451])">ActivateWindow(videos,MovieCountries,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-movie),$LOCALIZE[20459])">ActivateWindow(videos,MovieTags,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-movie),$LOCALIZE[744])">ActivateWindow(videos,Files,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-movie),$LOCALIZE[31652])">$INFO[Skin.String(CustomMovieEntry.Path)]</value>
		<value>ActivateWindow(videos,MovieTitles,return)</value>
	</variable>
	<variable name="TVLibEntry">
		<value condition="!Library.HasContent(tvshows)">ActivateWindow(videos,Files,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-tvshow),$LOCALIZE[369])">ActivateWindow(videos,TvShowTitles,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-tvshow),$LOCALIZE[20108])">ActivateWindow(videos,TvShows,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-tvshow),$LOCALIZE[20387])">ActivateWindow(videos,RecentlyAddedEpisodes,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-tvshow),$LOCALIZE[135])">ActivateWindow(videos,TvShowGenres,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-tvshow),$LOCALIZE[652])">ActivateWindow(videos,TvShowYears,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-tvshow),$LOCALIZE[344])">ActivateWindow(videos,TvShowActors,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-tvshow),$LOCALIZE[20388])">ActivateWindow(videos,TvShowStudios,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-tvshow),$LOCALIZE[744])">ActivateWindow(videos,Files,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-tvshow),$LOCALIZE[31652])">$INFO[Skin.String(CustomTVShowEntry.Path)]</value>
		<value>ActivateWindow(videos,TvShowTitles,return)</value>
	</variable>
	<variable name="TVEntry">
		<value condition="String.IsEqual(Skin.String(libraryentry-tv),$LOCALIZE[20108])">ActivateWindow(1156)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-tv),$LOCALIZE[31703])">PlayPvrTV</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-tv),$LOCALIZE[19023])">ActivateWindow(tvchannels,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-tv),$LOCALIZE[19069])">ActivateWindow(tvguide,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-tv),$LOCALIZE[19163])">ActivateWindow(tvrecordings,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-tv),$LOCALIZE[19040])">ActivateWindow(tvtimers,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-tv),$LOCALIZE[137])">ActivateWindow(tvsearch,return)</value>
		<value>ActivateWindow(tvguide,return)</value>
	</variable>
	<variable name="RadioEntry">
		<value condition="String.IsEqual(Skin.String(libraryentry-radio),$LOCALIZE[20108])">ActivateWindow(1156)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-radio),$LOCALIZE[31703])">PlayPvrRadio</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-radio),$LOCALIZE[19024])">ActivateWindow(radiochannels,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-radio),$LOCALIZE[19069])">ActivateWindow(radioguide,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-radio),$LOCALIZE[19163])">ActivateWindow(radiorecordings,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-radio),$LOCALIZE[19040])">ActivateWindow(radiotimers,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-radio),$LOCALIZE[137])">ActivateWindow(radiosearch,return)</value>
		<value>ActivateWindow(radioguide,return)</value>
	</variable>
	<variable name="MusicLibEntry">
		<value condition="!Library.HasContent(music)">ActivateWindow(music,Files,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-music),$LOCALIZE[20108])">ActivateWindow(music,Root,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-music),$LOCALIZE[132])">ActivateWindow(music,Albums,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-music),$LOCALIZE[135])">ActivateWindow(music,Genres,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-music),$LOCALIZE[133])">ActivateWindow(music,Artists,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-music),$LOCALIZE[134])">ActivateWindow(music,Songs,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-music),$LOCALIZE[10504])">ActivateWindow(music,Top100Songs,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-music),$LOCALIZE[10505])">ActivateWindow(music,Top100Albums,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-music),$LOCALIZE[359])">ActivateWindow(music,RecentlyAddedAlbums,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-music),$LOCALIZE[517])">ActivateWindow(music,RecentlyPlayedAlbums,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-music),$LOCALIZE[521])">ActivateWindow(music,Compilations,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-music),$LOCALIZE[652])">ActivateWindow(music,Years,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-music),$LOCALIZE[1050])">ActivateWindow(music,Singles,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-music),$LOCALIZE[744])">ActivateWindow(music,Files,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-music),$LOCALIZE[31652])">$INFO[Skin.String(CustomMusicEntry.Path)]</value>
		<value>ActivateWindow(music,Albums,return)</value>
	</variable>
	<variable name="MusicVideoLibEntry">
		<value condition="!Library.HasContent(musicvideos)">ActivateWindow(videos,Files,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-musicvideo),$LOCALIZE[369])">ActivateWindow(music,videodb://musicvideos/titles/,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-musicvideo),$LOCALIZE[20108])">ActivateWindow(music,videodb://musicvideos/,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-musicvideo),$LOCALIZE[20390])">ActivateWindow(music,videodb://recentlyaddedmusicvideos/,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-musicvideo),$LOCALIZE[135])">ActivateWindow(music,videodb://musicvideos/genres/,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-musicvideo),$LOCALIZE[652])">ActivateWindow(music,videodb://musicvideos/years/,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-musicvideo),$LOCALIZE[133])">ActivateWindow(music,videodb://musicvideos/artists/,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-musicvideo),$LOCALIZE[132])">ActivateWindow(music,videodb://musicvideos/albums/,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-musicvideo),$LOCALIZE[20348])">ActivateWindow(music,videodb://musicvideos/directors/,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-musicvideo),$LOCALIZE[20388])">ActivateWindow(music,videodb://musicvideos/studios/,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-musicvideo),$LOCALIZE[744])">ActivateWindow(videos,Files,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-musicvideo),$LOCALIZE[31652])">$INFO[Skin.String(CustomMusicVideoEntry.Path)]</value>
		<value>ActivateWindow(music,videodb://musicvideos/titles/,return)</value>
	</variable>
	<variable name="VideoHeadings">
		<value condition="String.Contains(Container.FolderPath,plugin.video.specialfeatures)">$ADDON[plugin.video.specialfeatures 30000]</value>
		<value condition="Container.Content(movies)">$LOCALIZE[20342]</value>
		<value condition="Container.Content(tvshows)">$LOCALIZE[31027]</value>
		<value condition="Container.Content(episodes) + !String.IsEmpty(Container.ShowTitle) + Integer.IsGreater(ListItem.Season,0)">$INFO[Container.ShowTitle][CR]$INFO[ListItem.Season,$LOCALIZE[20373] - ]</value>
		<value condition="Container.Content(episodes) + !String.IsEmpty(Container.ShowTitle) + String.IsEqual(ListItem.Season,0)">$INFO[Container.ShowTitle][CR]$LOCALIZE[20381]</value>
		<value condition="Container.Content(actors)">$LOCALIZE[344]</value>
		<value condition="Container.Content(genres)">$LOCALIZE[135]</value>
		<value condition="Container.Content(years)">$LOCALIZE[652]</value>
		<value condition="Container.Content(studios)">$LOCALIZE[20388]</value>
		<value condition="Container.Content(directors)">$LOCALIZE[20348]</value>
		<value condition="Container.Content(musicvideos)">$LOCALIZE[20389]</value>
		<value condition="Container.Content(playlists)">$LOCALIZE[136]</value>
		<value condition="Container.Content(addons)">$LOCALIZE[31696]</value>
		<value condition="Container.Content(files)">$LOCALIZE[744]</value>
		<value condition="!String.IsEmpty(Container.FolderName) + !String.IsEmpty(ListItem.Label)">$INFO[Container.FolderName]</value>
		<value>$LOCALIZE[3]</value>
	</variable>
	<variable name="MusicHeadings">
		<value condition="Container.Content(artists)">$LOCALIZE[133]</value>
		<value condition="Container.Content(albums)">$LOCALIZE[132]</value>
		<value condition="Container.Content(genres)">$LOCALIZE[135]</value>
		<value condition="Container.Content(years)">$LOCALIZE[652]</value>
		<value condition="Container.Content(studios)">$LOCALIZE[20388]</value>
		<value condition="Container.Content(directors)">$LOCALIZE[20348]</value>
		<value condition="Container.Content(musicvideos)">$LOCALIZE[20389]</value>
		<value condition="Container.Content(playlists)">$LOCALIZE[136]</value>
		<value condition="Container.Content(addons)">$LOCALIZE[31697]</value>
		<value condition="Container.Content(files)">$LOCALIZE[744]</value>
		<value condition="!String.IsEmpty(Container.FolderName) + !String.IsEmpty(ListItem.Label)">$INFO[Container.FolderName]</value>
		<value>$LOCALIZE[31030]</value>
	</variable>
	<variable name="PVRHeading">
		<value condition="Control.IsVisible(10)">$LOCALIZE[22020]</value><!-- EPG -->
		<value condition="Window.IsVisible(MyPVRSearch.xml)">$LOCALIZE[137]</value><!-- Search -->
		<value condition="Window.IsVisible(MyPVRTimers.xml)">$LOCALIZE[19040]</value><!-- Timer -->
		<value condition="Window.IsVisible(MyPVRRecordings.xml)">$LOCALIZE[20007]</value><!-- Recordings -->
		<value>$INFO[Container.FolderName]</value>
	</variable>
	<variable name="CustomFavHeading">
		<value condition="String.IsEmpty(Skin.String(CustomFav.Heading))">$LOCALIZE[20190]</value>
		<value condition="!String.IsEmpty(Skin.String(CustomFav.Heading))">$INFO[Skin.String(CustomFav.Heading)]</value>
	</variable>
	<variable name="PVRChannelManagerHeading">
		<value condition="String.IsEmpty(Window.Property(IsRadio))">$LOCALIZE[19199] - $LOCALIZE[19023]</value>
		<value condition="!String.IsEmpty(Window.Property(IsRadio))">$LOCALIZE[19199] - $LOCALIZE[19024]</value>
	</variable>
	<variable name="PVRChannelManagerSubHeading">
		<value condition="String.IsEmpty(Window.Property(IsRadio))">$LOCALIZE[19023]</value>
		<value condition="!String.IsEmpty(Window.Property(IsRadio))">$LOCALIZE[19024]</value>
	</variable>
	<variable name="PVRChannelOSDHeading">
		<value condition="pvr.IsPlayingRadio">$LOCALIZE[19024] - $INFO[MusicPlayer.ChannelGroup]</value>
		<value condition="!pvr.IsPlayingRadio">$LOCALIZE[19023] - $INFO[VideoPlayer.ChannelGroup]</value>
	</variable>
	<variable name="CustomDialogSelectHeading">
		<value condition="String.IsEqual(Window(home).Property(SelectDialogType),videoinfomore)">$LOCALIZE[31693]</value>
		<value condition="String.IsEqual(Window(home).Property(SelectDialogType),musicinfomore)">$LOCALIZE[31693]</value>
		<value condition="String.IsEqual(Window(home).Property(SelectDialogType),gamesettings)">$LOCALIZE[10022]</value>
	</variable>
	<variable name="IconBanner">
		<value condition="!String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(clearart))">$INFO[ListItem.Art(clearart)]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="TVShowPoster">
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="WidgetTitle">
		<value condition="Control.HasFocus(9806)">Series en Seguimiento</value>
		<value condition="Control.HasFocus(9814)">Novedades en Películas</value>
		<value condition="Control.HasFocus(9807)">Series Nuevas</value>
		<value condition="Control.HasFocus(9808)">Últimas películas añadidas</value>
		<value condition="Control.HasFocus(9809)">Últimas Series añadidas</value>
		<value condition="Control.HasFocus(9802)">Películas en Tendencia</value>
		<value condition="Control.HasFocus(9803)">Series de Estreno</value>
		<value condition="Control.HasFocus(9804)">Series Populares</value>
		<value condition="Control.HasFocus(9805)">Películas Populares</value>
		<value condition="Control.HasFocus(9810)">Cine Super Estrenos</value>
		<value condition="Control.HasFocus(9811)">Series</value>
		<value condition="Control.HasFocus(9812)">Super Peticiones</value>
		<value condition="Control.HasFocus(9813)">Series en Torrent</value>
		<value condition="Control.HasFocus(9827)">Mis Series en Progreso</value>
		<value condition="Control.HasFocus(9829)">Próximas emisiones de Mis Series</value>
		<value condition="Control.HasFocus(9828)">Mis Películas</value>
		<value condition="Control.HasFocus(9830)">Películas Recomendadas</value>
		<value condition="Control.HasFocus(9831)">Series Recomendadas</value>
		<value condition="Control.HasFocus(9815)">$INFO[Skin.String(CustomWidget.1.Label)]</value>	
		<value condition="Control.HasFocus(9816)">$INFO[Skin.String(CustomWidget.2.Label)]</value>	
		<value condition="Control.HasFocus(9817)">$INFO[Skin.String(CustomWidget.3.Label)]</value>	
		<value condition="Control.HasFocus(9818)">$INFO[Skin.String(CustomWidget.4.Label)]</value>	
		<value condition="Control.HasFocus(9819)">$INFO[Skin.String(CustomWidget.5.Label)]</value>	
		<value condition="Control.HasFocus(9820)">$INFO[Skin.String(CustomWidget.6.Label)]</value>	
		<value condition="Control.HasFocus(9821)">$INFO[Skin.String(CustomWidget.7.Label)]</value>	
		<value condition="Control.HasFocus(9822)">$INFO[Skin.String(CustomWidget.8.Label)]</value>	
		<value condition="Control.HasFocus(9823)">$INFO[Skin.String(CustomWidget.9.Label)]</value>	
		<value condition="Control.HasFocus(9824)">$INFO[Skin.String(CustomWidget.10.Label)]</value>	
		<value condition="Control.HasFocus(9825)">$INFO[Skin.String(CustomWidget.11.Label)]</value>	
		<value condition="Control.HasFocus(9826)">$INFO[Skin.String(CustomWidget.12.Label)]</value>	
	</variable>	
	<variable name="Landscape">
		<value condition="String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="String.IsEmpty(ListItem.Art(fanart))">$VAR[IconPoster]</value>
		<value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(fanart)]</value>		
	</variable>
	<variable name="IconPoster">
		<value condition="String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Icon]</value>	
		<value condition="!Container.Scrolling + !System.ScreenSaverActive + !String.IsEmpty(ListItem.Art(animatedposter)) + Skin.HasSetting(SkinHelper.EnableAnimatedPosters)">$INFO[ListItem.Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem.Icon) + ListItem.IsParentFolder">$INFO[ListItem.Icon]</value>
		<value condition="!String.IsEmpty(ListItem.Icon) + !String.Contains(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
		<value condition="String.IsEmpty(Container.Content) + !String.Contains(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
		<value condition="Container.Content(studios) + !String.IsEmpty(Skin.String(custom-moviestudioicons.path))">$INFO[Skin.String(custom-moviestudioicons.path)]$INFO[ListItem.Label]$INFO[Skin.String(custom-moviestudioicons.ext)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(custom-moviegenresicons.path))">$INFO[Skin.String(custom-moviegenresicons.path)]$INFO[ListItem.Label]$INFO[Skin.String(custom-moviegenresicons.ext)]</value>
		<value condition="Container.Content(actors) | Container.Content(directors)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultYear.png</value>
		<value condition="Container.Content(playlists)">DefaultPlaylist.png</value>
		<value condition="Container.Content(movies)">DefaultMovies.png</value>
		<value condition="Container.Content(musicvideos)">DefaultMusicVideos.png</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]">DefaultTvshows.png</value>
		<value condition="Container.Content(addons)">DefaultAddon.png</value>
		<value>DefaultVideo.png</value>
	</variable>
	<variable name="IconPoster2">
		<value condition="!Container.Scrolling + !System.ScreenSaverActive + !String.IsEmpty(ListItem.Art(animatedposter)) + Skin.HasSetting(SkinHelper.EnableAnimatedPosters)">$INFO[ListItem.Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster)) + String.isEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Icon) + ListItem.IsParentFolder">$INFO[ListItem.Icon]</value>
		<value condition="!String.IsEmpty(ListItem.Icon) + !String.Contains(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
		<value condition="String.IsEmpty(Container.Content) + !String.Contains(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
		<value condition="Container.Content(studios) + !String.IsEmpty(Skin.String(custom-moviestudioicons.path))">$INFO[Skin.String(custom-moviestudioicons.path)]$INFO[ListItem.Label]$INFO[Skin.String(custom-moviestudioicons.ext)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(custom-moviegenresicons.path))">$INFO[Skin.String(custom-moviegenresicons.path)]$INFO[ListItem.Label]$INFO[Skin.String(custom-moviegenresicons.ext)]</value>
		<value condition="Container.Content(actors) | Container.Content(directors)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultYear.png</value>
		<value condition="Container.Content(playlists)">DefaultPlaylist.png</value>
		<value condition="Container.Content(movies)">DefaultMovies.png</value>
		<value condition="Container.Content(musicvideos)">DefaultMusicVideos.png</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]">DefaultTvshows.png</value>
		<value condition="Container.Content(addons)">DefaultAddon.png</value>
		<value>DefaultVideo.png</value>
	</variable>
	<variable name="Icon(-5)Poster">
		<value condition="!Container().Scrolling + !System.ScreenSaverActive + !String.IsEmpty(ListItem(-5).Art(animatedposter)) + Skin.HasSetting(SkinHelper.EnableAnimatedPosters)">$INFO[ListItem(-5).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(-5).Art(poster))">$INFO[ListItem(-5).Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem(-5).Icon) + !String.Contains(ListItem(-5).Icon,Default)">$INFO[ListItem(-5).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(-5).Art(thumb))">$INFO[ListItem(-5).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(-5).Icon) + String.Contains(ListItem(-5).Icon,DefaultFolderBack)">$INFO[ListItem(-5).Icon]</value>
		<value condition="Container.Content(actors) | Container.Content(directors)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultYear.png</value>
		<value condition="Container.Content(playlists)">DefaultPlaylist.png</value>
		<value condition="Container.Content(movies)">DefaultMovies.png</value>
		<value condition="Container.Content(musicvideos)">DefaultMusicVideos.png</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]">DefaultTvshows.png</value>
		<value condition="Container.Content(addons)">DefaultAddon.png</value>
		<value condition="Container.Content(countries)">DefaultCountries.png</value>
		<value>DefaultVideo.png</value>
	</variable>
	<variable name="Icon(-4)Poster">
		<value condition="!Container().Scrolling + !System.ScreenSaverActive + !String.IsEmpty(ListItem(-4).Art(animatedposter)) + Skin.HasSetting(SkinHelper.EnableAnimatedPosters)">$INFO[ListItem(-4).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(-4).Art(poster))">$INFO[ListItem(-4).Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem(-4).Icon) + !String.Contains(ListItem(-4).Icon,Default)">$INFO[ListItem(-4).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(-4).Art(thumb))">$INFO[ListItem(-4).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(-4).Icon) + String.Contains(ListItem(-4).Icon,DefaultFolderBack)">$INFO[ListItem(-4).Icon]</value>
		<value condition="Container.Content(actors) | Container.Content(directors)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultYear.png</value>
		<value condition="Container.Content(playlists)">DefaultPlaylist.png</value>
		<value condition="Container.Content(movies)">DefaultMovies.png</value>
		<value condition="Container.Content(musicvideos)">DefaultMusicVideos.png</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]">DefaultTvshows.png</value>
		<value condition="Container.Content(addons)">DefaultAddon.png</value>
		<value condition="Container.Content(countries)">DefaultCountries.png</value>
		<value>DefaultVideo.png</value>
	</variable>
	<variable name="Icon(-3)Poster">
		<value condition="!Container().Scrolling + !System.ScreenSaverActive + !String.IsEmpty(ListItem(-3).Art(animatedposter)) + Skin.HasSetting(SkinHelper.EnableAnimatedPosters)">$INFO[ListItem(-3).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(-3).Art(poster))">$INFO[ListItem(-3).Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem(-3).Icon) + !String.Contains(ListItem(-3).Icon,Default)">$INFO[ListItem(-3).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(-3).Art(thumb))">$INFO[ListItem(-3).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(-3).Icon) + String.Contains(ListItem(-3).Icon,DefaultFolderBack)">$INFO[ListItem(-3).Icon]</value>
		<value condition="Container.Content(actors) | Container.Content(directors)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultYear.png</value>
		<value condition="Container.Content(playlists)">DefaultPlaylist.png</value>
		<value condition="Container.Content(movies)">DefaultMovies.png</value>
		<value condition="Container.Content(musicvideos)">DefaultMusicVideos.png</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]">DefaultTvshows.png</value>
		<value condition="Container.Content(addons)">DefaultAddon.png</value>
		<value condition="Container.Content(countries)">DefaultCountries.png</value>
		<value>DefaultVideo.png</value>
	</variable>
	<variable name="Icon(-2)Poster">
		<value condition="!Container().Scrolling + !System.ScreenSaverActive + !String.IsEmpty(ListItem(-2).Art(animatedposter)) + Skin.HasSetting(SkinHelper.EnableAnimatedPosters)">$INFO[ListItem(-2).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(-2).Art(poster))">$INFO[ListItem(-2).Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem(-2).Icon) + !String.Contains(ListItem(-2).Icon,Default)">$INFO[ListItem(-2).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(-2).Art(thumb))">$INFO[ListItem(-2).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(-2).Icon) + String.Contains(ListItem(-2).Icon,DefaultFolderBack)">$INFO[ListItem(-2).Icon]</value>
		<value condition="Container.Content(actors) | Container.Content(directors)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultYear.png</value>
		<value condition="Container.Content(playlists)">DefaultPlaylist.png</value>
		<value condition="Container.Content(movies)">DefaultMovies.png</value>
		<value condition="Container.Content(musicvideos)">DefaultMusicVideos.png</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]">DefaultTvshows.png</value>
		<value condition="Container.Content(addons)">DefaultAddon.png</value>
		<value condition="Container.Content(countries)">DefaultCountries.png</value>
		<value>DefaultVideo.png</value>
	</variable>
	<variable name="Icon(-1)Poster">
		<value condition="!Container().Scrolling + !System.ScreenSaverActive + !String.IsEmpty(ListItem(-1).Art(animatedposter)) + Skin.HasSetting(SkinHelper.EnableAnimatedPosters)">$INFO[ListItem(-1).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(-1).Art(poster))">$INFO[ListItem(-1).Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem(-1).Icon) + !String.Contains(ListItem(-1).Icon,Default)">$INFO[ListItem(-1).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(-1).Art(thumb))">$INFO[ListItem(-1).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(-1).Icon) + String.Contains(ListItem(-1).Icon,DefaultFolderBack)">$INFO[ListItem(-1).Icon]</value>
		<value condition="Container.Content(actors) | Container.Content(directors)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultYear.png</value>
		<value condition="Container.Content(playlists)">DefaultPlaylist.png</value>
		<value condition="Container.Content(movies)">DefaultMovies.png</value>
		<value condition="Container.Content(musicvideos)">DefaultMusicVideos.png</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]">DefaultTvshows.png</value>
		<value condition="Container.Content(addons)">DefaultAddon.png</value>
		<value condition="Container.Content(countries)">DefaultCountries.png</value>
		<value>DefaultVideo.png</value>
	</variable>
	<variable name="Icon(0)Poster">
		<value condition="!Container().Scrolling + !System.ScreenSaverActive + !String.IsEmpty(ListItem(0).Art(animatedposter)) + Skin.HasSetting(SkinHelper.EnableAnimatedPosters)">$INFO[ListItem(0).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(0).Art(poster))">$INFO[ListItem(0).Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem(0).Icon) + !String.Contains(ListItem(0).Icon,Default)">$INFO[ListItem(0).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(0).Art(thumb))">$INFO[ListItem(0).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(0).Icon) + String.Contains(ListItem(0).Icon,DefaultFolderBack)">$INFO[ListItem(0).Icon]</value>
		<value condition="Container.Content(actors) | Container.Content(directors)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultYear.png</value>
		<value condition="Container.Content(playlists)">DefaultPlaylist.png</value>
		<value condition="Container.Content(movies)">DefaultMovies.png</value>
		<value condition="Container.Content(musicvideos)">DefaultMusicVideos.png</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]">DefaultTvshows.png</value>
		<value condition="Container.Content(addons)">DefaultAddon.png</value>
		<value condition="Container.Content(countries)">DefaultCountries.png</value>
		<value>DefaultVideo.png</value>
	</variable>
	<variable name="Icon(1)Poster">
		<value condition="!Container().Scrolling + !System.ScreenSaverActive + !String.IsEmpty(ListItem(1).Art(animatedposter)) + Skin.HasSetting(SkinHelper.EnableAnimatedPosters)">$INFO[ListItem(1).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(1).Art(poster))">$INFO[ListItem(1).Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem(1).Icon) + !String.Contains(ListItem(1).Icon,Default)">$INFO[ListItem(1).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(1).Art(thumb))">$INFO[ListItem(1).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(1).Icon) + String.Contains(ListItem(1).Icon,DefaultFolderBack)">$INFO[ListItem(1).Icon]</value>
		<value condition="Container.Content(actors) | Container.Content(directors)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultYear.png</value>
		<value condition="Container.Content(playlists)">DefaultPlaylist.png</value>
		<value condition="Container.Content(movies)">DefaultMovies.png</value>
		<value condition="Container.Content(musicvideos)">DefaultMusicVideos.png</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]">DefaultTvshows.png</value>
		<value condition="Container.Content(addons)">DefaultAddon.png</value>
		<value condition="Container.Content(countries)">DefaultCountries.png</value>
		<value>DefaultVideo.png</value>
	</variable>
	<variable name="Icon(2)Poster">
		<value condition="!Container().Scrolling + !System.ScreenSaverActive + !String.IsEmpty(ListItem(2).Art(animatedposter)) + Skin.HasSetting(SkinHelper.EnableAnimatedPosters)">$INFO[ListItem(2).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(2).Art(poster))">$INFO[ListItem(2).Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem(2).Icon) + !String.Contains(ListItem(2).Icon,Default)">$INFO[ListItem(2).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(2).Art(thumb))">$INFO[ListItem(2).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(2).Icon) + String.Contains(ListItem(2).Icon,DefaultFolderBack)">$INFO[ListItem(2).Icon]</value>
		<value condition="Container.Content(actors) | Container.Content(directors)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultYear.png</value>
		<value condition="Container.Content(playlists)">DefaultPlaylist.png</value>
		<value condition="Container.Content(movies)">DefaultMovies.png</value>
		<value condition="Container.Content(musicvideos)">DefaultMusicVideos.png</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]">DefaultTvshows.png</value>
		<value condition="Container.Content(addons)">DefaultAddon.png</value>
		<value condition="Container.Content(countries)">DefaultCountries.png</value>
		<value>DefaultVideo.png</value>
	</variable>
	<variable name="Icon(3)Poster">
		<value condition="!Container().Scrolling + !System.ScreenSaverActive + !String.IsEmpty(ListItem(3).Art(animatedposter)) + Skin.HasSetting(SkinHelper.EnableAnimatedPosters)">$INFO[ListItem(3).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(3).Art(poster))">$INFO[ListItem(3).Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem(3).Icon) + !String.Contains(ListItem(3).Icon,Default)">$INFO[ListItem(3).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(3).Art(thumb))">$INFO[ListItem(3).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(3).Icon) + String.Contains(ListItem(3).Icon,DefaultFolderBack)">$INFO[ListItem(3).Icon]</value>
		<value condition="Container.Content(actors) | Container.Content(directors)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultYear.png</value>
		<value condition="Container.Content(playlists)">DefaultPlaylist.png</value>
		<value condition="Container.Content(movies)">DefaultMovies.png</value>
		<value condition="Container.Content(musicvideos)">DefaultMusicVideos.png</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]">DefaultTvshows.png</value>
		<value condition="Container.Content(addons)">DefaultAddon.png</value>
		<value condition="Container.Content(countries)">DefaultCountries.png</value>
		<value>DefaultVideo.png</value>
	</variable>
	<variable name="Icon(4)Poster">
		<value condition="!Container().Scrolling + !System.ScreenSaverActive + !String.IsEmpty(ListItem(4).Art(animatedposter)) + Skin.HasSetting(SkinHelper.EnableAnimatedPosters)">$INFO[ListItem(4).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(4).Art(poster))">$INFO[ListItem(4).Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem(4).Icon) + !String.Contains(ListItem(4).Icon,Default)">$INFO[ListItem(4).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(4).Art(thumb))">$INFO[ListItem(4).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(4).Icon) + String.Contains(ListItem(4).Icon,DefaultFolderBack)">$INFO[ListItem(4).Icon]</value>
		<value condition="Container.Content(actors) | Container.Content(directors)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultYear.png</value>
		<value condition="Container.Content(playlists)">DefaultPlaylist.png</value>
		<value condition="Container.Content(movies)">DefaultMovies.png</value>
		<value condition="Container.Content(musicvideos)">DefaultMusicVideos.png</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]">DefaultTvshows.png</value>
		<value condition="Container.Content(addons)">DefaultAddon.png</value>
		<value condition="Container.Content(countries)">DefaultCountries.png</value>
		<value>DefaultVideo.png</value>
	</variable>
	<variable name="Icon(5)Poster">
		<value condition="!Container().Scrolling + !System.ScreenSaverActive + !String.IsEmpty(ListItem(5).Art(animatedposter)) + Skin.HasSetting(SkinHelper.EnableAnimatedPosters)">$INFO[ListItem(5).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(5).Art(poster))">$INFO[ListItem(5).Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem(5).Icon) + !String.Contains(ListItem(5).Icon,Default)">$INFO[ListItem(5).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(5).Art(thumb))">$INFO[ListItem(5).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(5).Icon) + String.Contains(ListItem(-5).Icon,DefaultFolderBack)">$INFO[ListItem(5).Icon]</value>
		<value condition="Container.Content(actors) | Container.Content(directors)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultYear.png</value>
		<value condition="Container.Content(playlists)">DefaultPlaylist.png</value>
		<value condition="Container.Content(movies)">DefaultMovies.png</value>
		<value condition="Container.Content(musicvideos)">DefaultMusicVideos.png</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]">DefaultTvshows.png</value>
		<value condition="Container.Content(addons)">DefaultAddon.png</value>
		<value condition="Container.Content(countries)">DefaultCountries.png</value>
		<value>DefaultVideo.png</value>
	</variable>
	<variable name="IconCover">
		<value condition="!String.IsEmpty(ListItem.Icon) + !String.Contains(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
		<value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem.Icon) + ListItem.IsParentFolder">$INFO[ListItem.Icon]</value>
		<value condition="Container.Content(genres)">$INFO[Skin.String(custom-musicgenresicons.path)]$INFO[ListItem.Label]$INFO[Skin.String(custom-musicgenresicons.ext)]</value>
		<value condition="Container.Content(musicvideos)">DefaultMusicVideos.png</value>
		<value condition="Container.Content(artists)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultMusicYears.png</value>
		<value condition="Container.Content(addons)">DefaultAddonMusic.png</value>
		<value>DefaultAudio.png</value>
	</variable>
	<variable name="Icon(-5)Cover">
		<value condition="!String.IsEmpty(ListItem(-5).Icon) + !String.Contains(ListItem(-5).Icon,Default)">$INFO[ListItem(-5).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(-5).Art(thumb))">$INFO[ListItem(-5).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(-5).Icon) + String.Contains(ListItem(-5).Icon,DefaultFolderBack)">$INFO[ListItem(-5).Icon]</value>
		<value condition="Container.Content(genres)">$INFO[Skin.String(custom-musicgenresicons.path)]$INFO[ListItem(-5).Label]$INFO[Skin.String(custom-musicgenresicons.ext)]</value>
		<value condition="Container.Content(musicvideos)">DefaultMusicVideos.png</value>
		<value condition="Container.Content(artists)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultMusicYears.png</value>
		<value condition="Container.Content(addons)">DefaultAddonMusic.png</value>
		<value>DefaultAudio.png</value>
	</variable>
	<variable name="Icon(-4)Cover">
		<value condition="!String.IsEmpty(ListItem(-4).Icon) + !String.Contains(ListItem(-4).Icon,Default)">$INFO[ListItem(-4).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(-4).Art(thumb))">$INFO[ListItem(-4).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(-4).Icon) + String.Contains(ListItem(-4).Icon,DefaultFolderBack)">$INFO[ListItem(-4).Icon]</value>
		<value condition="Container.Content(genres)">$INFO[Skin.String(custom-musicgenresicons.path)]$INFO[ListItem(-4).Label]$INFO[Skin.String(custom-musicgenresicons.ext)]</value>
		<value condition="Container.Content(musicvideos)">DefaultMusicVideos.png</value>
		<value condition="Container.Content(artists)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultMusicYears.png</value>
		<value condition="Container.Content(addons)">DefaultAddonMusic.png</value>
		<value>DefaultAudio.png</value>
	</variable>
	<variable name="Icon(-3)Cover">
		<value condition="!String.IsEmpty(ListItem(-3).Icon) + !String.Contains(ListItem(-3).Icon,Default)">$INFO[ListItem(-3).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(-3).Art(thumb))">$INFO[ListItem(-3).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(-3).Icon) + String.Contains(ListItem(-3).Icon,DefaultFolderBack)">$INFO[ListItem(-3).Icon]</value>
		<value condition="Container.Content(genres)">$INFO[Skin.String(custom-musicgenresicons.path)]$INFO[ListItem(-3).Label]$INFO[Skin.String(custom-musicgenresicons.ext)]</value>
		<value condition="Container.Content(musicvideos)">DefaultMusicVideos.png</value>
		<value condition="Container.Content(artists)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultMusicYears.png</value>
		<value condition="Container.Content(addons)">DefaultAddonMusic.png</value>
		<value>DefaultAudio.png</value>
	</variable>
	<variable name="Icon(-2)Cover">
		<value condition="!String.IsEmpty(ListItem(-2).Icon) + !String.Contains(ListItem(-2).Icon,Default)">$INFO[ListItem(-2).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(-2).Art(thumb))">$INFO[ListItem(-2).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(-2).Icon) + String.Contains(ListItem(-2).Icon,DefaultFolderBack)">$INFO[ListItem(-2).Icon]</value>
		<value condition="Container.Content(genres)">$INFO[Skin.String(custom-musicgenresicons.path)]$INFO[ListItem(-2).Label]$INFO[Skin.String(custom-musicgenresicons.ext)]</value>
		<value condition="Container.Content(musicvideos)">DefaultMusicVideos.png</value>
		<value condition="Container.Content(artists)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultMusicYears.png</value>
		<value condition="Container.Content(addons)">DefaultAddonMusic.png</value>
		<value>DefaultAudio.png</value>
	</variable>
	<variable name="Icon(-1)Cover">
		<value condition="!String.IsEmpty(ListItem(-1).Icon) + !String.Contains(ListItem(-1).Icon,Default)">$INFO[ListItem(-1).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(-1).Art(thumb))">$INFO[ListItem(-1).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(-1).Icon) + String.Contains(ListItem(-1).Icon,DefaultFolderBack)">$INFO[ListItem(-1).Icon]</value>
		<value condition="Container.Content(genres)">$INFO[Skin.String(custom-musicgenresicons.path)]$INFO[ListItem(-1).Label]$INFO[Skin.String(custom-musicgenresicons.ext)]</value>
		<value condition="Container.Content(musicvideos)">DefaultMusicVideos.png</value>
		<value condition="Container.Content(artists)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultMusicYears.png</value>
		<value condition="Container.Content(addons)">DefaultAddonMusic.png</value>
		<value>DefaultAudio.png</value>
	</variable>
	<variable name="Icon(0)Cover">
		<value condition="!String.IsEmpty(ListItem(0).Icon) + !String.Contains(ListItem(0).Icon,Default)">$INFO[ListItem(0).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(0).Art(thumb))">$INFO[ListItem(0).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(0).Icon) + String.Contains(ListItem(0).Icon,DefaultFolderBack)">$INFO[ListItem(0).Icon]</value>
		<value condition="Container.Content(genres)">$INFO[Skin.String(custom-musicgenresicons.path)]$INFO[ListItem(0).Label]$INFO[Skin.String(custom-musicgenresicons.ext)]</value>
		<value condition="Container.Content(musicvideos)">DefaultMusicVideos.png</value>
		<value condition="Container.Content(artists)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultMusicYears.png</value>
		<value condition="Container.Content(addons)">DefaultAddonMusic.png</value>
		<value>DefaultAudio.png</value>
	</variable>
	<variable name="Icon(1)Cover">
		<value condition="!String.IsEmpty(ListItem(1).Icon) + !String.Contains(ListItem(1).Icon,Default)">$INFO[ListItem(1).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(1).Art(thumb))">$INFO[ListItem(1).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(1).Icon) + String.Contains(ListItem(1).Icon,DefaultFolderBack)">$INFO[ListItem(1).Icon]</value>
		<value condition="Container.Content(genres)">$INFO[Skin.String(custom-musicgenresicons.path)]$INFO[ListItem(1).Label]$INFO[Skin.String(custom-musicgenresicons.ext)]</value>
		<value condition="Container.Content(musicvideos)">DefaultMusicVideos.png</value>
		<value condition="Container.Content(artists)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultMusicYears.png</value>
		<value condition="Container.Content(addons)">DefaultAddonMusic.png</value>
		<value>DefaultAudio.png</value>
	</variable>
	<variable name="Icon(2)Cover">
		<value condition="!String.IsEmpty(ListItem(2).Icon) + !String.Contains(ListItem(2).Icon,Default)">$INFO[ListItem(2).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(2).Art(thumb))">$INFO[ListItem(2).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(2).Icon) + String.Contains(ListItem(2).Icon,DefaultFolderBack)">$INFO[ListItem(2).Icon]</value>
		<value condition="Container.Content(genres)">$INFO[Skin.String(custom-musicgenresicons.path)]$INFO[ListItem(2).Label]$INFO[Skin.String(custom-musicgenresicons.ext)]</value>
		<value condition="Container.Content(musicvideos)">DefaultMusicVideos.png</value>
		<value condition="Container.Content(artists)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultMusicYears.png</value>
		<value condition="Container.Content(addons)">DefaultAddonMusic.png</value>
		<value>DefaultAudio.png</value>
	</variable>
	<variable name="Icon(3)Cover">
		<value condition="!String.IsEmpty(ListItem(3).Icon) + !String.Contains(ListItem(3).Icon,Default)">$INFO[ListItem(3).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(3).Art(thumb))">$INFO[ListItem(3).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(3).Icon) + String.Contains(ListItem(3).Icon,DefaultFolderBack)">$INFO[ListItem(3).Icon]</value>
		<value condition="Container.Content(genres)">$INFO[Skin.String(custom-musicgenresicons.path)]$INFO[ListItem(3).Label]$INFO[Skin.String(custom-musicgenresicons.ext)]</value>
		<value condition="Container.Content(musicvideos)">DefaultMusicVideos.png</value>
		<value condition="Container.Content(artists)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultMusicYears.png</value>
		<value condition="Container.Content(addons)">DefaultAddonMusic.png</value>
		<value>DefaultAudio.png</value>
	</variable>
	<variable name="Icon(4)Cover">
		<value condition="!String.IsEmpty(ListItem(4).Icon) + !String.Contains(ListItem(4).Icon,Default)">$INFO[ListItem(4).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(4).Art(thumb))">$INFO[ListItem(4).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(4).Icon) + String.Contains(ListItem(4).Icon,DefaultFolderBack)">$INFO[ListItem(4).Icon]</value>
		<value condition="Container.Content(genres)">$INFO[Skin.String(custom-musicgenresicons.path)]$INFO[ListItem(4).Label]$INFO[Skin.String(custom-musicgenresicons.ext)]</value>
		<value condition="Container.Content(musicvideos)">DefaultMusicVideos.png</value>
		<value condition="Container.Content(artists)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultMusicYears.png</value>
		<value condition="Container.Content(addons)">DefaultAddonMusic.png</value>
		<value>DefaultAudio.png</value>
	</variable>
	<variable name="Icon(5)Cover">
		<value condition="!String.IsEmpty(ListItem(5).Icon) + !String.Contains(ListItem(5).Icon,Default)">$INFO[ListItem(5).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(5).Art(thumb))">$INFO[ListItem(5).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(5).Icon) + String.Contains(ListItem(5).Icon,DefaultFolderBack)">$INFO[ListItem(5).Icon]</value>
		<value condition="Container.Content(genres)">$INFO[Skin.String(custom-musicgenresicons.path)]$INFO[ListItem(5).Label]$INFO[Skin.String(custom-musicgenresicons.ext)]</value>
		<value condition="Container.Content(musicvideos)">DefaultMusicVideos.png</value>
		<value condition="Container.Content(artists)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultMusicYears.png</value>
		<value condition="Container.Content(addons)">DefaultAddonMusic.png</value>
		<value>DefaultAudio.png</value>
	</variable>
	<variable name="Icon(8)Poster">
		<value condition="Container.Position(0) + !String.IsEmpty(Container.ListItemNoWrap(8).Art(poster))">$INFO[Container.ListItemNoWrap(8).Art(poster)]</value>
		<value condition="Container.Position(0)">$INFO[Container.ListItemNoWrap(8).Icon]</value>
		<value condition="Container.Position(1) + !String.IsEmpty(Container.ListItemNoWrap(7).Art(poster))">$INFO[Container.ListItemNoWrap(7).Art(poster)]</value>
		<value condition="Container.Position(1)">$INFO[Container.ListItemNoWrap(7).Icon]</value>
		<value condition="Container.Position(2) + !String.IsEmpty(Container.ListItemNoWrap(6).Art(poster))">$INFO[Container.ListItemNoWrap(6).Art(poster)]</value>
		<value condition="Container.Position(2)">$INFO[Container.ListItemNoWrap(6).Icon]</value>
		<value condition="Container.Position(3) + !String.IsEmpty(Container.ListItemNoWrap(5).Art(poster))">$INFO[Container.ListItemNoWrap(5).Art(poster)]</value>
		<value condition="Container.Position(3)">$INFO[Container.ListItemNoWrap(5).Icon]</value>
		<value condition="Container.Position(4) + !String.IsEmpty(Container.ListItemNoWrap(4).Art(poster))">$INFO[Container.ListItemNoWrap(4).Art(poster)]</value>
		<value condition="Container.Position(4)">$INFO[Container.ListItemNoWrap(4).Icon]</value>
		<value condition="Container.Position(5) + !String.IsEmpty(Container.ListItemNoWrap(3).Art(poster))">$INFO[Container.ListItemNoWrap(3).Art(poster)]</value>
		<value condition="Container.Position(5)">$INFO[Container.ListItemNoWrap(3).Icon]</value>
		<value condition="Container.Position(6) + !String.IsEmpty(Container.ListItemNoWrap(2).Art(poster))">$INFO[Container.ListItemNoWrap(2).Art(poster)]</value>
		<value condition="Container.Position(6)">$INFO[Container.ListItemNoWrap(2).Icon]</value>
		<value condition="Container.Position(7) + !String.IsEmpty(Container.ListItemNoWrap(1).Art(poster))">$INFO[Container.ListItemNoWrap(1).Art(poster)]</value>
		<value condition="Container.Position(7)">$INFO[Container.ListItemNoWrap(1).Icon]</value>
	</variable>
	<variable name="Icon(9)Poster">
		<value condition="Container.Position(0) + !String.IsEmpty(Container.ListItemNoWrap(9).Art(poster))">$INFO[Container.ListItemNoWrap(9).Art(poster)]</value>
		<value condition="Container.Position(0)">$INFO[Container.ListItemNoWrap(9).Icon]</value>
		<value condition="Container.Position(1) + !String.IsEmpty(Container.ListItemNoWrap(8).Art(poster))">$INFO[Container.ListItemNoWrap(8).Art(poster)]</value>
		<value condition="Container.Position(1)">$INFO[Container.ListItemNoWrap(8).Icon]</value>
		<value condition="Container.Position(2) + !String.IsEmpty(Container.ListItemNoWrap(7).Art(poster))">$INFO[Container.ListItemNoWrap(7).Art(poster)]</value>
		<value condition="Container.Position(2)">$INFO[Container.ListItemNoWrap(7).Icon]</value>
		<value condition="Container.Position(3) + !String.IsEmpty(Container.ListItemNoWrap(6).Art(poster))">$INFO[Container.ListItemNoWrap(6).Art(poster)]</value>
		<value condition="Container.Position(3)">$INFO[Container.ListItemNoWrap(6).Icon]</value>
		<value condition="Container.Position(4) + !String.IsEmpty(Container.ListItemNoWrap(5).Art(poster))">$INFO[Container.ListItemNoWrap(5).Art(poster)]</value>
		<value condition="Container.Position(4)">$INFO[Container.ListItemNoWrap(5).Icon]</value>
		<value condition="Container.Position(5) + !String.IsEmpty(Container.ListItemNoWrap(4).Art(poster))">$INFO[Container.ListItemNoWrap(4).Art(poster)]</value>
		<value condition="Container.Position(5)">$INFO[Container.ListItemNoWrap(4).Icon]</value>
		<value condition="Container.Position(6) + !String.IsEmpty(Container.ListItemNoWrap(3).Art(poster))">$INFO[Container.ListItemNoWrap(3).Art(poster)]</value>
		<value condition="Container.Position(6)">$INFO[Container.ListItemNoWrap(3).Icon]</value>
		<value condition="Container.Position(7) + !String.IsEmpty(Container.ListItemNoWrap(2).Art(poster))">$INFO[Container.ListItemNoWrap(2).Art(poster)]</value>
		<value condition="Container.Position(7)">$INFO[Container.ListItemNoWrap(2).Icon]</value>
	</variable>
	<variable name="Icon(10)Poster">
		<value condition="Container.Position(0) + !String.IsEmpty(Container.ListItemNoWrap(10).Art(poster))">$INFO[Container.ListItemNoWrap(10).Art(poster)]</value>
		<value condition="Container.Position(0)">$INFO[Container.ListItemNoWrap(10).Icon]</value>
		<value condition="Container.Position(1) + !String.IsEmpty(Container.ListItemNoWrap(9).Art(poster))">$INFO[Container.ListItemNoWrap(9).Art(poster)]</value>
		<value condition="Container.Position(1)">$INFO[Container.ListItemNoWrap(9).Icon]</value>
		<value condition="Container.Position(2) + !String.IsEmpty(Container.ListItemNoWrap(8).Art(poster))">$INFO[Container.ListItemNoWrap(8).Art(poster)]</value>
		<value condition="Container.Position(2)">$INFO[Container.ListItemNoWrap(8).Icon]</value>
		<value condition="Container.Position(3) + !String.IsEmpty(Container.ListItemNoWrap(7).Art(poster))">$INFO[Container.ListItemNoWrap(7).Art(poster)]</value>
		<value condition="Container.Position(3)">$INFO[Container.ListItemNoWrap(7).Icon]</value>
		<value condition="Container.Position(4) + !String.IsEmpty(Container.ListItemNoWrap(6).Art(poster))">$INFO[Container.ListItemNoWrap(6).Art(poster)]</value>
		<value condition="Container.Position(4)">$INFO[Container.ListItemNoWrap(6).Icon]</value>
		<value condition="Container.Position(5) + !String.IsEmpty(Container.ListItemNoWrap(5).Art(poster))">$INFO[Container.ListItemNoWrap(5).Art(poster)]</value>
		<value condition="Container.Position(5)">$INFO[Container.ListItemNoWrap(5).Icon]</value>
		<value condition="Container.Position(6) + !String.IsEmpty(Container.ListItemNoWrap(4).Art(poster))">$INFO[Container.ListItemNoWrap(4).Art(poster)]</value>
		<value condition="Container.Position(6)">$INFO[Container.ListItemNoWrap(4).Icon]</value>
		<value condition="Container.Position(7) + !String.IsEmpty(Container.ListItemNoWrap(3).Art(poster))">$INFO[Container.ListItemNoWrap(3).Art(poster)]</value>
		<value condition="Container.Position(7)">$INFO[Container.ListItemNoWrap(3).Icon]</value>
	</variable>
	<variable name="Icon(11)Poster">
		<value condition="Container.Position(0) + !String.IsEmpty(Container.ListItemNoWrap(11).Art(poster))">$INFO[Container.ListItemNoWrap(11).Art(poster)]</value>
		<value condition="Container.Position(0)">$INFO[Container.ListItemNoWrap(11).Icon]</value>
		<value condition="Container.Position(1) + !String.IsEmpty(Container.ListItemNoWrap(10).Art(poster))">$INFO[Container.ListItemNoWrap(10).Art(poster)]</value>
		<value condition="Container.Position(1)">$INFO[Container.ListItemNoWrap(10).Icon]</value>
		<value condition="Container.Position(2) + !String.IsEmpty(Container.ListItemNoWrap(9).Art(poster))">$INFO[Container.ListItemNoWrap(9).Art(poster)]</value>
		<value condition="Container.Position(2)">$INFO[Container.ListItemNoWrap(9).Icon]</value>
		<value condition="Container.Position(3) + !String.IsEmpty(Container.ListItemNoWrap(8).Art(poster))">$INFO[Container.ListItemNoWrap(8).Art(poster)]</value>
		<value condition="Container.Position(3)">$INFO[Container.ListItemNoWrap(8).Icon]</value>
		<value condition="Container.Position(4) + !String.IsEmpty(Container.ListItemNoWrap(7).Art(poster))">$INFO[Container.ListItemNoWrap(7).Art(poster)]</value>
		<value condition="Container.Position(4)">$INFO[Container.ListItemNoWrap(7).Icon]</value>
		<value condition="Container.Position(5) + !String.IsEmpty(Container.ListItemNoWrap(6).Art(poster))">$INFO[Container.ListItemNoWrap(6).Art(poster)]</value>
		<value condition="Container.Position(5)">$INFO[Container.ListItemNoWrap(6).Icon]</value>
		<value condition="Container.Position(6) + !String.IsEmpty(Container.ListItemNoWrap(5).Art(poster))">$INFO[Container.ListItemNoWrap(5).Art(poster)]</value>
		<value condition="Container.Position(6)">$INFO[Container.ListItemNoWrap(5).Icon]</value>
		<value condition="Container.Position(7) + !String.IsEmpty(Container.ListItemNoWrap(4).Art(poster))">$INFO[Container.ListItemNoWrap(4).Art(poster)]</value>
		<value condition="Container.Position(7)">$INFO[Container.ListItemNoWrap(4).Icon]</value>
	</variable>
	<variable name="Icon(8)VideoIcon">
		<value condition="Container.Position(0)">$INFO[Container.ListItemNoWrap(8).Icon]</value>
		<value condition="Container.Position(1)">$INFO[Container.ListItemNoWrap(7).Icon]</value>
		<value condition="Container.Position(2)">$INFO[Container.ListItemNoWrap(6).Icon]</value>
		<value condition="Container.Position(3)">$INFO[Container.ListItemNoWrap(5).Icon]</value>
		<value condition="Container.Position(4)">$INFO[Container.ListItemNoWrap(4).Icon]</value>
		<value condition="Container.Position(5)">$INFO[Container.ListItemNoWrap(3).Icon]</value>
		<value condition="Container.Position(6)">$INFO[Container.ListItemNoWrap(2).Icon]</value>
		<value condition="Container.Position(7)">$INFO[Container.ListItemNoWrap(1).Icon]</value>
	</variable>
	<variable name="Icon(9)VideoIcon">
		<value condition="Container.Position(0)">$INFO[Container.ListItemNoWrap(9).Icon]</value>
		<value condition="Container.Position(1)">$INFO[Container.ListItemNoWrap(8).Icon]</value>
		<value condition="Container.Position(2)">$INFO[Container.ListItemNoWrap(7).Icon]</value>
		<value condition="Container.Position(3)">$INFO[Container.ListItemNoWrap(6).Icon]</value>
		<value condition="Container.Position(4)">$INFO[Container.ListItemNoWrap(5).Icon]</value>
		<value condition="Container.Position(5)">$INFO[Container.ListItemNoWrap(4).Icon]</value>
		<value condition="Container.Position(6)">$INFO[Container.ListItemNoWrap(3).Icon]</value>
		<value condition="Container.Position(7)">$INFO[Container.ListItemNoWrap(2).Icon]</value>
	</variable>
	<variable name="Icon(10)VideoIcon">
		<value condition="Container.Position(0)">$INFO[Container.ListItemNoWrap(10).Icon]</value>
		<value condition="Container.Position(1)">$INFO[Container.ListItemNoWrap(9).Icon]</value>
		<value condition="Container.Position(2)">$INFO[Container.ListItemNoWrap(8).Icon]</value>
		<value condition="Container.Position(3)">$INFO[Container.ListItemNoWrap(7).Icon]</value>
		<value condition="Container.Position(4)">$INFO[Container.ListItemNoWrap(6).Icon]</value>
		<value condition="Container.Position(5)">$INFO[Container.ListItemNoWrap(5).Icon]</value>
		<value condition="Container.Position(6)">$INFO[Container.ListItemNoWrap(4).Icon]</value>
		<value condition="Container.Position(7)">$INFO[Container.ListItemNoWrap(3).Icon]</value>
	</variable>
	<variable name="Icon(11)VideoIcon">
		<value condition="Container.Position(0)">$INFO[Container.ListItemNoWrap(11).Icon]</value>
		<value condition="Container.Position(1)">$INFO[Container.ListItemNoWrap(10).Icon]</value>
		<value condition="Container.Position(2)">$INFO[Container.ListItemNoWrap(9).Icon]</value>
		<value condition="Container.Position(3)">$INFO[Container.ListItemNoWrap(8).Icon]</value>
		<value condition="Container.Position(4)">$INFO[Container.ListItemNoWrap(7).Icon]</value>
		<value condition="Container.Position(5)">$INFO[Container.ListItemNoWrap(6).Icon]</value>
		<value condition="Container.Position(6)">$INFO[Container.ListItemNoWrap(5).Icon]</value>
		<value condition="Container.Position(7)">$INFO[Container.ListItemNoWrap(4).Icon]</value>
	</variable>
	<variable name="Icon(10)Thumb">
		<value condition="Container.Position(0)">$INFO[Container.ListItemNoWrap(10).Icon]</value>
		<value condition="Container.Position(1)">$INFO[Container.ListItemNoWrap(9).Icon]</value>
		<value condition="Container.Position(2)">$INFO[Container.ListItemNoWrap(8).Icon]</value>
		<value condition="Container.Position(3)">$INFO[Container.ListItemNoWrap(7).Icon]</value>
		<value condition="Container.Position(4)">$INFO[Container.ListItemNoWrap(6).Icon]</value>
		<value condition="Container.Position(5)">$INFO[Container.ListItemNoWrap(5).Icon]</value>
		<value condition="Container.Position(6)">$INFO[Container.ListItemNoWrap(4).Icon]</value>
		<value condition="Container.Position(7)">$INFO[Container.ListItemNoWrap(3).Icon]</value>
		<value condition="Container.Position(8)">$INFO[Container.ListItemNoWrap(2).Icon]</value>
		<value condition="Container.Position(9)">$INFO[Container.ListItemNoWrap(1).Icon]</value>
	</variable>
	<variable name="Icon(11)Thumb">
		<value condition="Container.Position(0)">$INFO[Container.ListItemNoWrap(11).Icon]</value>
		<value condition="Container.Position(1)">$INFO[Container.ListItemNoWrap(10).Icon]</value>
		<value condition="Container.Position(2)">$INFO[Container.ListItemNoWrap(9).Icon]</value>
		<value condition="Container.Position(3)">$INFO[Container.ListItemNoWrap(8).Icon]</value>
		<value condition="Container.Position(4)">$INFO[Container.ListItemNoWrap(7).Icon]</value>
		<value condition="Container.Position(5)">$INFO[Container.ListItemNoWrap(6).Icon]</value>
		<value condition="Container.Position(6)">$INFO[Container.ListItemNoWrap(5).Icon]</value>
		<value condition="Container.Position(7)">$INFO[Container.ListItemNoWrap(4).Icon]</value>
		<value condition="Container.Position(8)">$INFO[Container.ListItemNoWrap(3).Icon]</value>
		<value condition="Container.Position(9)">$INFO[Container.ListItemNoWrap(2).Icon]</value>
	</variable>
	<variable name="Icon(12)Thumb">
		<value condition="Container.Position(0)">$INFO[Container.ListItemNoWrap(12).Icon]</value>
		<value condition="Container.Position(1)">$INFO[Container.ListItemNoWrap(11).Icon]</value>
		<value condition="Container.Position(2)">$INFO[Container.ListItemNoWrap(10).Icon]</value>
		<value condition="Container.Position(3)">$INFO[Container.ListItemNoWrap(9).Icon]</value>
		<value condition="Container.Position(4)">$INFO[Container.ListItemNoWrap(8).Icon]</value>
		<value condition="Container.Position(5)">$INFO[Container.ListItemNoWrap(7).Icon]</value>
		<value condition="Container.Position(6)">$INFO[Container.ListItemNoWrap(6).Icon]</value>
		<value condition="Container.Position(7)">$INFO[Container.ListItemNoWrap(5).Icon]</value>
		<value condition="Container.Position(8)">$INFO[Container.ListItemNoWrap(4).Icon]</value>
		<value condition="Container.Position(9)">$INFO[Container.ListItemNoWrap(3).Icon]</value>
	</variable>
	<variable name="Icon(13)Thumb">
		<value condition="Container.Position(0)">$INFO[Container.ListItemNoWrap(13).Icon]</value>
		<value condition="Container.Position(1)">$INFO[Container.ListItemNoWrap(12).Icon]</value>
		<value condition="Container.Position(2)">$INFO[Container.ListItemNoWrap(11).Icon]</value>
		<value condition="Container.Position(3)">$INFO[Container.ListItemNoWrap(10).Icon]</value>
		<value condition="Container.Position(4)">$INFO[Container.ListItemNoWrap(9).Icon]</value>
		<value condition="Container.Position(5)">$INFO[Container.ListItemNoWrap(8).Icon]</value>
		<value condition="Container.Position(6)">$INFO[Container.ListItemNoWrap(7).Icon]</value>
		<value condition="Container.Position(7)">$INFO[Container.ListItemNoWrap(6).Icon]</value>
		<value condition="Container.Position(8)">$INFO[Container.ListItemNoWrap(5).Icon]</value>
		<value condition="Container.Position(9)">$INFO[Container.ListItemNoWrap(4).Icon]</value>
	</variable>
	<variable name="Icon(14)Thumb">
		<value condition="Container.Position(0)">$INFO[Container.ListItemNoWrap(14).Icon]</value>
		<value condition="Container.Position(1)">$INFO[Container.ListItemNoWrap(13).Icon]</value>
		<value condition="Container.Position(2)">$INFO[Container.ListItemNoWrap(12).Icon]</value>
		<value condition="Container.Position(3)">$INFO[Container.ListItemNoWrap(11).Icon]</value>
		<value condition="Container.Position(4)">$INFO[Container.ListItemNoWrap(10).Icon]</value>
		<value condition="Container.Position(5)">$INFO[Container.ListItemNoWrap(9).Icon]</value>
		<value condition="Container.Position(6)">$INFO[Container.ListItemNoWrap(8).Icon]</value>
		<value condition="Container.Position(7)">$INFO[Container.ListItemNoWrap(7).Icon]</value>
		<value condition="Container.Position(8)">$INFO[Container.ListItemNoWrap(6).Icon]</value>
		<value condition="Container.Position(9)">$INFO[Container.ListItemNoWrap(5).Icon]</value>
	</variable>
	<variable name="VideoLogo">
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.ClearLogo))">$INFO[Window(Home).Property(TMDbHelper.ListItem.ClearLogo)]</value>
        <value condition="String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.ClearLogo))">$INFO[ListItem.Art(clearlogo)]</value>
	</variable>
	<variable name="Label_SkinSetting_AutoTrailerTime">
		<value condition="!String.IsEmpty(Skin.String(autotrailertime))">$INFO[Skin.String(autotrailertime)]</value>
		<value>5</value>
	</variable>
    <variable name="Image_CropLogo">
        <value condition="!String.IsEmpty(Container(99950).ListItem.Art(cropimage))">$INFO[Container(99950).ListItem.Art(cropimage)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(base_clearlogo))">$INFO[Container(99950).ListItem.Property(base_clearlogo)]</value>
    </variable>
	<variable name="VideoLogos">
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.ClearLogo))">$INFO[Window(Home).Property(TMDbHelper.ListItem.CropImage)]</value>
	</variable>
	<variable name="ListViewVideoLogo">
		<value condition="!String.IsEmpty(ListItem.Art(clearlogo)) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(movies)]">$INFO[ListItem.Art(clearlogo)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.clearlogo)) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(TMDbHelper.ListItem.Art.Clearlogo)) + !ListItem.IsParentFolder">$INFO[Window(home).Property(TMDbHelper.ListItem.Art.Clearlogo)]</value>
	</variable>
	<variable name="PlayerVideoArt">
		<value condition="[VideoPlayer.Content(movies) | VideoPlayer.Content(episodes)] + !String.IsEmpty(Player.Art(clearart))">$INFO[Player.Art(clearart)]</value>
		<value condition="VideoPlayer.Content(episodes) + !String.IsEmpty(Player.Art(tvshow.clearart))">$INFO[Player.Art(tvshow.clearart)]</value>
		<value condition="!String.IsEmpty(Player.Art(clearlogo)) + [VideoPlayer.Content(movies) | VideoPlayer.Content(episodes)]">$INFO[Player.Art(clearlogo)]</value>
		<value condition="!String.IsEmpty(Player.Art(tvshow.clearlogo)) + VideoPlayer.Content(episodes)">$INFO[Player.Art(tvshow.clearlogo)]</value>
		<value condition="!String.IsEmpty(Player.Art(poster)) + VideoPlayer.Content(movies)">$INFO[Player.Art(poster)]</value>
		<value condition="!String.IsEmpty(VideoPlayer.cover) + VideoPlayer.Content(movies)">$INFO[VideoPlayer.Cover]</value>
		<value condition="!String.IsEmpty(Player.Art(tvshow.poster)) + VideoPlayer.Content(episodes)">$INFO[Player.Art(tvshow.poster)]</value>
		<value condition="!String.IsEmpty(Player.Art(tvshow.banner)) + VideoPlayer.Content(episodes)">$INFO[Player.Art(tvshow.banner)]</value>
		<value condition="!String.IsEmpty(Player.Art(thumb))">$INFO[Player.Art(thumb)]</value>
	</variable>
	<variable name="PlayerVideoCover">
		<value condition="!String.IsEmpty(Player.Art(poster)) + VideoPlayer.Content(movies)">$INFO[Player.Art(poster)]</value>
		<value condition="!String.IsEmpty(VideoPlayer.cover) + VideoPlayer.Content(movies)">$INFO[VideoPlayer.Cover]</value>
		<value condition="!String.IsEmpty(Player.Art(tvshow.poster)) + VideoPlayer.Content(episodes)">$INFO[Player.Art(tvshow.poster)]</value>
		<value condition="!String.IsEmpty(Player.Art(tvshow.banner)) + VideoPlayer.Content(episodes)">$INFO[Player.Art(tvshow.banner)]</value>
		<value condition="!String.IsEmpty(Player.Art(thumb))">$INFO[Player.Art(thumb)]</value>
	</variable>
	<variable name="PlayerMusicCover">
		<value condition="!String.IsEmpty(Window(home).Property(plugin.audio.streaming-radio.Thumb))">$INFO[Window(home).Property(plugin.audio.streaming-radio.Thumb)]</value>
		<value condition="Pvr.IsPlayingRadio + !String.IsEmpty(Window(home).Property(SkinHelper.PVR.ChannelLogo))">Window(home).Property(SkinHelper.PVR.ChannelLogo)</value>
		<value condition="!String.IsEmpty(MusicPlayer.Cover)">$INFO[MusicPlayer.Cover]</value>
		<value condition="!String.IsEmpty(Player.Art(thumb))">$INFO[Player.Art(thumb)]</value>
		<value condition="Pvr.IsPlayingRadio">icon-radio.png</value>
		<value>DefaultAudio.png</value>
	</variable>
	<variable name="PlayerMusicInfo1">
		<value condition="Player.IsInternetStream + !String.IsEmpty(Window(home).Property(plugin.audio.streaming-radio.Title))">$INFO[Window(home).Property(plugin.audio.streaming-radio.Title)]</value>
		<value condition="!Pvr.IsPlayingRadio + String.Contains(MusicPlayer.Genre,Classical)">$INFO[MusicPlayer.Property(Role.Composer)]</value>
		<value condition="Pvr.IsPlayingRadio">$INFO[MusicPlayer.ChannelName] - $INFO[MusicPlayer.Title]</value>
		<value condition="!String.IsEmpty(MusicPlayer.Title)">$INFO[MusicPlayer.Title]</value>
		<value>$INFO[Player.Title]</value>
	</variable>
	<variable name="PlayerMusicInfo2">
		<value condition="Player.IsInternetStream + !String.IsEmpty(Window(home).Property(plugin.audio.streaming-radio.Artist))">$INFO[Window(home).Property(plugin.audio.streaming-radio.Artist)]</value>
		<value condition="!Pvr.IsPlayingRadio + String.Contains(MusicPlayer.Genre,Classical)">$INFO[MusicPlayer.Title]</value>
		<value>$INFO[MusicPlayer.Artist]</value>
	</variable>
	<variable name="PlayerMusicInfo3">
		<value condition="Player.IsInternetStream + !String.IsEmpty(Window(home).Property(plugin.audio.streaming-radio.Album))">$INFO[Window(home).Property(plugin.audio.streaming-radio.Album)]</value>
		<value condition="!Pvr.IsPlayingRadio + String.Contains(MusicPlayer.Genre,Classical)">$INFO[MusicPlayer.Artist] $INFO[MusicPlayer.Property(Role.Conductor), • ,] $INFO[MusicPlayer.Property(Role.Orchestra), • ,]</value>
		<value>$INFO[MusicPlayer.Album]</value>
	</variable>
	<variable name="PlayerMusicInfo4">
		<value condition="!Pvr.IsPlayingRadio + String.Contains(MusicPlayer.Genre,Classical)">$INFO[MusicPlayer.Album]</value>
	</variable>
	<variable name="PVRThumb">
		<value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(SkinHelper.ListItem.ChannelLogo))">$INFO[Window(home).Property(SkinHelper.ListItem.ChannelLogo)]</value>
		<value condition="!String.IsEmpty(Player.Art(thumb))">$INFO[Player.Art(thumb)]</value>
		<value condition="String.IsEmpty(Window.Property(IsRadio))">icon-livetv.png</value>
		<value>icon-radio.png</value>
	</variable>
	<variable name="PVRPgmIcon">
		<value condition="!String.IsEmpty(Window(home).Property(SkinHelper.PVR.Poster))">$INFO[Window(home).Property(SkinHelper.PVR.Poster)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(SkinHelper.ListItem.Poster))">$INFO[Window(home).Property(SkinHelper.ListItem.Poster)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(SkinHelper.PVR.Thumb))">$INFO[Window(home).Property(SkinHelper.PVR.Thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(SkinHelper.PVR.ChannelLogo))">$INFO[Window(home).Property(SkinHelper.PVR.ChannelLogo)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(SkinHelper.ListItem.ChannelLogo))">$INFO[Window(home).Property(SkinHelper.ListItem.ChannelLogo)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
		<value condition="!String.IsEmpty(Player.Art(thumb))">$INFO[Player.Art(thumb)]</value>
		<value condition="String.IsEmpty(Window.Property(IsRadio))">icon-livetv.png</value>
		<value>icon-radio.png</value>
	</variable>
	<variable name="PVRIcon">
		<value condition="!String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
		<value condition="!String.IsEmpty(Window(home).Property(SkinHelper.ListItem.ChannelLogo))">$INFO[Window(home).Property(SkinHelper.ListItem.ChannelLogo)]</value>
	</variable>
	<variable name="PVRPlayingIcon">
		<value condition="!String.IsEmpty(Player.Art(tvshow.poster))">$INFO[Player.Art(tvshow.poster)]</value>
		<value condition="!String.IsEmpty(Player.Art(poster))">$INFO[Player.Art(poster)]</value>
		<value condition="!String.IsEmpty(VideoPlayer.Cover)">$INFO[VideoPlayer.Cover]</value>
		<value condition="!String.IsEmpty(Window(home).Property(SkinHelper.Player.ChannelLogo))">$INFO[Window(home).Property(SkinHelper.Player.ChannelLogo)]</value>
	</variable>
	<variable name="HorzHomeShelfIcon">
		<value condition="Control.HasFocus(9100) | Control.HasFocus(9130)">DefaultVideo.png</value>
		<!--Video shelf Icon -->
		<value condition="Control.HasFocus(9300) | Control.HasFocus(9330)">DefaultPicture.png</value>
		<!--Picture shelf Icon -->
		<value condition="Control.HasFocus(9350) | Control.HasFocus(9380)">DefaultAddon.png</value>
		<!--Addon shelf Icon -->
		<value condition="String.IsEmpty(Skin.String(CustomFav.Icon)) + [Control.HasFocus(9550) | Control.HasFocus(9580)]">icon-fav.png</value>
		<!--Custom Favourites shelf Icon -->
		<value condition="!String.IsEmpty(Skin.String(CustomFav.Icon)) + [Control.HasFocus(9550) | Control.HasFocus(9580)]">$INFO[Skin.String(CustomFav.Icon)]</value>
		<!--Custom Favourites shelf Icon -->
		<value condition="Control.HasFocus(9500) | Control.HasFocus(9530)">icon-broadcast.png</value>
		<!--Broadcast shelf Icon -->
		<value condition="Control.HasFocus(9600) | Control.HasFocus(9630)">DefaultGameAddons.png</value>
		<!--Games shelf Icon -->
		<value condition="Control.HasFocus(9450) | Control.HasFocus(9480)">icon-settings.png</value>
		<!--Setting shelf Icon -->
	</variable>
	<variable name="MovieShelfIcon0">
		<value condition="Container(9160).Position(0)">$INFO[Container(9160).ListItemNoWrap(-1).Art(thumb)]</value>
		<value condition="Container(9160).Position(1)">$INFO[Container(9160).ListItemNoWrap(-2).Art(thumb)]</value>
		<value condition="Container(9160).Position(2)">$INFO[Container(9160).ListItemNoWrap(-3).Art(thumb)]</value>
		<value condition="Container(9160).Position(3)">$INFO[Container(9160).ListItemNoWrap(-4).Art(thumb)]</value>
		<value condition="Container(9160).Position(4)">$INFO[Container(9160).ListItemNoWrap(-5).Art(thumb)]</value>
		<value condition="Container(9160).Position(5)">$INFO[Container(9160).ListItemNoWrap(-6).Art(thumb)]</value>
	</variable>
	<variable name="MovieShelfIcon7">
		<value condition="Container(9160).Position(0)">$INFO[Container(9160).ListItemNoWrap(6).Art(thumb)]</value>
		<value condition="Container(9160).Position(1)">$INFO[Container(9160).ListItemNoWrap(5).Art(thumb)]</value>
		<value condition="Container(9160).Position(2)">$INFO[Container(9160).ListItemNoWrap(4).Art(thumb)]</value>
		<value condition="Container(9160).Position(3)">$INFO[Container(9160).ListItemNoWrap(3).Art(thumb)]</value>
		<value condition="Container(9160).Position(4)">$INFO[Container(9160).ListItemNoWrap(2).Art(thumb)]</value>
		<value condition="Container(9160).Position(5)">$INFO[Container(9160).ListItemNoWrap(1).Art(thumb)]</value>
	</variable>
	<variable name="TVShowPoster">
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="TVShowThumb">
		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="TVShowBanner">
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.banner))">$INFO[ListItem.Art(tvshow.banner)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
		<value>$INFO[ListItem.Art(clearlogo)]</value>
	</variable>
	<variable name="TVShowShelfPoster0">
		<value condition="Container(9210).Position(0) + !String.IsEmpty(Container(9210).ListItemNoWrap(-1).Art(tvshow.poster))">$INFO[Container(9210).ListItemNoWrap(-1).Art(tvshow.poster)]</value>
		<value condition="Container(9210).Position(0) + !String.IsEmpty(Container(9210).ListItemNoWrap(-1).Art(poster))">$INFO[Container(9210).ListItemNoWrap(-1).Art(poster)]</value>
		<value condition="Container(9210).Position(0)">$INFO[Container(9210).ListItemNoWrap(-1).Icon]</value>
		<value condition="Container(9210).Position(1) + !String.IsEmpty(Container(9210).ListItemNoWrap(-2).Art(tvshow.poster))">$INFO[Container(9210).ListItemNoWrap(-2).Art(tvshow.poster)]</value>
		<value condition="Container(9210).Position(1) + !String.IsEmpty(Container(9210).ListItemNoWrap(-2).Art(poster))">$INFO[Container(9210).ListItemNoWrap(-2).Art(poster)]</value>
		<value condition="Container(9210).Position(1)">$INFO[Container(9210).ListItemNoWrap(-2).Icon]</value>
		<value condition="Container(9210).Position(2) + !String.IsEmpty(Container(9210).ListItemNoWrap(-3).Art(tvshow.poster))">$INFO[Container(9210).ListItemNoWrap(-3).Art(tvshow.poster)]</value>
		<value condition="Container(9210).Position(2) + !String.IsEmpty(Container(9210).ListItemNoWrap(-3).Art(poster))">$INFO[Container(9210).ListItemNoWrap(-3).Art(poster)]</value>
		<value condition="Container(9210).Position(2)">$INFO[Container(9210).ListItemNoWrap(-3).Icon]</value>
		<value condition="Container(9210).Position(3) + !String.IsEmpty(Container(9210).ListItemNoWrap(-4).Art(tvshow.poster))">$INFO[Container(9210).ListItemNoWrap(-4).Art(tvshow.poster)]</value>
		<value condition="Container(9210).Position(3) + !String.IsEmpty(Container(9210).ListItemNoWrap(-4).Art(poster))">$INFO[Container(9210).ListItemNoWrap(-4).Art(poster)]</value>
		<value condition="Container(9210).Position(3)">$INFO[Container(9210).ListItemNoWrap(-4).Icon]</value>
		<value condition="Container(9210).Position(4) + !String.IsEmpty(Container(9210).ListItemNoWrap(-5).Art(tvshow.poster))">$INFO[Container(9210).ListItemNoWrap(-5).Art(tvshow.poster)]</value>
		<value condition="Container(9210).Position(4) + !String.IsEmpty(Container(9210).ListItemNoWrap(-5).Art(poster))">$INFO[Container(9210).ListItemNoWrap(-5).Art(poster)]</value>
		<value condition="Container(9210).Position(4)">$INFO[Container(9210).ListItemNoWrap(-5).Icon]</value>
	</variable>
	<variable name="TVShowShelfPoster6">
		<value condition="Container(9210).Position(0) + !String.IsEmpty(Container(9210).ListItemNoWrap(5).Art(tvshow.poster))">$INFO[Container(9210).ListItemNoWrap(5).Art(tvshow.poster)]</value>
		<value condition="Container(9210).Position(0) + !String.IsEmpty(Container(9210).ListItemNoWrap(5).Art(poster))">$INFO[Container(9210).ListItemNoWrap(5).Art(poster)]</value>
		<value condition="Container(9210).Position(0)">$INFO[Container(9210).ListItemNoWrap(5).Art(thumb)]</value>
		<value condition="Container(9210).Position(1) + !String.IsEmpty(Container(9210).ListItemNoWrap(4).Art(tvshow.poster))">$INFO[Container(9210).ListItemNoWrap(4).Art(tvshow.poster)]</value>
		<value condition="Container(9210).Position(1) + !String.IsEmpty(Container(9210).ListItemNoWrap(4).Art(poster))">$INFO[Container(9210).ListItemNoWrap(4).Art(poster)]</value>
		<value condition="Container(9210).Position(1)">$INFO[Container(9210).ListItemNoWrap(4).Art(thumb)]</value>
		<value condition="Container(9210).Position(2) + !String.IsEmpty(Container(9210).ListItemNoWrap(3).Art(tvshow.poster))">$INFO[Container(9210).ListItemNoWrap(3).Art(tvshow.poster)]</value>
		<value condition="Container(9210).Position(2) + !String.IsEmpty(Container(9210).ListItemNoWrap(3).Art(poster))">$INFO[Container(9210).ListItemNoWrap(3).Art(poster)]</value>
		<value condition="Container(9210).Position(2)">$INFO[Container(9210).ListItemNoWrap(3).Art(thumb)]</value>
		<value condition="Container(9210).Position(3) + !String.IsEmpty(Container(9210).ListItemNoWrap(2).Art(tvshow.poster))">$INFO[Container(9210).ListItemNoWrap(2).Art(tvshow.poster)]</value>
		<value condition="Container(9210).Position(3) + !String.IsEmpty(Container(9210).ListItemNoWrap(2).Art(poster))">$INFO[Container(9210).ListItemNoWrap(2).Art(poster)]</value>
		<value condition="Container(9210).Position(3)">$INFO[Container(9210).ListItemNoWrap(2).Art(thumb)]</value>
		<value condition="Container(9210).Position(4) + !String.IsEmpty(Container(9210).ListItemNoWrap(1).Art(tvshow.poster))">$INFO[Container(9210).ListItemNoWrap(1).Art(tvshow.poster)]</value>
		<value condition="Container(9210).Position(4) + !String.IsEmpty(Container(9210).ListItemNoWrap(1).Art(poster))">$INFO[Container(9210).ListItemNoWrap(1).Art(poster)]</value>
		<value condition="Container(9210).Position(4)">$INFO[Container(9210).ListItemNoWrap(1).Art(thumb)]</value>
	</variable>
	<variable name="TVShowShelfThumb0">
		<value condition="Container(9210).Position(0) + !String.IsEmpty(Container(9210).ListItemNoWrap(-1).Art(fanart))">$INFO[Container(9210).ListItemNoWrap(-1).Art(fanart)]</value>
		<value condition="Container(9210).Position(0) + !String.IsEmpty(Container(9210).ListItemNoWrap(-1).Art(landscape))">$INFO[Container(9210).ListItemNoWrap(-1).Art(landscape)]</value>
		<value condition="Container(9210).Position(0)">$INFO[Container(9210).ListItemNoWrap(-1).Icon]</value>
		<value condition="Container(9210).Position(1) + !String.IsEmpty(Container(9210).ListItemNoWrap(-2).Art(fanart))">$INFO[Container(9210).ListItemNoWrap(-2).Art(fanart)]</value>
		<value condition="Container(9210).Position(1) + !String.IsEmpty(Container(9210).ListItemNoWrap(-2).Art(landscape))">$INFO[Container(9210).ListItemNoWrap(-2).Art(landscape)]</value>
		<value condition="Container(9210).Position(1)">$INFO[Container(9210).ListItemNoWrap(-2).Icon]</value>
		<value condition="Container(9210).Position(2) + !String.IsEmpty(Container(9210).ListItemNoWrap(-3).Art(fanart))">$INFO[Container(9210).ListItemNoWrap(-3).Art(fanart)]</value>
		<value condition="Container(9210).Position(2) + !String.IsEmpty(Container(9210).ListItemNoWrap(-3).Art(landscape))">$INFO[Container(9210).ListItemNoWrap(-3).Art(landscape)]</value>
		<value condition="Container(9210).Position(2)">$INFO[Container(9210).ListItemNoWrap(-3).Icon]</value>
		<value condition="Container(9210).Position(3) + !String.IsEmpty(Container(9210).ListItemNoWrap(-4).Art(fanart))">$INFO[Container(9210).ListItemNoWrap(-4).Art(fanart)]</value>
		<value condition="Container(9210).Position(3) + !String.IsEmpty(Container(9210).ListItemNoWrap(-4).Art(landscape))">$INFO[Container(9210).ListItemNoWrap(-4).Art(landscape)]</value>
		<value condition="Container(9210).Position(3)">$INFO[Container(9210).ListItemNoWrap(-4).Icon]</value>
		<value condition="Container(9210).Position(4) + !String.IsEmpty(Container(9210).ListItemNoWrap(-5).Art(fanart))">$INFO[Container(9210).ListItemNoWrap(-5).Art(fanart)]</value>
		<value condition="Container(9210).Position(4) + !String.IsEmpty(Container(9210).ListItemNoWrap(-5).Art(landscape))">$INFO[Container(9210).ListItemNoWrap(-5).Art(landscape)]</value>
		<value condition="Container(9210).Position(4)">$INFO[Container(9210).ListItemNoWrap(-5).Icon]</value>
	</variable>
	<variable name="TVShowShelfThumb6">
		<value condition="Container(9210).Position(0) + !String.IsEmpty(Container(9210).ListItemNoWrap(5).Art(fanart))">$INFO[Container(9210).ListItemNoWrap(5).Art(fanart)]</value>
		<value condition="Container(9210).Position(0) + !String.IsEmpty(Container(9210).ListItemNoWrap(5).Art(landscape))">$INFO[Container(9210).ListItemNoWrap(5).Art(landscape)]</value>
		<value condition="Container(9210).Position(0)">$INFO[Container(9210).ListItemNoWrap(5).Icon]</value>
		<value condition="Container(9210).Position(1) + !String.IsEmpty(Container(9210).ListItemNoWrap(4).Art(fanart))">$INFO[Container(9210).ListItemNoWrap(4).Art(fanart)]</value>
		<value condition="Container(9210).Position(1) + !String.IsEmpty(Container(9210).ListItemNoWrap(4).Art(landscape))">$INFO[Container(9210).ListItemNoWrap(4).Art(landscape)]</value>
		<value condition="Container(9210).Position(1)">$INFO[Container(9210).ListItemNoWrap(4).Icon]</value>
		<value condition="Container(9210).Position(2) + !String.IsEmpty(Container(9210).ListItemNoWrap(3).Art(fanart))">$INFO[Container(9210).ListItemNoWrap(3).Art(fanart)]</value>
		<value condition="Container(9210).Position(2) + !String.IsEmpty(Container(9210).ListItemNoWrap(3).Art(landscape))">$INFO[Container(9210).ListItemNoWrap(3).Art(landscape)]</value>
		<value condition="Container(9210).Position(2)">$INFO[Container(9210).ListItemNoWrap(3).Icon]</value>
		<value condition="Container(9210).Position(3) + !String.IsEmpty(Container(9210).ListItemNoWrap(2).Art(fanart))">$INFO[Container(9210).ListItemNoWrap(2).Art(fanart)]</value>
		<value condition="Container(9210).Position(3) + !String.IsEmpty(Container(9210).ListItemNoWrap(2).Art(landscape))">$INFO[Container(9210).ListItemNoWrap(2).Art(landscape)]</value>
		<value condition="Container(9210).Position(3)">$INFO[Container(9210).ListItemNoWrap(2).Icon]</value>
		<value condition="Container(9210).Position(4) + !String.IsEmpty(Container(9210).ListItemNoWrap(1).Art(fanart))">$INFO[Container(9210).ListItemNoWrap(1).Art(fanart)]</value>
		<value condition="Container(9210).Position(4) + !String.IsEmpty(Container(9210).ListItemNoWrap(1).Art(landscape))">$INFO[Container(9210).ListItemNoWrap(1).Art(landscape)]</value>
		<value condition="Container(9210).Position(4)">$INFO[Container(9210).ListItemNoWrap(1).Icon]</value>
	</variable>
	<variable name="TVShowShelfBanner0">
		<value condition="Container(9210).Position(0) + !String.IsEmpty(Container(9210).ListItemNoWrap(-1).Art(tvshow.banner))">$INFO[Container(9210).ListItemNoWrap(-1).Art(tvshow.banner)]</value>
		<value condition="Container(9210).Position(0) + !String.IsEmpty(Container(9210).ListItemNoWrap(-1).Art(banner))">$INFO[Container(9210).ListItemNoWrap(-1).Art(banner)]</value>
		<value condition="Container(9210).Position(0) + !String.IsEmpty(Container(9210).ListItemNoWrap(-1).Art(tvshow.clearlogo))">$INFO[Container(9210).ListItemNoWrap(-1).Art(tvshow.clearlogo)]</value>
		<value condition="Container(9210).Position(0)">$INFO[Container(9210).ListItemNoWrap(-1).Art(clearlogo)]</value>
		<value condition="Container(9210).Position(1) + !String.IsEmpty(Container(9210).ListItemNoWrap(-2).Art(tvshow.banner))">$INFO[Container(9210).ListItemNoWrap(-2).Art(tvshow.banner)]</value>
		<value condition="Container(9210).Position(1) + !String.IsEmpty(Container(9210).ListItemNoWrap(-2).Art(banner))">$INFO[Container(9210).ListItemNoWrap(-2).Art(banner)]</value>
		<value condition="Container(9210).Position(1) + !String.IsEmpty(Container(9210).ListItemNoWrap(-2).Art(tvshow.clearlogo))">$INFO[Container(9210).ListItemNoWrap(-2).Art(tvshow.clearlogo)]</value>
		<value condition="Container(9210).Position(1)">$INFO[Container(9210).ListItemNoWrap(-2).Art(clearlogo)]</value>
		<value condition="Container(9210).Position(2) + !String.IsEmpty(Container(9210).ListItemNoWrap(-3).Art(tvshow.banner))">$INFO[Container(9210).ListItemNoWrap(-3).Art(tvshow.banner)]</value>
		<value condition="Container(9210).Position(2) + !String.IsEmpty(Container(9210).ListItemNoWrap(-3).Art(banner))">$INFO[Container(9210).ListItemNoWrap(-3).Art(banner)]</value>
		<value condition="Container(9210).Position(2) + !String.IsEmpty(Container(9210).ListItemNoWrap(-3).Art(tvshow.clearlogo))">$INFO[Container(9210).ListItemNoWrap(-3).Art(tvshow.clearlogo)]</value>
		<value condition="Container(9210).Position(2)">$INFO[Container(9210).ListItemNoWrap(3).Art(clearlogo)]</value>
		<value condition="Container(9210).Position(3) + !String.IsEmpty(Container(9210).ListItemNoWrap(-4).Art(tvshow.banner))">$INFO[Container(9210).ListItemNoWrap(-4).Art(tvshow.banner)]</value>
		<value condition="Container(9210).Position(3) + !String.IsEmpty(Container(9210).ListItemNoWrap(-4).Art(banner))">$INFO[Container(9210).ListItemNoWrap(-4).Art(banner)]</value>
		<value condition="Container(9210).Position(3) + !String.IsEmpty(Container(9210).ListItemNoWrap(-4).Art(tvshow.clearlogo))">$INFO[Container(9210).ListItemNoWrap(-4).Art(tvshow.clearlogo)]</value>
		<value condition="Container(9210).Position(3)">$INFO[Container(9210).ListItemNoWrap(-4).Art(clearlogo)]</value>
		<value condition="Container(9210).Position(4) + !String.IsEmpty(Container(9210).ListItemNoWrap(-5).Art(tvshow.banner))">$INFO[Container(9210).ListItemNoWrap(-5).Art(tvshow.banner)]</value>
		<value condition="Container(9210).Position(4) + !String.IsEmpty(Container(9210).ListItemNoWrap(-5).Art(banner))">$INFO[Container(9210).ListItemNoWrap(-5).Art(banner)]</value>
		<value condition="Container(9210).Position(4) + !String.IsEmpty(Container(9210).ListItemNoWrap(-5).Art(tvshow.clearlogo))">$INFO[Container(9210).ListItemNoWrap(-5).Art(tvshow.clearlogo)]</value>
		<value condition="Container(9210).Position(4)">$INFO[Container(9210).ListItemNoWrap(-5).Art(clearlogo)]</value>
	</variable>
	<variable name="TVShowShelfBanner6">
		<value condition="Container(9210).Position(0) + !String.IsEmpty(Container(9210).ListItemNoWrap(5).Art(tvshow.banner))">$INFO[Container(9210).ListItemNoWrap(5).Art(tvshow.banner)]</value>
		<value condition="Container(9210).Position(0) + !String.IsEmpty(Container(9210).ListItemNoWrap(5).Art(banner))">$INFO[Container(9210).ListItemNoWrap(5).Art(banner)]</value>
		<value condition="Container(9210).Position(0) + !String.IsEmpty(Container(9210).ListItemNoWrap(5).Art(tvshow.clearlogo))">$INFO[Container(9210).ListItemNoWrap(5).Art(tvshow.clearlogo)]</value>
		<value condition="Container(9210).Position(0)">$INFO[Container(9210).ListItemNoWrap(5).Art(clearlogo)]</value>
		<value condition="Container(9210).Position(1) + !String.IsEmpty(Container(9210).ListItemNoWrap(4).Art(tvshow.banner))">$INFO[Container(9210).ListItemNoWrap(4).Art(tvshow.banner)]</value>
		<value condition="Container(9210).Position(1) + !String.IsEmpty(Container(9210).ListItemNoWrap(4).Art(banner))">$INFO[Container(9210).ListItemNoWrap(4).Art(banner)]</value>
		<value condition="Container(9210).Position(1) + !String.IsEmpty(Container(9210).ListItemNoWrap(4).Art(tvshow.clearlogo))">$INFO[Container(9210).ListItemNoWrap(4).Art(tvshow.clearlogo)]</value>
		<value condition="Container(9210).Position(1)">$INFO[Container(9210).ListItemNoWrap(4).Art(clearlogo)]</value>
		<value condition="Container(9210).Position(2) + !String.IsEmpty(Container(9210).ListItemNoWrap(3).Art(tvshow.banner))">$INFO[Container(9210).ListItemNoWrap(3).Art(tvshow.banner)]</value>
		<value condition="Container(9210).Position(2) + !String.IsEmpty(Container(9210).ListItemNoWrap(3).Art(banner))">$INFO[Container(9210).ListItemNoWrap(3).Art(banner)]</value>
		<value condition="Container(9210).Position(2) + !String.IsEmpty(Container(9210).ListItemNoWrap(3).Art(tvshow.clearlogo))">$INFO[Container(9210).ListItemNoWrap(3).Art(tvshow.clearlogo)]</value>
		<value condition="Container(9210).Position(2)">$INFO[Container(9210).ListItemNoWrap(3).Art(clearlogo)]</value>
		<value condition="Container(9210).Position(3) + !String.IsEmpty(Container(9210).ListItemNoWrap(2).Art(tvshow.banner))">$INFO[Container(9210).ListItemNoWrap(2).Art(tvshow.banner)]</value>
		<value condition="Container(9210).Position(3) + !String.IsEmpty(Container(9210).ListItemNoWrap(2).Art(banner))">$INFO[Container(9210).ListItemNoWrap(2).Art(banner)]</value>
		<value condition="Container(9210).Position(3) + !String.IsEmpty(Container(9210).ListItemNoWrap(2).Art(tvshow.clearlogo))">$INFO[Container(9210).ListItemNoWrap(2).Art(tvshow.clearlogo)]</value>
		<value condition="Container(9210).Position(3)">$INFO[Container(9210).ListItemNoWrap(2).Art(clearlogo)]</value>
		<value condition="Container(9210).Position(4) + !String.IsEmpty(Container(9210).ListItemNoWrap(1).Art(tvshow.banner))">$INFO[Container(9210).ListItemNoWrap(1).Art(tvshow.banner)]</value>
		<value condition="Container(9210).Position(4) + !String.IsEmpty(Container(9210).ListItemNoWrap(1).Art(banner))">$INFO[Container(9210).ListItemNoWrap(1).Art(banner)]</value>
		<value condition="Container(9210).Position(4) + !String.IsEmpty(Container(9210).ListItemNoWrap(1).Art(tvshow.clearlogo))">$INFO[Container(9210).ListItemNoWrap(1).Art(tvshow.clearlogo)]</value>
		<value condition="Container(9210).Position(4)">$INFO[Container(9210).ListItemNoWrap(1).Art(clearlogo)]</value>
	</variable>
	<variable name="BroadcastShelfIcon0">
		<value condition="Container(9510).Position(0)">$INFO[Container(9510).ListItemNoWrap(-1).Icon]</value>
		<value condition="Container(9510).Position(1)">$INFO[Container(9510).ListItemNoWrap(-2).Icon]</value>
		<value condition="Container(9510).Position(2)">$INFO[Container(9510).ListItemNoWrap(-3).Icon]</value>
		<value condition="Container(9510).Position(3)">$INFO[Container(9510).ListItemNoWrap(-4).Icon]</value>
		<value condition="Container(9510).Position(4)">$INFO[Container(9510).ListItemNoWrap(-5).Icon]</value>
	</variable>
	<variable name="BroadcastShelfIcon6">
		<value condition="Container(9510).Position(0)">$INFO[Container(9510).ListItemNoWrap(5).Icon]</value>
		<value condition="Container(9510).Position(1)">$INFO[Container(9510).ListItemNoWrap(4).Icon]</value>
		<value condition="Container(9510).Position(2)">$INFO[Container(9510).ListItemNoWrap(3).Icon]</value>
		<value condition="Container(9510).Position(3)">$INFO[Container(9510).ListItemNoWrap(2).Icon]</value>
		<value condition="Container(9510).Position(4)">$INFO[Container(9510).ListItemNoWrap(1).Icon]</value>
	</variable>
	<variable name="MusicShelfIcon0">
		<value condition="Container(9260).Position(0)">$INFO[Container(9260).ListItemNoWrap(-1).Art(thumb)]</value>
		<value condition="Container(9260).Position(1)">$INFO[Container(9260).ListItemNoWrap(-2).Art(thumb)]</value>
		<value condition="Container(9260).Position(2)">$INFO[Container(9260).ListItemNoWrap(-3).Art(thumb)]</value>
		<value condition="Container(9260).Position(3)">$INFO[Container(9260).ListItemNoWrap(-4).Art(thumb)]</value>
		<value condition="Container(9260).Position(4)">$INFO[Container(9260).ListItemNoWrap(-5).Art(thumb)]</value>
		<value condition="Container(9260).Position(5)">$INFO[Container(9260).ListItemNoWrap(-6).Art(thumb)]</value>
	</variable>
	<variable name="MusicShelfIcon6">
		<value condition="Container(9260).Position(0)">$INFO[Container(9260).ListItemNoWrap(5).Art(thumb)]</value>
		<value condition="Container(9260).Position(1)">$INFO[Container(9260).ListItemNoWrap(4).Art(thumb)]</value>
		<value condition="Container(9260).Position(2)">$INFO[Container(9260).ListItemNoWrap(3).Art(thumb)]</value>
		<value condition="Container(9260).Position(3)">$INFO[Container(9260).ListItemNoWrap(2).Art(thumb)]</value>
		<value condition="Container(9260).Position(4)">$INFO[Container(9260).ListItemNoWrap(1).Art(thumb)]</value>
	</variable>
	<variable name="AddonShelfIcon0">
		<value condition="Container(9360).Position(0)">$INFO[Container(9360).ListItemNoWrap(-1).Art(thumb)]</value>
		<value condition="Container(9360).Position(1)">$INFO[Container(9360).ListItemNoWrap(-2).Art(thumb)]</value>
		<value condition="Container(9360).Position(2)">$INFO[Container(9360).ListItemNoWrap(-3).Art(thumb)]</value>
		<value condition="Container(9360).Position(3)">$INFO[Container(9360).ListItemNoWrap(-4).Art(thumb)]</value>
		<value condition="Container(9360).Position(4)">$INFO[Container(9360).ListItemNoWrap(-5).Art(thumb)]</value>
		<value condition="Container(9360).Position(5)">$INFO[Container(9360).ListItemNoWrap(-6).Art(thumb)]</value>
	</variable>
	<variable name="AddonShelfIcon6">
		<value condition="Container(9360).Position(0)">$INFO[Container(9360).ListItemNoWrap(5).Art(thumb)]</value>
		<value condition="Container(9360).Position(1)">$INFO[Container(9360).ListItemNoWrap(4).Art(thumb)]</value>
		<value condition="Container(9360).Position(2)">$INFO[Container(9360).ListItemNoWrap(3).Art(thumb)]</value>
		<value condition="Container(9360).Position(3)">$INFO[Container(9360).ListItemNoWrap(2).Art(thumb)]</value>
		<value condition="Container(9360).Position(4)">$INFO[Container(9360).ListItemNoWrap(1).Art(thumb)]</value>
	</variable>
	<variable name="CustomShelfIcon0">
		<value condition="Container(9510).Position(0)">$INFO[Container(9510).ListItemNoWrap(-1).Icon]</value>
		<value condition="Container(9510).Position(1)">$INFO[Container(9510).ListItemNoWrap(-2).Icon]</value>
		<value condition="Container(9510).Position(2)">$INFO[Container(9510).ListItemNoWrap(-3).Icon]</value>
		<value condition="Container(9510).Position(3)">$INFO[Container(9510).ListItemNoWrap(-4).Icon]</value>
		<value condition="Container(9510).Position(4)">$INFO[Container(9510).ListItemNoWrap(-5).Icon]</value>
	</variable>
	<variable name="CustomShelfIcon6">
		<value condition="Container(9560).Position(0)">$INFO[Container(9560).ListItemNoWrap(5).Icon]</value>
		<value condition="Container(9560).Position(1)">$INFO[Container(9560).ListItemNoWrap(4).Icon]</value>
		<value condition="Container(9560).Position(2)">$INFO[Container(9560).ListItemNoWrap(3).Icon]</value>
		<value condition="Container(9560).Position(3)">$INFO[Container(9560).ListItemNoWrap(2).Icon]</value>
		<value condition="Container(9560).Position(4)">$INFO[Container(9560).ListItemNoWrap(1).Icon]</value>
	</variable>
	<variable name="WeatherView">
		<value condition="!String.Contains(Weather.plugin,weather.gismeteo) + !String.Contains(Weather.plugin,weather.openweathermap.extended) + !String.Contains(Weather.plugin,weather.ozweather)">Skin.SetString(weather-view,$LOCALIZE[10508])</value>
		<!-- Standard Forecast if not using extended forecast plugins -->
		<value condition="[String.IsEqual(Skin.String(weather-view),$LOCALIZE[10508]) | String.IsEmpty(Skin.String(weather-view))] + String.Contains(Weather.plugin,weather.ozweather)">Skin.SetString(weather-view,$LOCALIZE[33035])</value>
		<!-- Maps -->
		<value condition="[String.IsEqual(Skin.String(weather-view),$LOCALIZE[10508]) | String.IsEmpty(Skin.String(weather-view))] + [String.Contains(Weather.plugin,weather.openweathermap.extended) | String.Contains(Weather.plugin,weather.gismeteo)]">Skin.SetString(weather-view,$LOCALIZE[33034])</value>
		<!-- 36 Hour forecast -->
		<value condition="String.IsEqual(Skin.String(weather-view),$LOCALIZE[33034]) + [String.Contains(Weather.plugin,weather.openweathermap.extended) | String.Contains(Weather.plugin,weather.gismeteo)]">Skin.SetString(weather-view,$LOCALIZE[33037])</value>
		<!-- Weekend forecast -->
		<value condition="String.IsEqual(Skin.String(weather-view),$LOCALIZE[33037]) + [String.Contains(Weather.plugin,weather.openweathermap.extended) | String.Contains(Weather.plugin,weather.gismeteo)]">Skin.SetString(weather-view,$LOCALIZE[33036])</value>
		<!-- Hourly -->
		<value condition="String.IsEqual(Skin.String(weather-view),$LOCALIZE[33036]) + String.Contains(Weather.plugin,weather.openweathermap.extended)">Skin.SetString(weather-view,$LOCALIZE[10508])</value>
		<!-- Maps -->
		<value>Skin.SetString(weather-view,$LOCALIZE[10508])</value>
		<!-- Fall thru default (Standard forecast) -->
	</variable>
	<variable name="QuitAction">
		<value condition="String.IsEqual(Skin.String(home-quitaction),$LOCALIZE[13009])">Quit()</value>
		<value condition="String.IsEqual(Skin.String(home-quitaction),$LOCALIZE[13013])">Reboot()</value>
		<value condition="String.IsEqual(Skin.String(home-quitaction),$LOCALIZE[13005])">PowerDown()</value>
		<value condition="String.IsEqual(Skin.String(home-quitaction),$LOCALIZE[13010])">Hibernate()</value>
		<value condition="String.IsEqual(Skin.String(home-quitaction),$LOCALIZE[13011])">Suspend()</value>
		<value condition="String.IsEqual(Skin.String(home-quitaction),$LOCALIZE[20183])">ReloadSkin()</value>
		<value condition="String.IsEqual(Skin.String(home-quitaction),$LOCALIZE[13200])">ActivateWindow(Profiles)</value>		
		<value>ActivateWindow(shutdownmenu)</value>
	</variable>
	<variable name="NextAiredFanart">
		<value condition="Control.HasFocus(200)">$INFO[Container(200).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(201)">$INFO[Container(201).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(202)">$INFO[Container(202).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(203)">$INFO[Container(203).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(204)">$INFO[Container(204).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(205)">$INFO[Container(205).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(206)">$INFO[Container(206).ListItem.Property(Fanart)]</value>
	</variable>
	<variable name="NextAiredLabel1">
		<value condition="Control.HasFocus(200)">$INFO[Container(200).ListItem.Label]</value>
		<value condition="Control.HasFocus(201)">$INFO[Container(201).ListItem.Label]</value>
		<value condition="Control.HasFocus(202)">$INFO[Container(202).ListItem.Label]</value>
		<value condition="Control.HasFocus(203)">$INFO[Container(203).ListItem.Label]</value>
		<value condition="Control.HasFocus(204)">$INFO[Container(204).ListItem.Label]</value>
		<value condition="Control.HasFocus(205)">$INFO[Container(205).ListItem.Label]</value>
		<value condition="Control.HasFocus(206)">$INFO[Container(206).ListItem.Label]</value>
	</variable>
	<variable name="NextAiredLabel2">
		<value condition="Control.HasFocus(200)">$INFO[Container(200).ListItem.Property(NextTitle)]</value>
		<value condition="Control.HasFocus(201)">$INFO[Container(201).ListItem.Property(NextTitle)]</value>
		<value condition="Control.HasFocus(202)">$INFO[Container(202).ListItem.Property(NextTitle)]</value>
		<value condition="Control.HasFocus(203)">$INFO[Container(203).ListItem.Property(NextTitle)]</value>
		<value condition="Control.HasFocus(204)">$INFO[Container(204).ListItem.Property(NextTitle)]</value>
		<value condition="Control.HasFocus(205)">$INFO[Container(205).ListItem.Property(NextTitle)]</value>
		<value condition="Control.HasFocus(206)">$INFO[Container(206).ListItem.Property(NextTitle)]</value>
	</variable>
	<variable name="NextAiredLabel3">
		<value condition="Control.HasFocus(200)">$INFO[Container(200).ListItem.Property(RunTime),,$LOCALIZE[12391]]</value>
		<value condition="Control.HasFocus(201)">$INFO[Container(201).ListItem.Property(RunTime),,$LOCALIZE[12391]]</value>
		<value condition="Control.HasFocus(202)">$INFO[Container(202).ListItem.Property(RunTime),,$LOCALIZE[12391]]</value>
		<value condition="Control.HasFocus(203)">$INFO[Container(203).ListItem.Property(RunTime),,$LOCALIZE[12391]]</value>
		<value condition="Control.HasFocus(204)">$INFO[Container(204).ListItem.Property(RunTime),,$LOCALIZE[12391]]</value>
		<value condition="Control.HasFocus(205)">$INFO[Container(205).ListItem.Property(RunTime),,$LOCALIZE[12391]]</value>
		<value condition="Control.HasFocus(206)">$INFO[Container(206).ListItem.Property(RunTime),,$LOCALIZE[12391]]</value>
	</variable>
	<variable name="NextAiredLabel4">
		<value condition="Control.HasFocus(200)">$INFO[Container(200).ListItem.Property(Genre)]</value>
		<value condition="Control.HasFocus(201)">$INFO[Container(201).ListItem.Property(Genre)]</value>
		<value condition="Control.HasFocus(202)">$INFO[Container(202).ListItem.Property(Genre)]</value>
		<value condition="Control.HasFocus(203)">$INFO[Container(203).ListItem.Property(Genre)]</value>
		<value condition="Control.HasFocus(204)">$INFO[Container(204).ListItem.Property(Genre)]</value>
		<value condition="Control.HasFocus(205)">$INFO[Container(205).ListItem.Property(Genre)]</value>
		<value condition="Control.HasFocus(206)">$INFO[Container(206).ListItem.Property(Genre)]</value>
	</variable>
	<variable name="NextAiredLabel5">
		<value condition="Control.HasFocus(200)">$INFO[Container(200).ListItem.Property(ShortTime)]</value>
		<value condition="Control.HasFocus(201)">$INFO[Container(201).ListItem.Property(ShortTime)]</value>
		<value condition="Control.HasFocus(202)">$INFO[Container(202).ListItem.Property(ShortTime)]</value>
		<value condition="Control.HasFocus(203)">$INFO[Container(203).ListItem.Property(ShortTime)]</value>
		<value condition="Control.HasFocus(204)">$INFO[Container(204).ListItem.Property(ShortTime)]</value>
		<value condition="Control.HasFocus(205)">$INFO[Container(205).ListItem.Property(ShortTime)]</value>
		<value condition="Control.HasFocus(206)">$INFO[Container(206).ListItem.Property(ShortTime)]</value>
	</variable>
	<variable name="NextAiredLabel6">
		<value condition="Control.HasFocus(200)">$INFO[Container(200).ListItem.Property(NextDate)]</value>
		<value condition="Control.HasFocus(201)">$INFO[Container(201).ListItem.Property(NextDate)]</value>
		<value condition="Control.HasFocus(202)">$INFO[Container(202).ListItem.Property(NextDate)]</value>
		<value condition="Control.HasFocus(203)">$INFO[Container(203).ListItem.Property(NextDate)]</value>
		<value condition="Control.HasFocus(204)">$INFO[Container(204).ListItem.Property(NextDate)]</value>
		<value condition="Control.HasFocus(205)">$INFO[Container(205).ListItem.Property(NextDate)]</value>
		<value condition="Control.HasFocus(206)">$INFO[Container(206).ListItem.Property(NextDate)]</value>
	</variable>
	<variable name="NextAiredImage1">
		<value condition="Control.HasFocus(200)">$INFO[Container(200).ListItem.Property(Art(poster))]</value>
		<value condition="Control.HasFocus(201)">$INFO[Container(201).ListItem.Property(Art(poster))]</value>
		<value condition="Control.HasFocus(202)">$INFO[Container(202).ListItem.Property(Art(poster))]</value>
		<value condition="Control.HasFocus(203)">$INFO[Container(203).ListItem.Property(Art(poster))]</value>
		<value condition="Control.HasFocus(204)">$INFO[Container(204).ListItem.Property(Art(poster))]</value>
		<value condition="Control.HasFocus(205)">$INFO[Container(205).ListItem.Property(Art(poster))]</value>
		<value condition="Control.HasFocus(206)">$INFO[Container(206).ListItem.Property(Art(poster))]</value>
	</variable>
	<variable name="NextAiredImage2">
		<value condition="Control.HasFocus(200)">$INFO[Container(200).ListItem.Property(Path),,landscape.jpg]</value>
		<value condition="Control.HasFocus(201)">$INFO[Container(201).ListItem.Property(Path),,landscape.jpg]</value>
		<value condition="Control.HasFocus(202)">$INFO[Container(202).ListItem.Property(Path),,landscape.jpg]</value>
		<value condition="Control.HasFocus(203)">$INFO[Container(203).ListItem.Property(Path),,landscape.jpg]</value>
		<value condition="Control.HasFocus(204)">$INFO[Container(204).ListItem.Property(Path),,landscape.jpg]</value>
		<value condition="Control.HasFocus(205)">$INFO[Container(205).ListItem.Property(Path),,landscape.jpg]</value>
		<value condition="Control.HasFocus(206)">$INFO[Container(206).ListItem.Property(Path),,landscape.jpg]</value>
	</variable>
	<variable name="NextAiredImage3">
		<value condition="Control.HasFocus(200)">$INFO[Container(200).ListItem.Property(Path),,logo.png]</value>
		<value condition="Control.HasFocus(201)">$INFO[Container(201).ListItem.Property(Path),,logo.png]</value>
		<value condition="Control.HasFocus(202)">$INFO[Container(202).ListItem.Property(Path),,logo.png]</value>
		<value condition="Control.HasFocus(203)">$INFO[Container(203).ListItem.Property(Path),,logo.png]</value>
		<value condition="Control.HasFocus(204)">$INFO[Container(204).ListItem.Property(Path),,logo.png]</value>
		<value condition="Control.HasFocus(205)">$INFO[Container(205).ListItem.Property(Path),,logo.png]</value>
		<value condition="Control.HasFocus(206)">$INFO[Container(206).ListItem.Property(Path),,logo.png]</value>
	</variable>
	<variable name="NextAiredImage5">
		<value condition="Control.HasFocus(200)">$INFO[Container(200).ListItem.Property(Art(banner))]</value>
		<value condition="Control.HasFocus(201)">$INFO[Container(201).ListItem.Property(Art(banner))]</value>
		<value condition="Control.HasFocus(202)">$INFO[Container(202).ListItem.Property(Art(banner))]</value>
		<value condition="Control.HasFocus(203)">$INFO[Container(203).ListItem.Property(Art(banner))]</value>
		<value condition="Control.HasFocus(204)">$INFO[Container(204).ListItem.Property(Art(banner))]</value>
		<value condition="Control.HasFocus(205)">$INFO[Container(205).ListItem.Property(Art(banner))]</value>
		<value condition="Control.HasFocus(206)">$INFO[Container(206).ListItem.Property(Art(banner))]</value>
	</variable>
	<variable name="SystemPlatform">
		<value condition="System.Platform.Windows">$LOCALIZE[31566] $LOCALIZE[31568]</value>
		<value condition="System.Platform.IOS">$LOCALIZE[31566] $LOCALIZE[31569]</value>
		<value condition="System.Platform.OSX">$LOCALIZE[31566] $LOCALIZE[31570]</value>
		<value condition="System.Platform.Android">$LOCALIZE[31566] $LOCALIZE[31572]</value>
		<value condition="System.Platform.Linux.RaspberryPi">$LOCALIZE[31566] $LOCALIZE[31571]</value>
		<value condition="System.Platform.Linux">$LOCALIZE[31566] $LOCALIZE[31567]</value>
		<value>$LOCALIZE[13205]</value>
		<!-- Unknown platform type -->
	</variable>
	<variable name="ShelfType">
		<value condition="[Control.HasFocus(9150) | Control.HasFocus(9160) | Control.HasFocus(9180) | String.IsEqual(Container(9000).ListItem.Label2,$LOCALIZE[31026])] + String.IsEqual(Skin.String(shelf-movieimages),$LOCALIZE[31954])">$LOCALIZE[31964]</value>
		<value condition="[Control.HasFocus(9150) | Control.HasFocus(9160) | Control.HasFocus(9180) | String.IsEqual(Container(9000).ListItem.Label2,$LOCALIZE[31026])] + String.IsEqual(Skin.String(shelf-movieimages),$LOCALIZE[31955])">$LOCALIZE[31960]</value>
		<value condition="[Control.HasFocus(9200) | Control.HasFocus(9210) | Control.HasFocus(9230) | String.IsEqual(Container(9000).ListItem.Label2,$LOCALIZE[20343])] + String.IsEqual(Skin.String(shelf-tvshowimages),$LOCALIZE[31954])">$LOCALIZE[31965]</value>
		<value condition="[Control.HasFocus(9200) | Control.HasFocus(9210) | Control.HasFocus(9230) | String.IsEqual(Container(9000).ListItem.Label2,$LOCALIZE[20343])] + String.IsEqual(Skin.String(shelf-tvshowimages),$LOCALIZE[31955])">$LOCALIZE[31962]</value>
		<value condition="[Control.HasFocus(9250) | Control.HasFocus(9260) | Control.HasFocus(9280) | String.IsEqual(Container(9000).ListItem.Label2,$LOCALIZE[2])] + String.IsEqual(Skin.String(shelf-musicimages),$LOCALIZE[31954])">$LOCALIZE[31966]</value>
		<value condition="[Control.HasFocus(9250) | Control.HasFocus(9260) | Control.HasFocus(9280) | String.IsEqual(Container(9000).ListItem.Label2,$LOCALIZE[2])] + String.IsEqual(Skin.String(shelf-musicimages),$LOCALIZE[31955])">$LOCALIZE[31963]</value>
		<value condition="[Control.HasFocus(9500) | Control.HasFocus(9510) | Control.HasFocus(9530) | String.IsEqual(Container(9000).ListItem.Label2,$LOCALIZE[31031])] + String.IsEqual(Skin.String(shelf-broadcastimages),$LOCALIZE[31956])">$LOCALIZE[31961]</value>
		<value condition="[Control.HasFocus(9500) | Control.HasFocus(9510) | Control.HasFocus(9530) | String.IsEqual(Container(9000).ListItem.Label2,$LOCALIZE[31031])] + String.IsEqual(Skin.String(shelf-broadcastimages),$LOCALIZE[31957])">$LOCALIZE[31967]</value>
		<value condition="[Control.HasFocus(9500) | Control.HasFocus(9510) | Control.HasFocus(9530) | String.IsEqual(Container(9000).ListItem.Label2,$LOCALIZE[31031])] + String.IsEqual(Skin.String(shelf-broadcastimages),$LOCALIZE[31958])">$LOCALIZE[31968]</value>
		<value condition="[Control.HasFocus(9350) | Control.HasFocus(9360) | Control.HasFocus(9380) | String.IsEqual(Container(9000).ListItem.Label2,$LOCALIZE[24001])] + String.IsEqual(Skin.String(shelf-addonimages),$LOCALIZE[31652])">$LOCALIZE[31652]</value>
		<value condition="[Control.HasFocus(9350) | Control.HasFocus(9360) | Control.HasFocus(9380) | String.IsEqual(Container(9000).ListItem.Label2,$LOCALIZE[24001])] + String.IsEqual(Skin.String(shelf-addonimages),$LOCALIZE[31954])">$LOCALIZE[31969]</value>
		<value condition="[Control.HasFocus(9350) | Control.HasFocus(9360) | Control.HasFocus(9380) | String.IsEqual(Container(9000).ListItem.Label2,$LOCALIZE[24001])] + String.IsEqual(Skin.String(shelf-addonimages),$LOCALIZE[31959])">$LOCALIZE[31970]</value>
		<value condition="[Control.HasFocus(9550) | Control.HasFocus(9560) | Control.HasFocus(9580) | String.IsEqual(Container(9000).ListItem.Label2,$LOCALIZE[24001])] + String.IsEqual(Skin.String(shelf-customimages),$LOCALIZE[31652])">$LOCALIZE[31652]</value>
		<value condition="[Control.HasFocus(9550) | Control.HasFocus(9560) | Control.HasFocus(9580) | String.IsEqual(Container(9000).ListItem.Label2,$LOCALIZE[24001])] + String.IsEqual(Skin.String(shelf-customimages),$LOCALIZE[593]$LOCALIZE[1036])">$LOCALIZE[593] $LOCALIZE[1036]</value>
		<value condition="[Control.HasFocus(9550) | Control.HasFocus(9560) | Control.HasFocus(9580) | String.IsEqual(Container(9000).ListItem.Label2,$LOCALIZE[24001])] + String.IsEqual(Skin.String(shelf-customimages),$LOCALIZE[14211]$LOCALIZE[1036])">$LOCALIZE[14211] $LOCALIZE[1036]</value>
	</variable>
	<variable name="MenuType">
		<value condition="Skin.HasSetting(homemenu-horizontal)">TV</value>
		<value condition="Skin.HasSetting(homemenu-icon)">Táctil</value>
		<value>$LOCALIZE[31952]</value>
	</variable>
	<variable name="HomeItemType">
		<value condition="String.IsEqual(Window(settings).Property(CurrentType),$LOCALIZE[31660])">$LOCALIZE[31660]</value>
		<value condition="String.IsEqual(Window(settings).Property(CurrentType),$LOCALIZE[31661])">$LOCALIZE[31661]</value>
		<value condition="String.IsEqual(Window(settings).Property(CurrentType),$LOCALIZE[31653])">$LOCALIZE[31653]</value>
		<value>$LOCALIZE[31652]</value>
		<!-- Default to Favourite -->
	</variable>
	<variable name="BackgroundVisibilty">
		<value condition="!Skin.HasSetting(background-visibiltymed) + !Skin.HasSetting(background-visibiltyhigh)">$LOCALIZE[391]</value>
		<value condition="Skin.HasSetting(background-visibiltymed)">$LOCALIZE[392]</value>
		<value condition="Skin.HasSetting(background-visibiltyhigh)">$LOCALIZE[393]</value>
	</variable>
	<variable name="WeatherSunrise">
		<value condition="!String.IsEmpty(Window(weather).Property(Today.Sunrise))">$INFO[Window(weather).Property(Today.Sunrise)]</value>
		<value condition="!String.IsEmpty(Window(weather).Property(Current.Sunrise))">$INFO[Window(weather).Property(Current.Sunrise)]</value>
	</variable>
	<variable name="WeatherSunset">
		<value condition="!String.IsEmpty(Window(weather).Property(Today.Sunset))">$INFO[Window(weather).Property(Today.Sunset)]</value>
		<value condition="!String.IsEmpty(Window(weather).Property(Current.Sunset))">$INFO[Window(weather).Property(Current.Sunset)]</value>
	</variable>
	<variable name="WeatherIconCurrent">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Day0.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Day0.FanartCode),,.png]</value>
		<value>$INFO[Window(weather).Property(Day0.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconDay1">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Day1.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Day1.FanartCode),,.png]</value>
		<value>$INFO[Window(weather).Property(Day1.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconDay2">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Day2.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Day2.FanartCode),,.png]</value>
		<value>$INFO[Window(weather).Property(Day2.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconDay3">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Day3.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Day3.FanartCode),,.png]</value>
		<value>$INFO[Window(weather).Property(Day3.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconDay4">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Day4.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Day4.FanartCode),,.png]</value>
		<value>$INFO[Window(weather).Property(Day4.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconDay5">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Day5.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Day5.FanartCode),,.png]</value>
		<value>$INFO[Window(weather).Property(Day5.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconDay6">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Day6.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Day6.FanartCode),,.png]</value>
		<value>$INFO[Window(weather).Property(Day6.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconWeekend1">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Weekend.1.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Weekend.1.OutlookIcon)]</value>
		<value>resource://resource.images.weathericons.default/$INFO[Window(weather).Property(Weekend.1.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconWeekend2">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Weekend.2.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Weekend.2.OutlookIcon)]</value>
		<value>resource://resource.images.weathericons.default/$INFO[Window(weather).Property(Weekend.2.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIcon36Hour1">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(36Hour.1.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(36Hour.1.OutlookIcon)]</value>
		<value>resource://resource.images.weathericons.default/$INFO[Window(weather).Property(36Hour.1.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIcon36Hour2">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(36Hour.2.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(36Hour.2.OutlookIcon)]</value>
		<value>resource://resource.images.weathericons.default/$INFO[Window(weather).Property(36Hour.2.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIcon36Hour3">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(36Hour.3.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(36Hour.3.OutlookIcon)]</value>
		<value>resource://resource.images.weathericons.default/$INFO[Window(weather).Property(36Hour.3.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconHourly1">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.1.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.1.OutlookIcon)]</value>
		<value>$INFO[Window(weather).Property(Hourly.1.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconHourly2">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.2.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.2.OutlookIcon)]</value>
		<value>$INFO[Window(weather).Property(Hourly.2.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconHourly3">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.3.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.3.OutlookIcon)]</value>
		<value>$INFO[Window(weather).Property(Hourly.3.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconHourly4">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.4.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.4.OutlookIcon)]</value>
		<value>$INFO[Window(weather).Property(Hourly.4.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconHourly5">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.5.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.5.OutlookIcon)]</value>
		<value>$INFO[Window(weather).Property(Hourly.5.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconHourly6">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.6.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.6.OutlookIcon)]</value>
		<value>$INFO[Window(weather).Property(Hourly.6.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconHourly7">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(Weather).Property(Hourly.7.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(Weather).Property(Hourly.7.OutlookIcon)]</value>
		<value>$INFO[Window(weather).Property(Hourly.7.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconHourly8">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.8.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.8.OutlookIcon)]</value>
		<value>$INFO[Window(weather).Property(Hourly.8.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconHourly9">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.9.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.9.OutlookIcon)]</value>
		<value>$INFO[Window(weather).Property(Hourly.9.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconHourly10">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.10.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.10.OutlookIcon)]</value>
		<value>$INFO[Window(weather).Property(Hourly.10.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconHourly11">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.11.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.11.OutlookIcon)]</value>
		<value>$INFO[Window(weather).Property(Hourly.11.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconHourly12">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.12.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.12.OutlookIcon)]</value>
		<value>$INFO[Window(weather).Property(Hourly.12.OutlookIcon)]</value>
	</variable>
	<variable name="HomeVideoIcon">
		<value condition="!String.IsEmpty(Skin.String(home-video-icon))">$INFO[Skin.String(home-video-icon)]</value>
		<value>special://skin/extras/homeicons/video.png</value>
	</variable>
	<variable name="HomeMovieIcon">
		<value condition="!String.IsEmpty(Skin.String(home-movie-icon))">$INFO[Skin.String(home-movie-icon)]</value>
		<value>special://skin/extras/homeicons/movie.png</value>
	</variable>
	<variable name="HomeTVShowsIcon">
		<value condition="!String.IsEmpty(Skin.String(home-tvshows-icon))">$INFO[Skin.String(home-tvshows-icon)]</value>
		<value>special://skin/extras/homeicons/tv.png</value>
	</variable>
	<variable name="HomeMusicIcon">
		<value condition="!String.IsEmpty(Skin.String(home-music-icon))">$INFO[Skin.String(home-music-icon)]</value>
		<value>special://skin/extras/homeicons/music.png</value>
	</variable>
	<variable name="HomeWeatherIcon">
		<value condition="String.IsEmpty(Skin.String(home-weather-icon))">special://skin/extras/homeicons/weather.png</value>
		<value condition="!String.IsEmpty(Skin.String(home-weather-icon))">$INFO[Skin.String(home-weather-icon)]</value>
		<value condition="!String.IsEmpty(Window(weather).Property(Today.Sunrise)) + System.Time(Window(weather).Property(Today.Sunrise),Window(weather).Property(Today.Sunset))">special://skin/extras/homeicons/dayweather.png</value>
		<value condition="!String.IsEmpty(Window(weather).Property(Today.Sunrise)) + !System.Time(Window(weather).Property(Today.Sunrise),Window(weather).Property(Today.Sunset))">special://skin/extras/homeicons/nightweather.png</value>
		<value condition="!String.IsEmpty(Window(weather).Property(Current.Sunrise)) + System.Time(Window(weather).Property(Current.Sunrise),Window(weather).Property(Current.Sunset))">special://skin/extras/homeicons/dayweather.png</value>
		<value condition="!String.IsEmpty(Window(weather).Property(Current.Sunrise)) + !System.Time(Window(weather).Property(Current.Sunrise),Window(weather).Property(Current.Sunset))">special://skin/extras/homeicons/nightweather.png</value>
		<value condition="System.Time(06:00,18:00)">special://skin/extras/homeicons/dayweather.png</value>
		<value condition="!System.Time(06:00,18:00)">special://skin/extras/homeicons/nightweather.png</value>
	</variable>
	<variable name="HomeMusicVideoIcon">
		<value condition="!String.IsEmpty(Skin.String(home-musicvideo-icon))">$INFO[Skin.String(home-musicvideo-icon)]</value>
		<value>special://skin/extras/homeicons/musicvideo.png</value>
	</variable>
	<variable name="HomeTVIcon">
		<value condition="!String.IsEmpty(Skin.String(home-tv-icon))">$INFO[Skin.String(home-tv-icon)]</value>
		<value>special://skin/extras/homeicons/livetv.png</value>
	</variable>
	<variable name="HomeRadioIcon">
		<value condition="!String.IsEmpty(Skin.String(home-radio-icon))">$INFO[Skin.String(home-radio-icon)]</value>
		<value>special://skin/extras/homeicons/radio.png</value>
	</variable>
	<variable name="HomeProgramsIcon">
		<value condition="!String.IsEmpty(Skin.String(home-programs-icon))">$INFO[Skin.String(home-programs-icon)]</value>
		<value>special://skin/extras/homeicons/addons.png</value>
	</variable>
	<variable name="HomeGamesIcon">
		<value condition="!String.IsEmpty(Skin.String(home-games-icon))">$INFO[Skin.String(home-games-icon)]</value>
		<value>special://skin/extras/homeicons/games.png</value>
	</variable>
	<variable name="HomePhotosIcon">
		<value condition="!String.IsEmpty(Skin.String(home-photos-icon))">$INFO[Skin.String(home-photos-icon)]</value>
		<value>special://skin/extras/homeicons/pics.png</value>
	</variable>
	<variable name="HomeFavoritesIcon">
		<value condition="!String.IsEmpty(Skin.String(home-favorites-icon))">$INFO[Skin.String(home-favorites-icon)]</value>
		<value>special://skin/extras/homeicons/favs.png</value>
	</variable>
	<variable name="HomeSearchIcon">
		<value condition="!String.IsEmpty(Skin.String(home-search-icon))">$INFO[Skin.String(home-search-icon)]</value>
		<value>special://skin/extras/homeicons/search.png</value>
	</variable>
	<variable name="HomeFileManagerIcon">
		<value condition="!String.IsEmpty(Skin.String(home-filemanager-icon))">$INFO[Skin.String(home-filemanager-icon)]</value>
		<value>special://skin/extras/homeicons/filemanager.png</value>
	</variable>
	<variable name="HomeProfileIcon">
		<value condition="!String.IsEmpty(Skin.String(home-profile-icon))">$INFO[Skin.String(home-profile-icon)]</value>
		<value>special://skin/extras/homeicons/users.png</value>
	</variable>
	<variable name="HomeShutdownIcon">
		<value condition="!String.IsEmpty(Skin.String(home-shutdown-icon))">$INFO[Skin.String(home-shutdown-icon)]</value>
		<value>special://skin/extras/homeicons/quit.png</value>
	</variable>
    <variable name="Image_CombinedStudio">
        <value condition="Container.Content(studios)">$INFO[ListItem.Label,resource://resource.images.studios.coloured/,.png]</value>
        <value condition="!String.isEmpty(Window(home).Property(TMDbHelper.ListItem.Network))">$INFO[Window(Home).Property(TMDbHelper.ListItem.Network),resource://resource.images.studios.coloured/,.png]</value>
        <value condition="!String.isEmpty(Window(home).Property(TMDbHelper.ListItem.Studio))">$INFO[Window(Home).Property(TMDbHelper.ListItem.Studio),resource://resource.images.studios.coloured/,.png]</value>
        <value condition="!String.IsEmpty(ListItem.Studio)">$INFO[ListItem.Studio,resource://resource.images.studios.coloured/,.png]</value>
	</variable>
	<variable name="CustomDefaultIcon">
		<!-- Show custom icon for default menu items in customisation dialog -->
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-video) + !String.IsEmpty(Skin.String(home-video-icon))">$INFO[Skin.String(home-video-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-video)">special://skin/extras/homeicons/video.png</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-movie) + !String.IsEmpty(Skin.String(home-movie-icon))">$INFO[Skin.String(home-movie-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-movie)">special://skin/extras/homeicons/movie.png</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-tvshows) + !String.IsEmpty(Skin.String(home-tvshows-icon))">$INFO[Skin.String(home-tvshows-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-tvshows)">special://skin/extras/homeicons/tv.png</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-music) + !String.IsEmpty(Skin.String(home-music-icon))">$INFO[Skin.String(home-music-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-music)">special://skin/extras/homeicons/music.png</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-weather) + !String.IsEmpty(Skin.String(home-weather-icon))">$INFO[Skin.String(home-weather-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-weather)">special://skin/extras/homeicons/weather.png</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-musicvideo) + !String.IsEmpty(Skin.String(home-musicvideo-icon))">$INFO[Skin.String(home-musicvideo-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-musicvideo)">special://skin/extras/homeicons/musicvideo.png</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-tv) + !String.IsEmpty(Skin.String(home-tv-icon))">$INFO[Skin.String(home-tv-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-tv)">special://skin/extras/homeicons/livetv.png</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-radio) + !String.IsEmpty(Skin.String(home-radio-icon))">$INFO[Skin.String(home-radio-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-radio)">special://skin/extras/homeicons/radio.png</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-programs) + !String.IsEmpty(Skin.String(home-programs-icon))">$INFO[Skin.String(home-programs-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-programs)">special://skin/extras/homeicons/addons.png</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-games) + !String.IsEmpty(Skin.String(home-games-icon))">$INFO[Skin.String(home-games-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-games)">special://skin/extras/homeicons/games.png</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-photos) + !String.IsEmpty(Skin.String(home-photos-icon))">$INFO[Skin.String(home-photos-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-photos)">special://skin/extras/homeicons/pics.png</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-favorites) + !String.IsEmpty(Skin.String(home-favorites-icon))">$INFO[Skin.String(home-favorites-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-favorites)">special://skin/extras/homeicons/favs.png</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-search) + !String.IsEmpty(Skin.String(home-search-icon))">$INFO[Skin.String(home-search-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-search)">special://skin/extras/homeicons/search.png</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-filemanager) + !String.IsEmpty(Skin.String(home-filemanager-icon))">$INFO[Skin.String(home-filemanager-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-filemanager)">special://skin/extras/homeicons/filemanager.png</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-profile) + !String.IsEmpty(Skin.String(home-profile-icon))">$INFO[Skin.String(home-profile-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-profile)">special://skin/extras/homeicons/users.png</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-shutdown) + !String.IsEmpty(Skin.String(home-shutdown-icon))">$INFO[Skin.String(home-shutdown-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-shutdown)">special://skin/extras/homeicons/quit.png</value>
	</variable>
	<variable name="CustomSkinType">
		<!-- Show custom skin item label in customisation dialog -->
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.1)">$INFO[Skin.String(CustomWidget.1.WidgetType)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.2)">$INFO[Skin.String(CustomWidget.2.WidgetType)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.3)">$INFO[Skin.String(CustomWidget.3.WidgetType)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.4)">$INFO[Skin.String(CustomWidget.4.WidgetType)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.5)">$INFO[Skin.String(CustomWidget.5.WidgetType)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.6)">$INFO[Skin.String(CustomWidget.6.WidgetType)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.7)">$INFO[Skin.String(CustomWidget.7.WidgetType)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.8)">$INFO[Skin.String(CustomWidget.8.WidgetType)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.9)">$INFO[Skin.String(CustomWidget.9.WidgetType)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.10)">$INFO[Skin.String(CustomWidget.10.WidgetType)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.11)">$INFO[Skin.String(CustomWidget.11.WidgetType)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.12)">$INFO[Skin.String(CustomWidget.12.WidgetType)]</value>
	</variable>
	<variable name="CustomSkinTypeLabel">
		<!-- Show custom skin item label in customisation dialog -->
		<value condition="String.isEqual(Skin.String(CustomWidget.1.WidgetType),WidgetPoster)">$LOCALIZE[32010]</value>
		<value condition="String.isEqual(Skin.String(CustomWidget.1.WidgetType),WidgetLandscape)">$LOCALIZE[32011]</value>
		<value condition="String.isEqual(Skin.String(CustomWidget.2.WidgetType),WidgetPoster) + !String.isEqual(Skin.String(CustomWidget.2.WidgetType),WidgetLandscape)">$LOCALIZE[32010]</value>
		<value condition="String.isEqual(Skin.String(CustomWidget.2.WidgetType),WidgetLandscape) + !String.isEqual(Skin.String(CustomWidget.2.WidgetType),WidgetPoster)">$LOCALIZE[32011]</value>
		<value condition="String.isEqual(Skin.String(CustomWidget.3.WidgetType),WidgetPoster)">$LOCALIZE[32010]</value>
		<value condition="String.isEqual(Skin.String(CustomWidget.3.WidgetType),WidgetLandscape)">$LOCALIZE[32011]</value>
		<value condition="String.isEqual(Skin.String(CustomWidget.4.WidgetType),WidgetPoster)">$LOCALIZE[32010]</value>
		<value condition="String.isEqual(Skin.String(CustomWidget.4.WidgetType),WidgetLandscape)">$LOCALIZE[32011]</value>
		<value condition="String.isEqual(Skin.String(CustomWidget.5.WidgetType),WidgetPoster)">$LOCALIZE[32010]</value>
		<value condition="String.isEqual(Skin.String(CustomWidget.5.WidgetType),WidgetLandscape)">$LOCALIZE[32011]</value>
		<value condition="String.isEqual(Skin.String(CustomWidget.6.WidgetType),WidgetPoster)">$LOCALIZE[32010]</value>
		<value condition="String.isEqual(Skin.String(CustomWidget.6.WidgetType),WidgetLandscape)">$LOCALIZE[32011]</value>
		<value condition="String.isEqual(Skin.String(CustomWidget.7.WidgetType),WidgetPoster)">$LOCALIZE[32010]</value>
		<value condition="String.isEqual(Skin.String(CustomWidget.7.WidgetType),WidgetLandscape)">$LOCALIZE[32011]</value>
		<value condition="String.isEqual(Skin.String(CustomWidget.8.WidgetType),WidgetPoster)">$LOCALIZE[32010]</value>
		<value condition="String.isEqual(Skin.String(CustomWidget.8.WidgetType),WidgetLandscape)">$LOCALIZE[32011]</value>
		<value condition="String.isEqual(Skin.String(CustomWidget.9.WidgetType),WidgetPoster)">$LOCALIZE[32010]</value>
		<value condition="String.isEqual(Skin.String(CustomWidget.9.WidgetType),WidgetLandscape)">$LOCALIZE[32011]</value>
		<value condition="String.isEqual(Skin.String(CustomWidget.10.WidgetType),WidgetPoster)">$LOCALIZE[32010]</value>
		<value condition="String.isEqual(Skin.String(CustomWidget.10.WidgetType),WidgetLandscape)">$LOCALIZE[32011]</value>
		<value condition="String.isEqual(Skin.String(CustomWidget.11.WidgetType),WidgetPoster)">$LOCALIZE[32010]</value>
		<value condition="String.isEqual(Skin.String(CustomWidget.11.WidgetType),WidgetLandscape)">$LOCALIZE[32011]</value>
		<value condition="String.isEqual(Skin.String(CustomWidget.12.WidgetType),WidgetPoster)">$LOCALIZE[32010]</value>
		<value condition="String.isEqual(Skin.String(CustomWidget.12.WidgetType),WidgetLandscape)">$LOCALIZE[32011]</value>
		<value></value>
	</variable>	
	<variable name="CustomSkinwidgetqty">
		<!-- Show custom skin item label in customisation dialog -->
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.1)">$INFO[Skin.String(CustomWidget.1.Qty)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.2)">$INFO[Skin.String(CustomWidget.2.Qty)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.3)">$INFO[Skin.String(CustomWidget.3.Qty)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.4)">$INFO[Skin.String(CustomWidget.4.Qty)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.5)">$INFO[Skin.String(CustomWidget.5.Qty)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.6)">$INFO[Skin.String(CustomWidget.6.Qty)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.7)">$INFO[Skin.String(CustomWidget.7.Qty)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.8)">$INFO[Skin.String(CustomWidget.8.Qty)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.9)">$INFO[Skin.String(CustomWidget.9.Qty)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.10)">$INFO[Skin.String(CustomWidget.10.Qty)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.11)">$INFO[Skin.String(CustomWidget.11.Qty)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.12)">$INFO[Skin.String(CustomWidget.12.Qty)]</value>
	</variable>
	<variable name="CustomSkinAction">
		<!-- Show custom skin item action in customisation dialog -->
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.1)">$INFO[Skin.String(CustomMovies.1.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.2)">$INFO[Skin.String(CustomMovies.2.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.3)">$INFO[Skin.String(CustomMovies.3.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.4)">$INFO[Skin.String(CustomMovies.4.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.5)">$INFO[Skin.String(CustomMovies.5.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.6)">$INFO[Skin.String(CustomMovies.6.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.7)">$INFO[Skin.String(CustomMovies.7.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.8)">$INFO[Skin.String(CustomMovies.8.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.9)">$INFO[Skin.String(CustomMovies.9.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.10)">$INFO[Skin.String(CustomMovies.10.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.11)">$INFO[Skin.String(CustomMovies.11.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.12)">$INFO[Skin.String(CustomMovies.12.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.13)">$INFO[Skin.String(CustomMovies.13.Path)]</value>	
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.1)">$INFO[Skin.String(CustomTVShow.1.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.2)">$INFO[Skin.String(CustomTVShow.2.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.3)">$INFO[Skin.String(CustomTVShow.3.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.4)">$INFO[Skin.String(CustomTVShow.4.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.5)">$INFO[Skin.String(CustomTVShow.5.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.6)">$INFO[Skin.String(CustomTVShow.6.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.7)">$INFO[Skin.String(CustomTVShow.7.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.8)">$INFO[Skin.String(CustomTVShow.8.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.9)">$INFO[Skin.String(CustomTVShow.9.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.10)">$INFO[Skin.String(CustomTVShow.10.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.11)">$INFO[Skin.String(CustomTVShow.11.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.12)">$INFO[Skin.String(CustomTVShow.12.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.13)">$INFO[Skin.String(CustomTVShow.13.Path)]</value>	
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.1)">$INFO[Skin.String(CustomTV.1.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.2)">$INFO[Skin.String(CustomTV.2.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.3)">$INFO[Skin.String(CustomTV.3.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.4)">$INFO[Skin.String(CustomTV.4.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.5)">$INFO[Skin.String(CustomTV.5.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.6)">$INFO[Skin.String(CustomTV.6.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.7)">$INFO[Skin.String(CustomTV.7.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.8)">$INFO[Skin.String(CustomTV.8.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.9)">$INFO[Skin.String(CustomTV.9.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.10)">$INFO[Skin.String(CustomTV.10.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.11)">$INFO[Skin.String(CustomTV.11.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.12)">$INFO[Skin.String(CustomTV.12.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.13)">$INFO[Skin.String(CustomTV.13.Path)]</value>	
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.1)">$INFO[Skin.String(CustomRadio.1.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.2)">$INFO[Skin.String(CustomRadio.2.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.3)">$INFO[Skin.String(CustomRadio.3.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.4)">$INFO[Skin.String(CustomRadio.4.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.5)">$INFO[Skin.String(CustomRadio.5.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.1)">$INFO[Skin.String(CustomFav.1.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.2)">$INFO[Skin.String(CustomFav.2.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.3)">$INFO[Skin.String(CustomFav.3.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.4)">$INFO[Skin.String(CustomFav.4.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.5)">$INFO[Skin.String(CustomFav.5.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.6)">$INFO[Skin.String(CustomFav.6.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.7)">$INFO[Skin.String(CustomFav.7.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.8)">$INFO[Skin.String(CustomFav.8.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.9)">$INFO[Skin.String(CustomFav.9.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.1)">$INFO[Skin.String(CustomMusic.1.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.2)">$INFO[Skin.String(CustomMusic.2.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.3)">$INFO[Skin.String(CustomMusic.3.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.4)">$INFO[Skin.String(CustomMusic.4.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.5)">$INFO[Skin.String(CustomMusic.5.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.1)">$INFO[Skin.String(CustomAddon.1.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.2)">$INFO[Skin.String(CustomAddon.2.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.3)">$INFO[Skin.String(CustomAddon.3.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.4)">$INFO[Skin.String(CustomAddon.4.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.5)">$INFO[Skin.String(CustomAddon.5.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.1)">$INFO[Skin.String(CustomGame.1.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.2)">$INFO[Skin.String(CustomGame.2.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.3)">$INFO[Skin.String(CustomGame.3.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.4)">$INFO[Skin.String(CustomGame.4.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.5)">$INFO[Skin.String(CustomGame.5.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.6)">$INFO[Skin.String(CustomGame.6.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.7)">$INFO[Skin.String(CustomGame.7.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.8)">$INFO[Skin.String(CustomGame.8.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.9)">$INFO[Skin.String(CustomGame.9.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.10)">$INFO[Skin.String(CustomGame.10.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.11)">$INFO[Skin.String(CustomGame.11.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.12)">$INFO[Skin.String(CustomGame.12.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.13)">$INFO[Skin.String(CustomGame.13.Path)]</value>	
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.1)">$INFO[Skin.String(CustomWidget.1.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.2)">$INFO[Skin.String(CustomWidget.2.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.3)">$INFO[Skin.String(CustomWidget.3.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.4)">$INFO[Skin.String(CustomWidget.4.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.5)">$INFO[Skin.String(CustomWidget.5.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.6)">$INFO[Skin.String(CustomWidget.6.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.7)">$INFO[Skin.String(CustomWidget.7.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.8)">$INFO[Skin.String(CustomWidget.8.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.9)">$INFO[Skin.String(CustomWidget.9.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.10)">$INFO[Skin.String(CustomWidget.10.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.11)">$INFO[Skin.String(CustomWidget.11.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.12)">$INFO[Skin.String(CustomWidget.12.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomSearch.1)">$INFO[Skin.String(CustomSearch.1.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomSearch.2)">$INFO[Skin.String(CustomSearch.2.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomSearch.3)">$INFO[Skin.String(CustomSearch.3.Path)]</value>
	</variable>
	<variable name="CustomPlaylistAction">
		<!-- Show custom skin playlist action in customisation dialog -->
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.1) + !Skin.HasSetting(CustomMovies.1.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.2) + !Skin.HasSetting(CustomMovies.2.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.3) + !Skin.HasSetting(CustomMovies.3.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.4) + !Skin.HasSetting(CustomMovies.4.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.5) + !Skin.HasSetting(CustomMovies.5.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.1) + !Skin.HasSetting(CustomTVShow.1.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.2) + !Skin.HasSetting(CustomTVShow.2.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.3) + !Skin.HasSetting(CustomTVShow.3.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.4) + !Skin.HasSetting(CustomTVShow.4.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.5) + !Skin.HasSetting(CustomTVShow.5.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.1) + !Skin.HasSetting(CustomTV.1.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.2) + !Skin.HasSetting(CustomTV.2.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.3) + !Skin.HasSetting(CustomTV.3.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.4) + !Skin.HasSetting(CustomTV.4.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.5) + !Skin.HasSetting(CustomTV.5.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.1) + !Skin.HasSetting(CustomRadio.1.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.2) + !Skin.HasSetting(CustomRadio.2.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.3) + !Skin.HasSetting(CustomRadio.3.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.4) + !Skin.HasSetting(CustomRadio.4.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.5) + !Skin.HasSetting(CustomRadio.5.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.1) + !Skin.HasSetting(CustomFav.1.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.2) + !Skin.HasSetting(CustomFav.2.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.3) + !Skin.HasSetting(CustomFav.3.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.4) + !Skin.HasSetting(CustomFav.4.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.5) + !Skin.HasSetting(CustomFav.5.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.1) + !Skin.HasSetting(CustomMusic.1.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.2) + !Skin.HasSetting(CustomMusic.2.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.3) + !Skin.HasSetting(CustomMusic.3.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.4) + !Skin.HasSetting(CustomMusic.4.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.5) + !Skin.HasSetting(CustomMusic.5.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.1) + !Skin.HasSetting(CustomAddon.1.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.2) + !Skin.HasSetting(CustomAddon.2.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.3) + !Skin.HasSetting(CustomAddon.3.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.4) + !Skin.HasSetting(CustomAddon.4.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.5) + !Skin.HasSetting(CustomAddon.5.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.1) + !Skin.HasSetting(CustomGame.1.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.2) + !Skin.HasSetting(CustomGame.2.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.3) + !Skin.HasSetting(CustomGame.3.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.4) + !Skin.HasSetting(CustomGame.4.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.5) + !Skin.HasSetting(CustomGame.5.Show)">$LOCALIZE[14098]</value>
		<value>$LOCALIZE[31941]</value>
	</variable>
	<variable name="CustomSkinPlaylist">
		<!-- Show custom skin item playlist in customisation dialog -->
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.1)">$INFO[Skin.String(CustomMovies.1.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.2)">$INFO[Skin.String(CustomMovies.2.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.3)">$INFO[Skin.String(CustomMovies.3.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.4)">$INFO[Skin.String(CustomMovies.4.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.5)">$INFO[Skin.String(CustomMovies.5.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.6)">$INFO[Skin.String(CustomMovies.6.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.7)">$INFO[Skin.String(CustomMovies.7.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.8)">$INFO[Skin.String(CustomMovies.8.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.9)">$INFO[Skin.String(CustomMovies.9.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.10)">$INFO[Skin.String(CustomMovies.10.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.11)">$INFO[Skin.String(CustomMovies.11.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.12)">$INFO[Skin.String(CustomMovies.12.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.13)">$INFO[Skin.String(CustomMovies.13.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.1)">$INFO[Skin.String(CustomTVShow.1.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.2)">$INFO[Skin.String(CustomTVShow.2.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.3)">$INFO[Skin.String(CustomTVShow.3.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.4)">$INFO[Skin.String(CustomTVShow.4.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.5)">$INFO[Skin.String(CustomTVShow.5.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.6)">$INFO[Skin.String(CustomTVShow.6.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.7)">$INFO[Skin.String(CustomTVShow.7.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.8)">$INFO[Skin.String(CustomTVShow.8.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.9)">$INFO[Skin.String(CustomTVShow.9.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.10)">$INFO[Skin.String(CustomTVShow.10.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.11)">$INFO[Skin.String(CustomTVShow.11.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.12)">$INFO[Skin.String(CustomTVShow.12.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.13)">$INFO[Skin.String(CustomTVShow.13.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.1)">$INFO[Skin.String(CustomTV.1.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.2)">$INFO[Skin.String(CustomTV.2.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.3)">$INFO[Skin.String(CustomTV.3.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.4)">$INFO[Skin.String(CustomTV.4.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.5)">$INFO[Skin.String(CustomTV.5.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.6)">$INFO[Skin.String(CustomTV.6.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.7)">$INFO[Skin.String(CustomTV.7.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.8)">$INFO[Skin.String(CustomTV.8.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.9)">$INFO[Skin.String(CustomTV.9.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.10)">$INFO[Skin.String(CustomTV.10.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.11)">$INFO[Skin.String(CustomTV.11.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.12)">$INFO[Skin.String(CustomTV.12.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.13)">$INFO[Skin.String(CustomTV.13.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.1)">$INFO[Skin.String(CustomRadio.1.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.2)">$INFO[Skin.String(CustomRadio.2.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.3)">$INFO[Skin.String(CustomRadio.3.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.4)">$INFO[Skin.String(CustomRadio.4.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.5)">$INFO[Skin.String(CustomRadio.5.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.1)">$INFO[Skin.String(CustomFav.1.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.2)">$INFO[Skin.String(CustomFav.2.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.3)">$INFO[Skin.String(CustomFav.3.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.4)">$INFO[Skin.String(CustomFav.4.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.5)">$INFO[Skin.String(CustomFav.5.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.6)">$INFO[Skin.String(CustomFav.6.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.7)">$INFO[Skin.String(CustomFav.7.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.8)">$INFO[Skin.String(CustomFav.8.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.9)">$INFO[Skin.String(CustomFav.9.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.1)">$INFO[Skin.String(CustomMusic.1.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.2)">$INFO[Skin.String(CustomMusic.2.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.3)">$INFO[Skin.String(CustomMusic.3.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.4)">$INFO[Skin.String(CustomMusic.4.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.5)">$INFO[Skin.String(CustomMusic.5.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.1)">$INFO[Skin.String(CustomAddon.1.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.2)">$INFO[Skin.String(CustomAddon.2.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.3)">$INFO[Skin.String(CustomAddon.3.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.4)">$INFO[Skin.String(CustomAddon.4.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.5)">$INFO[Skin.String(CustomAddon.5.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.1)">$INFO[Skin.String(CustomGame.1.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.2)">$INFO[Skin.String(CustomGame.2.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.3)">$INFO[Skin.String(CustomGame.3.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.4)">$INFO[Skin.String(CustomGame.4.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.5)">$INFO[Skin.String(CustomGame.5.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.6)">$INFO[Skin.String(CustomGame.6.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.7)">$INFO[Skin.String(CustomGame.7.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.8)">$INFO[Skin.String(CustomGame.8.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.9)">$INFO[Skin.String(CustomGame.9.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.10)">$INFO[Skin.String(CustomGame.10.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.11)">$INFO[Skin.String(CustomGame.11.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.12)">$INFO[Skin.String(CustomGame.12.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.13)">$INFO[Skin.String(CustomGame.13.List)]</value>
	</variable>
	<variable name="CustomPlaylistMusic">
		<!-- Custom skin item playlist action (List Music) in customisation dialog -->
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.1)">ActivateWindow(music,$INFO[Skin.String(CustomMovies.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.2)">ActivateWindow(music,$INFO[Skin.String(CustomMovies.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.3)">ActivateWindow(music,$INFO[Skin.String(CustomMovies.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.4)">ActivateWindow(music,$INFO[Skin.String(CustomMovies.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.5)">ActivateWindow(music,$INFO[Skin.String(CustomMovies.5.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.6)">ActivateWindow(music,$INFO[Skin.String(CustomMovies.6.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.7)">ActivateWindow(music,$INFO[Skin.String(CustomMovies.7.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.8)">ActivateWindow(music,$INFO[Skin.String(CustomMovies.8.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.9)">ActivateWindow(music,$INFO[Skin.String(CustomMovies.9.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.10)">ActivateWindow(music,$INFO[Skin.String(CustomMovies.10.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.11)">ActivateWindow(music,$INFO[Skin.String(CustomMovies.11.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.12)">ActivateWindow(music,$INFO[Skin.String(CustomMovies.12.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.13)">ActivateWindow(music,$INFO[Skin.String(CustomMovies.13.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.1)">ActivateWindow(music,$INFO[Skin.String(CustomTVShow.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.2)">ActivateWindow(music,$INFO[Skin.String(CustomTVShow.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.3)">ActivateWindow(music,$INFO[Skin.String(CustomTVShow.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.4)">ActivateWindow(music,$INFO[Skin.String(CustomTVShow.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.5)">ActivateWindow(music,$INFO[Skin.String(CustomTVShow.5.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.6)">ActivateWindow(music,$INFO[Skin.String(CustomTVShow.6.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.7)">ActivateWindow(music,$INFO[Skin.String(CustomTVShow.7.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.8)">ActivateWindow(music,$INFO[Skin.String(CustomTVShow.8.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.9)">ActivateWindow(music,$INFO[Skin.String(CustomTVShow.9.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.10)">ActivateWindow(music,$INFO[Skin.String(CustomTVShow.10.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.11)">ActivateWindow(music,$INFO[Skin.String(CustomTVShow.11.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.12)">ActivateWindow(music,$INFO[Skin.String(CustomTVShow.12.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.13)">ActivateWindow(music,$INFO[Skin.String(CustomTVShow.13.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.1)">ActivateWindow(music,$INFO[Skin.String(CustomTV.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.2)">ActivateWindow(music,$INFO[Skin.String(CustomTV.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.3)">ActivateWindow(music,$INFO[Skin.String(CustomTV.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.4)">ActivateWindow(music,$INFO[Skin.String(CustomTV.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.5)">ActivateWindow(music,$INFO[Skin.String(CustomTV.5.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.6)">ActivateWindow(music,$INFO[Skin.String(CustomTV.6.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.7)">ActivateWindow(music,$INFO[Skin.String(CustomTV.7.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.8)">ActivateWindow(music,$INFO[Skin.String(CustomTV.8.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.9)">ActivateWindow(music,$INFO[Skin.String(CustomTV.9.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.10)">ActivateWindow(music,$INFO[Skin.String(CustomTV.10.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.11)">ActivateWindow(music,$INFO[Skin.String(CustomTV.11.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.12)">ActivateWindow(music,$INFO[Skin.String(CustomTV.12.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.13)">ActivateWindow(music,$INFO[Skin.String(CustomTV.13.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.1)">ActivateWindow(music,$INFO[Skin.String(CustomRadio.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.2)">ActivateWindow(music,$INFO[Skin.String(CustomRadio.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.3)">ActivateWindow(music,$INFO[Skin.String(CustomRadio.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.4)">ActivateWindow(music,$INFO[Skin.String(CustomRadio.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.5)">ActivateWindow(music,$INFO[Skin.String(CustomRadio.5.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.1)">ActivateWindow(music,$INFO[Skin.String(CustomFav.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.2)">ActivateWindow(music,$INFO[Skin.String(CustomFav.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.3)">ActivateWindow(music,$INFO[Skin.String(CustomFav.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.4)">ActivateWindow(music,$INFO[Skin.String(CustomFav.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.5)">ActivateWindow(music,$INFO[Skin.String(CustomFav.5.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.6)">ActivateWindow(music,$INFO[Skin.String(CustomFav.6.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.7)">ActivateWindow(music,$INFO[Skin.String(CustomFav.7.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.8)">ActivateWindow(music,$INFO[Skin.String(CustomFav.8.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.9)">ActivateWindow(music,$INFO[Skin.String(CustomFav.9.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.1)">ActivateWindow(music,$INFO[Skin.String(CustomMusic.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.2)">ActivateWindow(music,$INFO[Skin.String(CustomMusic.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.3)">ActivateWindow(music,$INFO[Skin.String(CustomMusic.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.4)">ActivateWindow(music,$INFO[Skin.String(CustomMusic.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.5)">ActivateWindow(music,$INFO[Skin.String(CustomMusic.5.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.1)">ActivateWindow(music,$INFO[Skin.String(CustomAddon.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.2)">ActivateWindow(music,$INFO[Skin.String(CustomAddon.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.3)">ActivateWindow(music,$INFO[Skin.String(CustomAddon.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.4)">ActivateWindow(music,$INFO[Skin.String(CustomAddon.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.5)">ActivateWindow(music,$INFO[Skin.String(CustomAddon.5.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.1)">ActivateWindow(music,$INFO[Skin.String(CustomGame.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.2)">ActivateWindow(music,$INFO[Skin.String(CustomGame.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.3)">ActivateWindow(music,$INFO[Skin.String(CustomGame.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.4)">ActivateWindow(music,$INFO[Skin.String(CustomGame.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.5)">ActivateWindow(music,$INFO[Skin.String(CustomGame.5.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.6)">ActivateWindow(music,$INFO[Skin.String(CustomGame.6.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.7)">ActivateWindow(music,$INFO[Skin.String(CustomGame.7.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.8)">ActivateWindow(music,$INFO[Skin.String(CustomGame.8.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.9)">ActivateWindow(music,$INFO[Skin.String(CustomGame.9.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.10)">ActivateWindow(music,$INFO[Skin.String(CustomGame.10.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.11)">ActivateWindow(music,$INFO[Skin.String(CustomGame.11.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.12)">ActivateWindow(music,$INFO[Skin.String(CustomGame.12.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.13)">ActivateWindow(music,$INFO[Skin.String(CustomGame.13.List)],return)</value>
	</variable>
	<variable name="CustomPlaylistVideo">
		<!-- Custom skin item playlist action (List Video) in customisation dialog -->
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.1)">ActivateWindow(videos,$INFO[Skin.String(CustomMovies.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.2)">ActivateWindow(videos,$INFO[Skin.String(CustomMovies.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.3)">ActivateWindow(videos,$INFO[Skin.String(CustomMovies.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.4)">ActivateWindow(videos,$INFO[Skin.String(CustomMovies.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.5)">ActivateWindow(videos,$INFO[Skin.String(CustomMovies.5.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.6)">ActivateWindow(videos,$INFO[Skin.String(CustomMovies.6.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.7)">ActivateWindow(videos,$INFO[Skin.String(CustomMovies.7.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.8)">ActivateWindow(videos,$INFO[Skin.String(CustomMovies.8.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.9)">ActivateWindow(videos,$INFO[Skin.String(CustomMovies.9.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.10)">ActivateWindow(videos,$INFO[Skin.String(CustomMovies.10.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.11)">ActivateWindow(videos,$INFO[Skin.String(CustomMovies.11.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.12)">ActivateWindow(videos,$INFO[Skin.String(CustomMovies.12.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.13)">ActivateWindow(videos,$INFO[Skin.String(CustomMovies.13.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.1)">ActivateWindow(videos,$INFO[Skin.String(CustomTVShow.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.2)">ActivateWindow(videos,$INFO[Skin.String(CustomTVShow.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.3)">ActivateWindow(videos,$INFO[Skin.String(CustomTVShow.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.4)">ActivateWindow(videos,$INFO[Skin.String(CustomTVShow.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.5)">ActivateWindow(videos,$INFO[Skin.String(CustomTVShow.5.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.6)">ActivateWindow(videos,$INFO[Skin.String(CustomTVShow.6.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.7)">ActivateWindow(videos,$INFO[Skin.String(CustomTVShow.7.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.8)">ActivateWindow(videos,$INFO[Skin.String(CustomTVShow.8.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.9)">ActivateWindow(videos,$INFO[Skin.String(CustomTVShow.9.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.10)">ActivateWindow(videos,$INFO[Skin.String(CustomTVShow.10.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.11)">ActivateWindow(videos,$INFO[Skin.String(CustomTVShow.11.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.12)">ActivateWindow(videos,$INFO[Skin.String(CustomTVShow.12.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.13)">ActivateWindow(videos,$INFO[Skin.String(CustomTVShow.13.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.1)">ActivateWindow(videos,$INFO[Skin.String(CustomTV.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.2)">ActivateWindow(videos,$INFO[Skin.String(CustomTV.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.3)">ActivateWindow(videos,$INFO[Skin.String(CustomTV.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.4)">ActivateWindow(videos,$INFO[Skin.String(CustomTV.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.5)">ActivateWindow(videos,$INFO[Skin.String(CustomTV.5.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.6)">ActivateWindow(videos,$INFO[Skin.String(CustomTV.6.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.7)">ActivateWindow(videos,$INFO[Skin.String(CustomTV.7.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.8)">ActivateWindow(videos,$INFO[Skin.String(CustomTV.8.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.9)">ActivateWindow(videos,$INFO[Skin.String(CustomTV.9.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.10)">ActivateWindow(videos,$INFO[Skin.String(CustomTV.10.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.11)">ActivateWindow(videos,$INFO[Skin.String(CustomTV.11.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.12)">ActivateWindow(videos,$INFO[Skin.String(CustomTV.12.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.13)">ActivateWindow(videos,$INFO[Skin.String(CustomTV.13.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.1)">ActivateWindow(videos,$INFO[Skin.String(CustomRadio.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.2)">ActivateWindow(videos,$INFO[Skin.String(CustomRadio.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.3)">ActivateWindow(videos,$INFO[Skin.String(CustomRadio.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.4)">ActivateWindow(videos,$INFO[Skin.String(CustomRadio.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.5)">ActivateWindow(videos,$INFO[Skin.String(CustomRadio.5.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.1)">ActivateWindow(videos,$INFO[Skin.String(CustomFav.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.2)">ActivateWindow(videos,$INFO[Skin.String(CustomFav.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.3)">ActivateWindow(videos,$INFO[Skin.String(CustomFav.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.4)">ActivateWindow(videos,$INFO[Skin.String(CustomFav.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.5)">ActivateWindow(videos,$INFO[Skin.String(CustomFav.5.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.6)">ActivateWindow(videos,$INFO[Skin.String(CustomTV.6.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.7)">ActivateWindow(videos,$INFO[Skin.String(CustomTV.7.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.8)">ActivateWindow(videos,$INFO[Skin.String(CustomTV.8.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.9)">ActivateWindow(videos,$INFO[Skin.String(CustomTV.9.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.1)">ActivateWindow(videos,$INFO[Skin.String(CustomMusic.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.2)">ActivateWindow(videos,$INFO[Skin.String(CustomMusic.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.3)">ActivateWindow(videos,$INFO[Skin.String(CustomMusic.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.4)">ActivateWindow(videos,$INFO[Skin.String(CustomMusic.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.5)">ActivateWindow(videos,$INFO[Skin.String(CustomMusic.5.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.1)">ActivateWindow(videos,$INFO[Skin.String(CustomAddon.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.2)">ActivateWindow(videos,$INFO[Skin.String(CustomAddon.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.3)">ActivateWindow(videos,$INFO[Skin.String(CustomAddon.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.4)">ActivateWindow(videos,$INFO[Skin.String(CustomAddon.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.5)">ActivateWindow(videos,$INFO[Skin.String(CustomAddon.5.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.1)">ActivateWindow(videos,$INFO[Skin.String(CustomGame.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.2)">ActivateWindow(videos,$INFO[Skin.String(CustomGame.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.3)">ActivateWindow(videos,$INFO[Skin.String(CustomGame.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.4)">ActivateWindow(videos,$INFO[Skin.String(CustomGame.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.5)">ActivateWindow(videos,$INFO[Skin.String(CustomGame.5.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.6)">ActivateWindow(videos,$INFO[Skin.String(CustomGame.6.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.7)">ActivateWindow(videos,$INFO[Skin.String(CustomGame.7.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.8)">ActivateWindow(videos,$INFO[Skin.String(CustomGame.8.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.9)">ActivateWindow(videos,$INFO[Skin.String(CustomGame.9.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.10)">ActivateWindow(videos,$INFO[Skin.String(CustomGame.10.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.11)">ActivateWindow(videos,$INFO[Skin.String(CustomGame.11.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.12)">ActivateWindow(videos,$INFO[Skin.String(CustomGame.12.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.13)">ActivateWindow(videos,$INFO[Skin.String(CustomGame.13.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.1)">ActivateWindow(videos,$INFO[Skin.String(CustomWidget.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.2)">ActivateWindow(videos,$INFO[Skin.String(CustomWidget.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.3)">ActivateWindow(videos,$INFO[Skin.String(CustomWidget.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.4)">ActivateWindow(videos,$INFO[Skin.String(CustomWidget.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.5)">ActivateWindow(videos,$INFO[Skin.String(CustomWidget.5.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.6)">ActivateWindow(videos,$INFO[Skin.String(CustomWidget.6.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.7)">ActivateWindow(videos,$INFO[Skin.String(CustomWidget.7.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.8)">ActivateWindow(videos,$INFO[Skin.String(CustomWidget.8.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.9)">ActivateWindow(videos,$INFO[Skin.String(CustomWidget.9.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.10)">ActivateWindow(videos,$INFO[Skin.String(CustomWidget.10.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.11)">ActivateWindow(videos,$INFO[Skin.String(CustomWidget.11.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.12)">ActivateWindow(videos,$INFO[Skin.String(CustomWidget.12.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomSearch.1)">ActivateWindow(videos,$INFO[Skin.String(CustomSearch.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomSearch.2)">ActivateWindow(videos,$INFO[Skin.String(CustomSearch.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomSearch.3)">ActivateWindow(videos,$INFO[Skin.String(CustomSearch.3.List)],return)</value>
	</variable>
	<variable name="CustomPlaylistPlay">
		<!-- Custom skin item playlist action (Play playlist) in customisation dialog -->
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.1)">$INFO[Skin.String(CustomMovies.1.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.2)">$INFO[Skin.String(CustomMovies.2.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.3)">$INFO[Skin.String(CustomMovies.3.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.4)">$INFO[Skin.String(CustomMovies.4.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.5)">$INFO[Skin.String(CustomMovies.5.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.6)">$INFO[Skin.String(CustomMovies.6.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.7)">$INFO[Skin.String(CustomMovies.7.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.8)">$INFO[Skin.String(CustomMovies.8.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.9)">$INFO[Skin.String(CustomMovies.9.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.10)">$INFO[Skin.String(CustomMovies.10.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.11)">$INFO[Skin.String(CustomMovies.11.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.12)">$INFO[Skin.String(CustomMovies.12.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.13)">$INFO[Skin.String(CustomMovies.13.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.1)">$INFO[Skin.String(CustomTVShow.1.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.2)">$INFO[Skin.String(CustomTVShow.2.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.3)">$INFO[Skin.String(CustomTVShow.3.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.4)">$INFO[Skin.String(CustomTVShow.4.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.5)">$INFO[Skin.String(CustomTVShow.5.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.6)">$INFO[Skin.String(CustomTVShow.6.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.7)">$INFO[Skin.String(CustomTVShow.7.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.8)">$INFO[Skin.String(CustomTVShow.8.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.9)">$INFO[Skin.String(CustomTVShow.9.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.10)">$INFO[Skin.String(CustomTVShow.10.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.11)">$INFO[Skin.String(CustomTVShow.11.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.12)">$INFO[Skin.String(CustomTVShow.12.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.13)">$INFO[Skin.String(CustomTVShow.13.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.1)">$INFO[Skin.String(CustomTV.1.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.2)">$INFO[Skin.String(CustomTV.2.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.3)">$INFO[Skin.String(CustomTV.3.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.4)">$INFO[Skin.String(CustomTV.4.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.5)">$INFO[Skin.String(CustomTV.5.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.6)">$INFO[Skin.String(CustomTV.6.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.7)">$INFO[Skin.String(CustomTV.7.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.8)">$INFO[Skin.String(CustomTV.8.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.9)">$INFO[Skin.String(CustomTV.9.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.10)">$INFO[Skin.String(CustomTV.10.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.11)">$INFO[Skin.String(CustomTV.11.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.12)">$INFO[Skin.String(CustomTV.12.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.13)">$INFO[Skin.String(CustomTV.13.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.1)">$INFO[Skin.String(CustomRadio.1.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.2)">$INFO[Skin.String(CustomRadio.2.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.3)">$INFO[Skin.String(CustomRadio.3.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.4)">$INFO[Skin.String(CustomRadio.4.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.5)">$INFO[Skin.String(CustomRadio.5.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.1)">$INFO[Skin.String(CustomFav.1.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.2)">$INFO[Skin.String(CustomFav.2.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.3)">$INFO[Skin.String(CustomFav.3.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.4)">$INFO[Skin.String(CustomFav.4.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.5)">$INFO[Skin.String(CustomFav.5.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.6)">$INFO[Skin.String(CustomFav.6.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.7)">$INFO[Skin.String(CustomFav.7.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.8)">$INFO[Skin.String(CustomFav.8.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.9)">$INFO[Skin.String(CustomFav.9.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.1)">$INFO[Skin.String(CustomMusic.1.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.2)">$INFO[Skin.String(CustomMusic.2.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.3)">$INFO[Skin.String(CustomMusic.3.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.4)">$INFO[Skin.String(CustomMusic.4.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.5)">$INFO[Skin.String(CustomMusic.5.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.1)">$INFO[Skin.String(CustomAddon.1.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.2)">$INFO[Skin.String(CustomAddon.2.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.3)">$INFO[Skin.String(CustomAddon.3.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.4)">$INFO[Skin.String(CustomAddon.4.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.5)">$INFO[Skin.String(CustomAddon.5.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.1)">$INFO[Skin.String(CustomGame.1.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.2)">$INFO[Skin.String(CustomGame.2.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.3)">$INFO[Skin.String(CustomGame.3.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.4)">$INFO[Skin.String(CustomGame.4.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.5)">$INFO[Skin.String(CustomGame.5.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.6)">$INFO[Skin.String(CustomGame.6.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.7)">$INFO[Skin.String(CustomGame.7.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.8)">$INFO[Skin.String(CustomGame.8.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.9)">$INFO[Skin.String(CustomGame.9.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.10)">$INFO[Skin.String(CustomGame.10.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.11)">$INFO[Skin.String(CustomGame.11.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.12)">$INFO[Skin.String(CustomGame.12.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.13)">$INFO[Skin.String(CustomGame.13.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.1)">$INFO[Skin.String(CustomWidget.1.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.2)">$INFO[Skin.String(CustomWidget.2.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.3)">$INFO[Skin.String(CustomWidget.3.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.4)">$INFO[Skin.String(CustomWidget.4.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.5)">$INFO[Skin.String(CustomWidget.5.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.6)">$INFO[Skin.String(CustomWidget.6.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.7)">$INFO[Skin.String(CustomWidget.7.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.8)">$INFO[Skin.String(CustomWidget.8.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.9)">$INFO[Skin.String(CustomWidget.9.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.10)">$INFO[Skin.String(CustomWidget.10.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.11)">$INFO[Skin.String(CustomWidget.11.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.12)">$INFO[Skin.String(CustomWidget.12.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomSearch.1)">$INFO[Skin.String(CustomSearch.1.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomSearch.2)">$INFO[Skin.String(CustomSearch.2.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomSearch.3)">$INFO[Skin.String(CustomSearch.3.List),PlayMedia(",")]</value>
	</variable>
	<variable name="CustomSkinIcon">
		<!-- Show custom skin item icon in customisation dialog -->
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.1)">$INFO[Skin.String(CustomMovies.1.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.2)">$INFO[Skin.String(CustomMovies.2.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.3)">$INFO[Skin.String(CustomMovies.3.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.4)">$INFO[Skin.String(CustomMovies.4.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.5)">$INFO[Skin.String(CustomMovies.5.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.6)">$INFO[Skin.String(CustomMovies.6.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.7)">$INFO[Skin.String(CustomMovies.7.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.8)">$INFO[Skin.String(CustomMovies.8.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.9)">$INFO[Skin.String(CustomMovies.9.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.10)">$INFO[Skin.String(CustomMovies.10.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.11)">$INFO[Skin.String(CustomMovies.11.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.12)">$INFO[Skin.String(CustomMovies.12.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.13)">$INFO[Skin.String(CustomMovies.13.Icon)]</value>		
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.1)">$INFO[Skin.String(CustomTVShow.1.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.2)">$INFO[Skin.String(CustomTVShow.2.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.3)">$INFO[Skin.String(CustomTVShow.3.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.4)">$INFO[Skin.String(CustomTVShow.4.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.5)">$INFO[Skin.String(CustomTVShow.5.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.6)">$INFO[Skin.String(CustomTVShow.6.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.7)">$INFO[Skin.String(CustomTVShow.7.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.8)">$INFO[Skin.String(CustomTVShow.8.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.9)">$INFO[Skin.String(CustomTVShow.9.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.10)">$INFO[Skin.String(CustomTVShow.10.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.11)">$INFO[Skin.String(CustomTVShow.11.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.12)">$INFO[Skin.String(CustomTVShow.12.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.13)">$INFO[Skin.String(CustomTVShow.13.Icon)]</value>				
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.1)">$INFO[Skin.String(CustomTV.1.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.2)">$INFO[Skin.String(CustomTV.2.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.3)">$INFO[Skin.String(CustomTV.3.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.4)">$INFO[Skin.String(CustomTV.4.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.5)">$INFO[Skin.String(CustomTV.5.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.6)">$INFO[Skin.String(CustomTV.6.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.7)">$INFO[Skin.String(CustomTV.7.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.8)">$INFO[Skin.String(CustomTV.8.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.9)">$INFO[Skin.String(CustomTV.9.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.10)">$INFO[Skin.String(CustomTV.10.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.11)">$INFO[Skin.String(CustomTV.11.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.12)">$INFO[Skin.String(CustomTV.12.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.13)">$INFO[Skin.String(CustomTV.13.Icon)]</value>		
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.1)">$INFO[Skin.String(CustomRadio.1.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.2)">$INFO[Skin.String(CustomRadio.2.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.3)">$INFO[Skin.String(CustomRadio.3.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.4)">$INFO[Skin.String(CustomRadio.4.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.5)">$INFO[Skin.String(CustomRadio.5.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.1)">$INFO[Skin.String(CustomFav.1.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.2)">$INFO[Skin.String(CustomFav.2.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.3)">$INFO[Skin.String(CustomFav.3.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.4)">$INFO[Skin.String(CustomFav.4.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.5)">$INFO[Skin.String(CustomFav.5.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.6)">$INFO[Skin.String(CustomFav.6.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.7)">$INFO[Skin.String(CustomFav.7.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.8)">$INFO[Skin.String(CustomFav.8.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.9)">$INFO[Skin.String(CustomFav.9.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.1)">$INFO[Skin.String(CustomMusic.1.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.2)">$INFO[Skin.String(CustomMusic.2.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.3)">$INFO[Skin.String(CustomMusic.3.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.4)">$INFO[Skin.String(CustomMusic.4.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.5)">$INFO[Skin.String(CustomMusic.5.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.1)">$INFO[Skin.String(CustomAddon.1.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.2)">$INFO[Skin.String(CustomAddon.2.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.3)">$INFO[Skin.String(CustomAddon.3.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.4)">$INFO[Skin.String(CustomAddon.4.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.5)">$INFO[Skin.String(CustomAddon.5.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.1)">$INFO[Skin.String(CustomGame.1.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.2)">$INFO[Skin.String(CustomGame.2.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.3)">$INFO[Skin.String(CustomGame.3.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.4)">$INFO[Skin.String(CustomGame.4.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.5)">$INFO[Skin.String(CustomGame.5.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.6)">$INFO[Skin.String(CustomGame.6.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.7)">$INFO[Skin.String(CustomGame.7.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.8)">$INFO[Skin.String(CustomGame.8.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.9)">$INFO[Skin.String(CustomGame.9.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.10)">$INFO[Skin.String(CustomGame.10.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.11)">$INFO[Skin.String(CustomGame.11.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.12)">$INFO[Skin.String(CustomGame.12.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.13)">$INFO[Skin.String(CustomGame.13.Icon)]</value>		
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.1)">$INFO[Skin.String(CustomWidget.1.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.2)">$INFO[Skin.String(CustomWidget.2.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.3)">$INFO[Skin.String(CustomWidget.3.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.4)">$INFO[Skin.String(CustomWidget.4.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.5)">$INFO[Skin.String(CustomWidget.5.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.6)">$INFO[Skin.String(CustomWidget.6.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.7)">$INFO[Skin.String(CustomWidget.7.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.8)">$INFO[Skin.String(CustomWidget.8.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.9)">$INFO[Skin.String(CustomWidget.9.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.10)">$INFO[Skin.String(CustomWidget.10.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.11)">$INFO[Skin.String(CustomWidget.11.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.12)">$INFO[Skin.String(CustomWidget.12.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomSearch.1)">$INFO[Skin.String(CustomSearch.1.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomSearch.2)">$INFO[Skin.String(CustomSearch.2.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomSearch.3)">$INFO[Skin.String(CustomSearch.3.Icon)]</value>
	</variable>
	<variable name="CustomSkinLabel">
		<!-- Show custom skin item label in customisation dialog -->
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.1)">$INFO[Skin.String(CustomMovies.1.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.2)">$INFO[Skin.String(CustomMovies.2.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.3)">$INFO[Skin.String(CustomMovies.3.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.4)">$INFO[Skin.String(CustomMovies.4.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.5)">$INFO[Skin.String(CustomMovies.5.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.6)">$INFO[Skin.String(CustomMovies.6.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.7)">$INFO[Skin.String(CustomMovies.7.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.8)">$INFO[Skin.String(CustomMovies.8.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.9)">$INFO[Skin.String(CustomMovies.9.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.10)">$INFO[Skin.String(CustomMovies.10.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.11)">$INFO[Skin.String(CustomMovies.11.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.12)">$INFO[Skin.String(CustomMovies.12.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.13)">$INFO[Skin.String(CustomMovies.13.Label)]</value>		
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.1)">$INFO[Skin.String(CustomTVShow.1.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.2)">$INFO[Skin.String(CustomTVShow.2.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.3)">$INFO[Skin.String(CustomTVShow.3.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.4)">$INFO[Skin.String(CustomTVShow.4.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.5)">$INFO[Skin.String(CustomTVShow.5.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.6)">$INFO[Skin.String(CustomTVShow.6.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.7)">$INFO[Skin.String(CustomTVShow.7.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.8)">$INFO[Skin.String(CustomTVShow.8.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.9)">$INFO[Skin.String(CustomTVShow.9.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.10)">$INFO[Skin.String(CustomTVShow.10.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.11)">$INFO[Skin.String(CustomTVShow.11.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.12)">$INFO[Skin.String(CustomTVShow.12.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.13)">$INFO[Skin.String(CustomTVShow.13.Label)]</value>						
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.1)">$INFO[Skin.String(CustomTV.1.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.2)">$INFO[Skin.String(CustomTV.2.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.3)">$INFO[Skin.String(CustomTV.3.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.4)">$INFO[Skin.String(CustomTV.4.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.5)">$INFO[Skin.String(CustomTV.5.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.6)">$INFO[Skin.String(CustomTV.6.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.7)">$INFO[Skin.String(CustomTV.7.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.8)">$INFO[Skin.String(CustomTV.8.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.9)">$INFO[Skin.String(CustomTV.9.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.10)">$INFO[Skin.String(CustomTV.10.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.11)">$INFO[Skin.String(CustomTV.11.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.12)">$INFO[Skin.String(CustomTV.12.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.13)">$INFO[Skin.String(CustomTV.13.Label)]</value>		
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.1)">$INFO[Skin.String(CustomRadio.1.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.2)">$INFO[Skin.String(CustomRadio.2.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.3)">$INFO[Skin.String(CustomRadio.3.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.4)">$INFO[Skin.String(CustomRadio.4.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.5)">$INFO[Skin.String(CustomRadio.5.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.1)">$INFO[Skin.String(CustomFav.1.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.2)">$INFO[Skin.String(CustomFav.2.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.3)">$INFO[Skin.String(CustomFav.3.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.4)">$INFO[Skin.String(CustomFav.4.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.5)">$INFO[Skin.String(CustomFav.5.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.6)">$INFO[Skin.String(CustomFav.6.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.7)">$INFO[Skin.String(CustomFav.7.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.8)">$INFO[Skin.String(CustomFav.8.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.9)">$INFO[Skin.String(CustomFav.9.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.1)">$INFO[Skin.String(CustomMusic.1.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.2)">$INFO[Skin.String(CustomMusic.2.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.3)">$INFO[Skin.String(CustomMusic.3.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.4)">$INFO[Skin.String(CustomMusic.4.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.5)">$INFO[Skin.String(CustomMusic.5.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.1)">$INFO[Skin.String(CustomAddon.1.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.2)">$INFO[Skin.String(CustomAddon.2.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.3)">$INFO[Skin.String(CustomAddon.3.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.4)">$INFO[Skin.String(CustomAddon.4.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.5)">$INFO[Skin.String(CustomAddon.5.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.1)">$INFO[Skin.String(CustomGame.1.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.2)">$INFO[Skin.String(CustomGame.2.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.3)">$INFO[Skin.String(CustomGame.3.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.4)">$INFO[Skin.String(CustomGame.4.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.5)">$INFO[Skin.String(CustomGame.5.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.6)">$INFO[Skin.String(CustomGame.6.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.7)">$INFO[Skin.String(CustomGame.7.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.8)">$INFO[Skin.String(CustomGame.8.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.9)">$INFO[Skin.String(CustomGame.9.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.10)">$INFO[Skin.String(CustomGame.10.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.11)">$INFO[Skin.String(CustomGame.11.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.12)">$INFO[Skin.String(CustomGame.12.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomGame.13)">$INFO[Skin.String(CustomGame.13.Label)]</value>		
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.1)">$INFO[Skin.String(CustomWidget.1.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.2)">$INFO[Skin.String(CustomWidget.2.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.3)">$INFO[Skin.String(CustomWidget.3.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.4)">$INFO[Skin.String(CustomWidget.4.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.5)">$INFO[Skin.String(CustomWidget.5.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.6)">$INFO[Skin.String(CustomWidget.6.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.7)">$INFO[Skin.String(CustomWidget.7.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.8)">$INFO[Skin.String(CustomWidget.8.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.9)">$INFO[Skin.String(CustomWidget.9.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.10)">$INFO[Skin.String(CustomWidget.10.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.11)">$INFO[Skin.String(CustomWidget.11.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomWidget.12)">$INFO[Skin.String(CustomWidget.12.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomSearch.1)">$INFO[Skin.String(CustomSearch.1.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomSearch.2)">$INFO[Skin.String(CustomSearch.2.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomSearch.3)">$INFO[Skin.String(CustomSearch.3.Label)]</value>
	</variable>
	<variable name="SkinSettingHelp">
		<!-- Help strings for skin settings -->
		<value condition="Control.HasFocus(802)">$LOCALIZE[32008]</value>
		<value condition="Control.HasFocus(803)">$LOCALIZE[32008]</value>
		<value condition="Control.HasFocus(804)">$LOCALIZE[32008]</value>
		<value condition="Control.HasFocus(805)">$LOCALIZE[32008]</value>
		<value condition="Control.HasFocus(806)">$LOCALIZE[32008]</value>
		<value condition="Control.HasFocus(807)">$LOCALIZE[32008]</value>		
		<value condition="Control.HasFocus(808)">$LOCALIZE[32008]</value>
		<value condition="Control.HasFocus(809)">$LOCALIZE[32008]</value>
		<value condition="Control.HasFocus(810)">$LOCALIZE[32008]</value>
		<value condition="Control.HasFocus(811)">$LOCALIZE[32008]</value>
		<value condition="Control.HasFocus(812)">$LOCALIZE[32008]</value>
		<value condition="Control.HasFocus(813)">$LOCALIZE[32008]</value>		
		<value condition="Control.HasFocus(814)">$LOCALIZE[32008]</value>
		<value condition="Control.HasFocus(815)">$LOCALIZE[32008]</value>		
		<value condition="Control.HasFocus(816)">$LOCALIZE[32008]</value>		
		<value condition="Control.HasFocus(302)">$LOCALIZE[32001]</value>
		<value condition="Control.HasFocus(303)">$LOCALIZE[32002]</value>
		<value condition="Control.HasFocus(304)">$LOCALIZE[32021]</value>
		<value condition="Control.HasFocus(305)">$LOCALIZE[32003]</value>
		<value condition="Control.HasFocus(306)">$LOCALIZE[32004]</value>
		<value condition="Control.HasFocus(307)">$LOCALIZE[32005]</value>		
		<value condition="Control.HasFocus(308)">$LOCALIZE[32006]</value>
		<value condition="Control.HasFocus(321) | Control.HasFocus(321) | Control.HasFocus(322) | Control.HasFocus(323) | Control.HasFocus(324) | Control.HasFocus(325) | Control.HasFocus(327) | Control.HasFocus(328) | Control.HasFocus(329) | Control.HasFocus(341) | Control.HasFocus(331) | Control.HasFocus(332) | Control.HasFocus(333) | Control.HasFocus(334) | Control.HasFocus(336) | Control.HasFocus(337) | Control.HasFocus(338) | Control.HasFocus(339) | Control.HasFocus(340) | Control.HasFocus(342)">$LOCALIZE[31986]</value>
		<value condition="Control.HasFocus(981)">$LOCALIZE[31317]</value>
		<value condition="Control.HasFocus(983)">$LOCALIZE[31318]</value>
		<value condition="Control.HasFocus(985)">$LOCALIZE[31362]</value>
		<value condition="Control.HasFocus(984)">$LOCALIZE[32007]</value>
		<value condition="Control.HasFocus(990)">$LOCALIZE[32008]</value>
		<value condition="Control.HasFocus(221) | Control.HasFocus(222) | Control.HasFocus(223) | Control.HasFocus(224) | Control.HasFocus(225) | Control.HasFocus(227) | Control.HasFocus(228) | Control.HasFocus(229) | Control.HasFocus(989)">$LOCALIZE[31985]</value>
		<value condition="Control.HasFocus(502) | Control.HasFocus(503)">$LOCALIZE[31340]</value>
		<value condition="Control.HasFocus(504)">$LOCALIZE[31988]</value>
		<value condition="Control.HasFocus(505)">$LOCALIZE[31992]</value>
		<value condition="Control.HasFocus(506)">$LOCALIZE[31993]</value>
		<value condition="Control.HasFocus(507)">$LOCALIZE[31994]</value>
		<value condition="Control.HasFocus(508)">$LOCALIZE[31995]</value>
		<value condition="Control.HasFocus(516)">$LOCALIZE[32012]</value>
		<value condition="Control.HasFocus(517)">$LOCALIZE[32015]</value>
		<value condition="Control.HasFocus(519)">$LOCALIZE[32013]</value>
		<value condition="Control.HasFocus(520)">$LOCALIZE[32013]</value>
		<value condition="Control.HasFocus(521)">$LOCALIZE[32013]</value>
		<value condition="Control.HasFocus(9021)">$LOCALIZE[32016]</value>
		<value condition="Control.HasFocus(9022)">$LOCALIZE[32014]</value>
		<value condition="Control.HasFocus(9023)">$LOCALIZE[32017]</value>
		<value condition="Control.HasFocus(9024)">$LOCALIZE[31341]</value>
		<value condition="Control.HasFocus(9025)">$LOCALIZE[31341]</value>
		<value condition="Control.HasFocus(9026)">$LOCALIZE[31341]</value>
		<value condition="Control.HasFocus(702)">$LOCALIZE[31363]</value>
		<value condition="Control.HasFocus(703)">$LOCALIZE[31361]</value>
		<value condition="Control.HasFocus(704)">$LOCALIZE[31364]</value>
		<value condition="Control.HasFocus(705)">$LOCALIZE[31365]</value>
		<value condition="Control.HasFocus(9001)">$LOCALIZE[31363]</value>
		<value condition="Control.HasFocus(9002)">$LOCALIZE[31361]</value>
		<value condition="Control.HasFocus(9003)">$LOCALIZE[31364]</value>
		<value condition="Control.HasFocus(9004)">$LOCALIZE[31365]</value>
		<value condition="Control.HasFocus(988)">$LOCALIZE[31367]</value>
		<value condition="Control.HasFocus(9005)">$LOCALIZE[31368]</value>
		<value condition="Control.HasFocus(719)">$LOCALIZE[31369]</value>
		<value condition="Control.HasFocus(510)">$LOCALIZE[31375]</value>
		<value condition="Control.HasFocus(511)">$LOCALIZE[31996]</value>
		<value condition="Control.HasFocus(512)">$LOCALIZE[31997]</value>
		<value condition="Control.HasFocus(514)">$LOCALIZE[31999]</value>
		<value condition="Control.HasFocus(515)">$LOCALIZE[32000]</value>
		<value condition="Control.HasFocus(513)">$LOCALIZE[31998]</value>
		<value condition="Control.HasFocus(984)">$LOCALIZE[31360]</value>
		<value condition="Control.HasFocus(987)">$LOCALIZE[31359]</value>
		<value condition="Control.HasFocus(986)">$LOCALIZE[31986]</value>
		<value condition="Control.HasFocus(702)">$LOCALIZE[31315]</value>
		<value condition="Control.HasFocus(981)">$LOCALIZE[31317]</value>
		<value condition="Control.HasFocus(983)">$LOCALIZE[31318]</value>
		<value condition="Control.HasFocus(902)">$LOCALIZE[32017]</value>
		<value condition="Control.HasFocus(903)">$LOCALIZE[32017]</value>
		<value condition="Control.HasFocus(904)">$LOCALIZE[32017]</value>
		<value condition="Control.HasFocus(905)">$LOCALIZE[32017]</value>
		<value condition="Control.HasFocus(906)">$LOCALIZE[32017]</value>
		<value condition="Control.HasFocus(907)">$LOCALIZE[32017]</value>
		<value condition="Control.HasFocus(908)">$LOCALIZE[32017]</value>
		<value condition="Control.HasFocus(909)">$LOCALIZE[32017]</value>
		<value condition="Control.HasFocus(910)">$LOCALIZE[32017]</value>
		<value condition="Control.HasFocus(911)">$LOCALIZE[32017]</value>
		<value condition="Control.HasFocus(912)">$LOCALIZE[32017]</value>
		<value condition="Control.HasFocus(913)">$LOCALIZE[32017]</value>
		<value condition="Control.HasFocus(914)">$LOCALIZE[32017]</value>
		<value condition="Control.HasFocus(915)">$LOCALIZE[32017]</value>
		<value condition="Control.HasFocus(916)">$LOCALIZE[32017]</value>
		<value condition="Control.HasFocus(917)">$LOCALIZE[32017]</value>
	</variable>
	<variable name="SkinSettingTip">	
		<value condition="Window.IsVisible(Custom_HomeCustomise.xml) + !Control.HasFocus(402) | !Control.HasFocus(403)">Consejo: En el Inicio "TV" pulsa atrás sobre cualquier menú, para navegar por sus carátulas.</value>
	</variable>
    <variable name="Image_Clearlogo">
        <value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(artist.clearlogo))">$INFO[ListItem.Art(artist.clearlogo)]</value>
    </variable>
	<include file="Defaults.xml"/>

	<include name="shelf-defaulticon">
		<param name="defaulticon"/>
		<definition>
			<control type="image">
				<left>812</left>
				<top>140</top>
				<width>296</width>
				<height>296</height>
				<texture>skin-logo-big.png</texture>
			</control>
		</definition>
	</include>
    <include name="Defs_Hidden_Button">
        <visible allowhiddenfocus="true">false</visible>
        <width>1</width>
        <height>1</height>
        <texturefocus />
        <texturenofocus />
    </include>	
    <variable name="Items_LockUnlock_Label">
        <value condition="[Container.Content() + !String.IsEmpty(Skin.String(Skin.ForcedView.))] | [Container.Content(tags) + !String.IsEmpty(Skin.String(Skin.ForcedView.tags))] | [Container.Content(years) + !String.IsEmpty(Skin.String(Skin.ForcedView.years))] | [Container.Content(genres) + !String.IsEmpty(Skin.String(Skin.ForcedView.genres))] | [Container.Content(countries) + !String.IsEmpty(Skin.String(Skin.ForcedView.countries))] | [Container.Content(studios) + !String.IsEmpty(Skin.String(Skin.ForcedView.studios))] | [Container.Content(playlists) + !String.IsEmpty(Skin.String(Skin.ForcedView.playlists))] | [Container.Content(movies) + !String.IsEmpty(Skin.String(Skin.ForcedView.movies))] | [Container.Content(sets) + !String.IsEmpty(Skin.String(Skin.ForcedView.sets))] | [Container.Content(tvshows) + !String.IsEmpty(Skin.String(Skin.ForcedView.tvshows))] | [Container.Content(seasons) + !String.IsEmpty(Skin.String(Skin.ForcedView.seasons))] | [Container.Content(episodes) + !String.IsEmpty(Skin.String(Skin.ForcedView.episodes))] | [Container.Content(artists) + !String.IsEmpty(Skin.String(Skin.ForcedView.artists))] | [Container.Content(albums) + !String.IsEmpty(Skin.String(Skin.ForcedView.albums))] | [Container.Content(songs) + !String.IsEmpty(Skin.String(Skin.ForcedView.songs))] | [Container.Content(musicvideos) + !String.IsEmpty(Skin.String(Skin.ForcedView.musicvideos))] | [Container.Content(addons) + !String.IsEmpty(Skin.String(Skin.ForcedView.addons))] | [Container.Content(actors) + !String.IsEmpty(Skin.String(Skin.ForcedView.actors))] | [Container.Content(directors) + !String.IsEmpty(Skin.String(Skin.ForcedView.directors))] | [Container.Content(files) + !String.IsEmpty(Skin.String(Skin.ForcedView.files))] | [Container.Content(mixed) + !String.IsEmpty(Skin.String(Skin.ForcedView.mixed))] | [Container.Content(images) + !String.IsEmpty(Skin.String(Skin.ForcedView.images))] | [Container.Content(games) + !String.IsEmpty(Skin.String(Skin.ForcedView.games))] | [Container.Content(unknown) + !String.IsEmpty(Skin.String(Skin.ForcedView.unknown))] | [Container.Content(videos) + !String.IsEmpty(Skin.String(Skin.ForcedView.videos))]">[COLOR blue]Desbloquear Vista[/COLOR]</value>
        <value>Bloquear Vista</value>
    </variable>	
    <include name="View_Forced">
        <visible>[Container.Content(movies) + [String.IsEqual(Skin.String(Skin.ForcedView.movies),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.movies))]] | [Container.Content(sets) + [String.IsEqual(Skin.String(Skin.ForcedView.sets),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.sets))]] | [Container.Content(tvshows) + [String.IsEqual(Skin.String(Skin.ForcedView.tvshows),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.tvshows))]] | [Container.Content(seasons) + [String.IsEqual(Skin.String(Skin.ForcedView.seasons),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.seasons))]] | [Container.Content(episodes) + [String.IsEqual(Skin.String(Skin.ForcedView.episodes),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.episodes))]] | [Container.Content(actors) + [String.IsEqual(Skin.String(Skin.ForcedView.actors),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.actors))]] | [Container.Content(artists) + [String.IsEqual(Skin.String(Skin.ForcedView.artists),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.artists))]] | [Container.Content(albums) + [String.IsEqual(Skin.String(Skin.ForcedView.albums),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.albums))]] | [Container.Content(songs) + [String.IsEqual(Skin.String(Skin.ForcedView.songs),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.songs))]] | [Container.Content(addons) + [String.IsEqual(Skin.String(Skin.ForcedView.addons),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.addons))]] | [Container.Content(genres) + [String.IsEqual(Skin.String(Skin.ForcedView.genres),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.genres))]] | [Container.Content(images) + [String.IsEqual(Skin.String(Skin.ForcedView.images),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.images))]] | [Container.Content(videos) + [String.IsEqual(Skin.String(Skin.ForcedView.videos),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.videos))]] | [Container.Content() + [String.IsEqual(Skin.String(Skin.ForcedView.),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.))]] | [Container.Content(tags) + [String.IsEqual(Skin.String(Skin.ForcedView.tags),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.tags))]] | [Container.Content(years) + [String.IsEqual(Skin.String(Skin.ForcedView.years),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.years))]] | [Container.Content(countries) + [String.IsEqual(Skin.String(Skin.ForcedView.countries),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.countries))]] | [Container.Content(studios) + [String.IsEqual(Skin.String(Skin.ForcedView.studios),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.studios))]] | [Container.Content(playlists) + [String.IsEqual(Skin.String(Skin.ForcedView.playlists),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.playlists))]] | [Container.Content(musicvideos) + [String.IsEqual(Skin.String(Skin.ForcedView.musicvideos),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.musicvideos))]] | [Container.Content(directors) + [String.IsEqual(Skin.String(Skin.ForcedView.directors),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.directors))]] | [Container.Content(files) + [String.IsEqual(Skin.String(Skin.ForcedView.files),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.files))]] | [Container.Content(mixed) + [String.IsEqual(Skin.String(Skin.ForcedView.mixed),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.mixed))]] | [Container.Content(unknown) + [String.IsEqual(Skin.String(Skin.ForcedView.unknown),$PARAM[string]) | String.IsEmpty(Skin.String(Skin.ForcedView.unknown))]] | [!Container.Content(movies) + !Container.Content(sets) + !Container.Content(tvshows) + !Container.Content(seasons) + !Container.Content(episodes) + !Container.Content(actors) + !Container.Content(artists) + !Container.Content(albums) + !Container.Content(songs) + !Container.Content(addons) + !Container.Content(genres) + !Container.Content(images) + !Container.Content(videos) + !Container.Content() + !Container.Content(tags) + !Container.Content(years) + !Container.Content(countries) + !Container.Content(studios) + !Container.Content(playlists) + !Container.Content(musicvideos) + !Container.Content(directors) + !Container.Content(files) + !Container.Content(mixed) + !Container.Content(unknown)] | Window.IsVisible(MyPlaylist.xml)</visible>
    </include>		
    <include name="Items_LockUnlock">
        <onclick condition="[Container.Content() + !String.IsEmpty(Skin.String(Skin.ForcedView.))]">Skin.Reset(Skin.ForcedView.)</onclick>
        <onclick condition="[Container.Content(tags) + !String.IsEmpty(Skin.String(Skin.ForcedView.tags))]">Skin.Reset(Skin.ForcedView.tags)</onclick>
        <onclick condition="[Container.Content(years) + !String.IsEmpty(Skin.String(Skin.ForcedView.years))]">Skin.Reset(Skin.ForcedView.years)</onclick>
        <onclick condition="[Container.Content(genres) + !String.IsEmpty(Skin.String(Skin.ForcedView.genres))]">Skin.Reset(Skin.ForcedView.genres)</onclick>
        <onclick condition="[Container.Content(countries) + !String.IsEmpty(Skin.String(Skin.ForcedView.countries))]">Skin.Reset(Skin.ForcedView.countries)</onclick>
        <onclick condition="[Container.Content(studios) + !String.IsEmpty(Skin.String(Skin.ForcedView.studios))]">Skin.Reset(Skin.ForcedView.studios)</onclick>
        <onclick condition="[Container.Content(playlists) + !String.IsEmpty(Skin.String(Skin.ForcedView.playlists))]">Skin.Reset(Skin.ForcedView.playlists)</onclick>
        <onclick condition="[Container.Content(movies) + !String.IsEmpty(Skin.String(Skin.ForcedView.movies))]">Skin.Reset(Skin.ForcedView.movies)</onclick>
        <onclick condition="[Container.Content(sets) + !String.IsEmpty(Skin.String(Skin.ForcedView.sets))]">Skin.Reset(Skin.ForcedView.sets)</onclick>
        <onclick condition="[Container.Content(tvshows) + !String.IsEmpty(Skin.String(Skin.ForcedView.tvshows))]">Skin.Reset(Skin.ForcedView.tvshows)</onclick>
        <onclick condition="[Container.Content(seasons) + !String.IsEmpty(Skin.String(Skin.ForcedView.seasons))]">Skin.Reset(Skin.ForcedView.seasons)</onclick>
        <onclick condition="[Container.Content(episodes) + !String.IsEmpty(Skin.String(Skin.ForcedView.episodes))]">Skin.Reset(Skin.ForcedView.episodes)</onclick>
        <onclick condition="[Container.Content(artists) + !String.IsEmpty(Skin.String(Skin.ForcedView.artists))]">Skin.Reset(Skin.ForcedView.artists)</onclick>
        <onclick condition="[Container.Content(albums) + !String.IsEmpty(Skin.String(Skin.ForcedView.albums))]">Skin.Reset(Skin.ForcedView.albums)</onclick>
        <onclick condition="[Container.Content(songs) + !String.IsEmpty(Skin.String(Skin.ForcedView.songs))]">Skin.Reset(Skin.ForcedView.songs)</onclick>
        <onclick condition="[Container.Content(musicvideos) + !String.IsEmpty(Skin.String(Skin.ForcedView.musicvideos))]">Skin.Reset(Skin.ForcedView.musicvideos)</onclick>
        <onclick condition="[Container.Content(addons) + !String.IsEmpty(Skin.String(Skin.ForcedView.addons))]">Skin.Reset(Skin.ForcedView.addons)</onclick>
        <onclick condition="[Container.Content(actors) + !String.IsEmpty(Skin.String(Skin.ForcedView.actors))]">Skin.Reset(Skin.ForcedView.actors)</onclick>
        <onclick condition="[Container.Content(directors) + !String.IsEmpty(Skin.String(Skin.ForcedView.directors))]">Skin.Reset(Skin.ForcedView.directors)</onclick>
        <onclick condition="[Container.Content(files) + !String.IsEmpty(Skin.String(Skin.ForcedView.files))]">Skin.Reset(Skin.ForcedView.files)</onclick>
        <onclick condition="[Container.Content(mixed) + !String.IsEmpty(Skin.String(Skin.ForcedView.mixed))]">Skin.Reset(Skin.ForcedView.mixed)</onclick>
        <onclick condition="[Container.Content(images) + !String.IsEmpty(Skin.String(Skin.ForcedView.images))]">Skin.Reset(Skin.ForcedView.images)</onclick>
        <onclick condition="[Container.Content(games) + !String.IsEmpty(Skin.String(Skin.ForcedView.games))]">Skin.Reset(Skin.ForcedView.games)</onclick>
        <onclick condition="[Container.Content(unknown) + !String.IsEmpty(Skin.String(Skin.ForcedView.unknown))]">Skin.Reset(Skin.ForcedView.unknown)</onclick>
        <onclick condition="[Container.Content(videos) + !String.IsEmpty(Skin.String(Skin.ForcedView.videos))]">Skin.Reset(Skin.ForcedView.videos)</onclick>
    </include>	
	<include name="widgetsinicio">
		<animation effect="slide" end="315,0" condition="![Control.HasFocus(9160) + Container(9160).Position(5)] + Skin.HasSetting(media-overlay) + [Player.HasVideo | [Player.HasAudio + String.IsEmpty(Window(videos).Property(PlayingBackgroundMedia))]]">Conditional</animation>
		<control type="group">
			<!-- Dummy button for mouse control -->
			<include content="ShelfDummy">
				<param name="dummyid" value="9165"/>
				<param name="focusid" value="9160"/>
			</include>
			<!-- Markers for control area items -->
			<include content="page-offscreen-horizontal">
				<param name="indicator1left" value="0"/>
				<param name="indicator1top" value="270"/>
				<param name="indicator2left" value="1872"/>
				<param name="indicator2top" value="270"/>
				<param name="indicatorsize" value="48"/>
				<param name="indicatorcontainer" value="9160"/>
			</include>
			<control type="list" id="9160">
				<left>15</left>
				<top>55</top>
				<width>1890</width>
				<height>499</height>
				<onleft>9050</onleft>
				<onright>9050</onright>
				<onup>80001</onup>
				<ondown>90001</ondown>
				<scrolltime tween="quadratic" easing="out">300</scrolltime>
				<orientation>horizontal</orientation>
				<itemlayout width="315">
					<control type="image">
						<left>38</left>
						<top>70</top>
						<width>240</width>
						<height>351</height>
						<aspectratio scalediffuse="false">stretch</aspectratio>
						<texture diffuse="mask-rect.png" fallback="DefaultVideo.png" background="true">$VAR[IconPoster]</texture>
					</control>
				</itemlayout>
				<focusedlayout width="315">
					<control type="image">
						<left>38</left>
						<top>70</top>
						<width>240</width>
						<height>351</height>
						<aspectratio scalediffuse="false">stretch</aspectratio>
						<texture fallback="DefaultVideo.png" diffuse="mask-rect.png" background="true">$VAR[IconPoster]</texture>
						<animation effect="zoom" start="100" end="104" center="auto" time="200" tween="back" easing="out" reversible="false">focus</animation>
					</control>
				</focusedlayout>
				<content target="video" limit="50">$INFO[Container(9000).ListItem.Label]</content>
			</control>
		</control>
	</include>
	<include name="backgroundfanart">
		<control type="group">
			<control type="image">
				<include>fullscreenimage</include>
				<texture background="false">$VAR[BackgndFanart]</texture>
				<aspectratio>stretch</aspectratio>
				<fadetime>400</fadetime>
				<visible>!Container().Scrolling + ![Skin.HasSetting(background-playingmedia) + Player.HasVideo]</visible>
			</control>
			<control type="group">
				<visible>Skin.HasSetting(background-playingmedia) + [[$EXP[isVerticalHome] + Window.IsVisible(home)] | !Window.IsVisible(home)]</visible>
				<control type="videowindow">
					<include>fullscreenimage</include>
					<visible>Player.HasVideo</visible>
				</control>
				<control type="visualisation">
					<include>fullscreenimage</include>
					<animation effect="fade" time="200">VisibleChange</animation>
					<visible>Player.HasAudio + String.IsEmpty(Window(videos).Property(PlayingBackgroundMedia))</visible>
				</control>
				<control type="image"><!-- Use mask background to fade video or visualisation -->
					<include>fullscreenimage</include>
					<texture>background-mask.png</texture>
					<colordiffuse>40FFFFFF</colordiffuse>
					<aspectratio>stretch</aspectratio>
				</control>
			</control>
		</control>
	</include>	
	<include name="backgroundsimple">
		<control type="group">
			<control type="image">
				<include>fullscreenimage</include>
				<texture>colours/black.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<include>fullscreenimage</include>
				<texture background="false">$VAR[BackgndSimpleImage]</texture>
				<aspectratio>stretch</aspectratio>
				<fadetime>400</fadetime>
				<visible>!Container().Scrolling + ![Skin.HasSetting(background-playingmedia) + Player.HasVideo]</visible>
			</control>
			<control type="group">
				<visible>Skin.HasSetting(background-playingmedia) + [[$EXP[isVerticalHome] + Window.IsVisible(home)] | !Window.IsVisible(home)]</visible>
				<control type="videowindow">
					<include>fullscreenimage</include>
					<visible>Player.HasVideo</visible>
				</control>
				<control type="visualisation">
					<include>fullscreenimage</include>
					<animation effect="fade" time="200">VisibleChange</animation>
					<visible>Player.HasAudio + String.IsEmpty(Window(videos).Property(PlayingBackgroundMedia))</visible>
				</control>
				<control type="image"><!-- Use mask background to fade video or visualisation -->
					<include>fullscreenimage</include>
					<texture>background-mask.png</texture>
					<colordiffuse>40FFFFFF</colordiffuse>
					<aspectratio>stretch</aspectratio>
				</control>
			</control>
		</control>
	</include>
    <include name="Animation_Fullscreen_Media">
        <animation effect="fade" start="0" end="100" time="300">WindowOpen</animation>
        <animation effect="fade" end="0" start="100" time="300">WindowClose</animation>
        <animation effect="fade" start="0" end="100" time="300">VisibleChange</animation>
    </include>
	
	<include name="ShelfWeather">
		<animation effect="slide" end="315,0" condition="Skin.HasSetting(media-overlay) + [Player.HasVideo | [Player.HasAudio + String.IsEmpty(Window(videos).Property(PlayingBackgroundMedia))]]">Conditional</animation>
		<control type="group">
			<control type="group">
				<left>60</left>
				<top>0</top>
				<control type="label">
					<left>30</left>
					<top>100</top>
					<height>69</height>
					<width>750</width>
					<label>$INFO[Window(weather).Property(Location)]</label>
					<font>ctouch20</font>
				</control>
			</control>
			<!-- Dummy button for mouse control -->
			<include content="ShelfDummy">
				<param name="dummyid" value="9415"/>
				<param name="focusid" value="9410"/>
			</include>
			<control type="list" id="9410">
				<onup>80001</onup>
				<ondown>90001</ondown>			
				<left>15</left>
				<top>160</top>
				<width>1890</width>
				<height>405</height>
				<orientation>horizontal</orientation>
				<itemlayout width="378">
					<control type="image"><!-- background masks -->
						<left>14</left>
						<top>0</top>
						<width>350</width>
						<height>330</height>
						<aligny>top</aligny>
						<texture diffuse="mask-squ.png" colordiffuse="LowBgnVisibity">mask-rectbkgrnd.png</texture>
						<aspectratio scalediffuse="false">stretch</aspectratio>
					</control>
					<control type="label">
						<left>14</left>
						<top>8</top>
						<height>48</height>
						<width>350</width>
						<label>$INFO[ListItem.Property(day)]</label>
						<font>ctouch22</font>
						<align>center</align>
					</control>
					<control type="multiimage">
						<left>117</left>
						<top>56</top>
						<width>144</width>
						<height>144</height>
						<imagepath>$INFO[Listitem.Icon]</imagepath>
						<aspectratio>keep</aspectratio>
						<timeperimage>100</timeperimage>
						<randomize>false</randomize>
						<fadetime>1</fadetime>
					</control>
					<control type="label">
						<left>14</left>
						<top>194</top>
						<height>57</height>
						<width>350</width>
						<shadowcolor>shadow-text</shadowcolor>
						<label>$INFO[Listitem.Label]</label>
						<align>center</align>
					</control>
					<control type="label">
						<left>14</left>
						<top>245</top>
						<height>63</height>
						<width>350</width>
						<label>$INFO[Listitem.Label2]</label>
						<align>center</align>
						<wrapmultiline>true</wrapmultiline>
						<font>ctouch16</font>
					</control>
				</itemlayout>
				<focusedlayout width="378">
					<control type="image"><!-- background masks -->
						<left>14</left>
						<top>0</top>
						<width>350</width>
						<height>330</height>
						<aligny>top</aligny>
						<texture diffuse="mask-squ.png" colordiffuse="LowBgnVisibity">mask-rectbkgrnd.png</texture>
						<aspectratio scalediffuse="false">stretch</aspectratio>
					</control>
					<control type="label">
						<left>14</left>
						<top>8</top>
						<height>48</height>
						<width>350</width>
						<label>$INFO[ListItem.Property(day)]</label>
						<font>ctouch22</font>
						<align>center</align>
					</control>
					<control type="multiimage">
						<left>117</left>
						<top>56</top>
						<width>144</width>
						<height>144</height>
						<imagepath>$INFO[Listitem.Icon]</imagepath>
						<aspectratio>keep</aspectratio>
						<timeperimage>100</timeperimage>
						<randomize>false</randomize>
						<fadetime>1</fadetime>
					</control>
					<control type="label">
						<left>14</left>
						<top>194</top>
						<height>57</height>
						<width>350</width>
						<shadowcolor>shadow-text</shadowcolor>
						<label>$INFO[Listitem.Label]</label>
						<align>center</align>
					</control>
					<control type="label">
						<left>14</left>
						<top>245</top>
						<height>63</height>
						<width>350</width>
						<label>$INFO[Listitem.Label2]</label>
						<align>center</align>
						<wrapmultiline>true</wrapmultiline>
						<font>ctouch16</font>
					</control>
				</focusedlayout>
				<content>
					<item>
						<property name="day">Ahora $INFO[Window(weather).Property(Current.Temperature)]ºC</property>
						<label>[COLOR red]$INFO[Window(weather).Property(Day0.HighTemp)]ºC[/COLOR] • [COLOR FF7070FF]$INFO[Window(weather).Property(Day0.LowTemp)]ºC[/COLOR]</label>
						<label2>$INFO[Weather.Conditions]</label2>
						<icon>$VAR[WeatherIconCurrent]</icon>	
					</item>
					<item>
						<property name="day">$INFO[Window(weather).Property(Day1.Title)]</property>
						<label>[COLOR red]$INFO[Window(weather).Property(Day1.HighTemp)]ºC[/COLOR] • [COLOR FF7070FF]$INFO[Window(weather).Property(Day1.LowTemp)]ºC[/COLOR]</label>
						<label2>$INFO[Window(weather).Property(Day1.Outlook)]</label2>
						<icon>$VAR[WeatherIconDay1]</icon>	
					</item>
					<item>
						<property name="day">$INFO[Window(weather).Property(Day2.Title)]</property>
						<label>[COLOR red]$INFO[Window(weather).Property(Day2.HighTemp)]ºC[/COLOR] • [COLOR FF7070FF]$INFO[Window(weather).Property(Day2.LowTemp)]ºC[/COLOR]</label>
						<label2>$INFO[Window(weather).Property(Day2.Outlook)]</label2>
						<icon>$VAR[WeatherIconDay2]</icon>	
					</item>
					<item>
						<property name="day">$INFO[Window(weather).Property(Day3.Title)]</property>
						<label>[COLOR red]$INFO[Window(weather).Property(Day3.HighTemp)]ºC[/COLOR] • [COLOR FF7070FF]$INFO[Window(weather).Property(Day3.LowTemp)]ºC[/COLOR]</label>
						<label2>$INFO[Window(weather).Property(Day3.Outlook)]</label2>
						<icon>$VAR[WeatherIconDay3]</icon>
					</item>
					<item>
						<property name="day">$INFO[Window(weather).Property(Day4.Title)]</property>
						<label>[COLOR red]$INFO[Window(weather).Property(Day4.HighTemp)]ºC[/COLOR] • [COLOR FF7070FF]$INFO[Window(weather).Property(Day4.LowTemp)]ºC[/COLOR]</label>
						<label2>$INFO[Window(weather).Property(Day4.Outlook)]</label2>
						<icon>$VAR[WeatherIconDay4]</icon>	
					</item>
				</content>
			</control>
		</control>
	</include>	

	<!-- Video Lyrics includes, "borrowed" from skin.aeon.nox.5 -->
	<!-- Thanks to BigNoid -->	
	<include name="Lyrics1">
		<param name="col11" default="black"/>
		<param name="col12" default="black"/>
		<param name="col13" default="black"/>
		<definition>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,1) | String.EndsWith(Container(110).Currentitem,16) | String.EndsWith(Container(110).Currentitem,31) | String.EndsWith(Container(110).Currentitem,46) | String.EndsWith(Container(110).Currentitem,61) | String.EndsWith(Container(110).Currentitem,76) | String.EndsWith(Container(110).Currentitem,91) | String.EndsWith(Container(110).Currentitem,06)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" start="-200,0" end="0,0" tween="back" easing="out" time="300"/>
					<effect type="zoom" start="25" end="100" tween="back" easing="out" time="500"/>
				</animation>
				<width>auto</width>
				<height>100</height>
				<label>$INFO[Container(110).ListItem.Property(part1)]</label>
				<font>lyr1</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$PARAM[col11]</textcolor>
			</control>
			<control type="label">
				<animation type="Visible" reversible="false">
					<effect type="slide" start="-200,0" end="0,0" tween="back" easing="out" time="600"/>
					<effect type="zoom" start="25" end="100" tween="back" easing="out" time="800"/>
				</animation>
				<visible>String.IsEqual(Container(110).Currentitem,1) | String.EndsWith(Container(110).Currentitem,16) | String.EndsWith(Container(110).Currentitem,31) | String.EndsWith(Container(110).Currentitem,46) | String.EndsWith(Container(110).Currentitem,61) | String.EndsWith(Container(110).Currentitem,76) | String.EndsWith(Container(110).Currentitem,91) | String.EndsWith(Container(110).Currentitem,06)</visible>
				<width>auto</width>
				<height>100</height>
				<label>$INFO[Container(110).ListItem.Property(part2)]</label>
				<font>lyr1</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$PARAM[col12]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,1) | String.EndsWith(Container(110).Currentitem,16) | String.EndsWith(Container(110).Currentitem,31) | String.EndsWith(Container(110).Currentitem,46) | String.EndsWith(Container(110).Currentitem,61) | String.EndsWith(Container(110).Currentitem,76) | String.EndsWith(Container(110).Currentitem,91) | String.EndsWith(Container(110).Currentitem,06)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" start="-200,0" end="0,0" tween="back" easing="out" time="900"/>
					<effect type="zoom" start="25" end="100" tween="back" easing="out" time="1100"/>
				</animation>
				<width>auto</width>
				<height>100</height>
				<label>$INFO[Container(110).ListItem.Property(part3)]</label>
				<font>lyr1</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$PARAM[col13]</textcolor>
			</control>
		</definition>
	</include>
	<include name="Lyrics1b">
		<param name="col14" default="black"/>
		<param name="1b_left" default="510"/>
		<param name="1b_top" default="224"/>
		<definition>
			<control type="group">
				<left>$PARAM[1b_left]</left>
				<top>$PARAM[1b_top]</top>
				<visible>String.IsEqual(Container(110).Currentitem,1) | String.EndsWith(Container(110).Currentitem,16) | String.EndsWith(Container(110).Currentitem,31) | String.EndsWith(Container(110).Currentitem,46) | String.EndsWith(Container(110).Currentitem,61) | String.EndsWith(Container(110).Currentitem,76) | String.EndsWith(Container(110).Currentitem,91) | String.EndsWith(Container(110).Currentitem,06)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" delay="300" start="-200,0" end="0,0" tween="back" easing="out" time="900"/>
					<effect type="zoom" center="450,370" delay="300" start="25" end="100" tween="sine" easing="out" time="900"/>
				</animation>
				<control type="textbox">
					<left>0</left>
					<top>80</top>
					<width>900</width>
					<height>600</height>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr1b</font>
					<shadowcolor>black</shadowcolor>
					<align>center</align>
					<aligny>top</aligny>
					<textcolor>$PARAM[col14]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics2">
		<param name="col21" default="black"/>
		<param name="col22" default="black"/>
		<param name="col23" default="black"/>
		<param name="col24" default="black"/>
		<param name="2_left" default="0"/>
		<param name="2_top" default="250"/>
		<definition>
			<control type="group">
				<top>$PARAM[2_top]</top>
				<left>$PARAM[2_left]</left>
				<control type="grouplist">
					<left>0</left>
					<top>-95</top>
					<width>1920</width>
					<height>125</height>
					<itemgap>25</itemgap>
					<scrolltime>0</scrolltime>
					<orientation>horizontal</orientation>
					<visible>true</visible>
					<align>center</align>
					<control type="label">
						<visible>String.IsEqual(Container(110).Currentitem,2) | String.EndsWith(Container(110).Currentitem,17) | String.EndsWith(Container(110).Currentitem,32) | String.EndsWith(Container(110).Currentitem,47) | String.EndsWith(Container(110).Currentitem,62) | String.EndsWith(Container(110).Currentitem,77) | String.EndsWith(Container(110).Currentitem,92) | String.EndsWith(Container(110).Currentitem,07)</visible>
						<animation type="Visible" reversible="false">
							<effect type="zoom" center="auto" start="0" end="100" tween="sine" easing="out" time="700"/>
						</animation>
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part1)]</label>
						<font>lyr2</font>
						<shadowcolor>black</shadowcolor>
						<align>center</align>
						<aligny>center</aligny>
						<textcolor>$PARAM[col21]</textcolor>
					</control>
					<control type="label">
						<visible>String.IsEqual(Container(110).Currentitem,2) | String.EndsWith(Container(110).Currentitem,17) | String.EndsWith(Container(110).Currentitem,32) | String.EndsWith(Container(110).Currentitem,47) | String.EndsWith(Container(110).Currentitem,62) | String.EndsWith(Container(110).Currentitem,77) | String.EndsWith(Container(110).Currentitem,92) | String.EndsWith(Container(110).Currentitem,07)</visible>
						<animation type="Visible" reversible="false">
							<effect type="zoom" center="auto" start="400" end="100" tween="sine" easing="out" time="700"/>
						</animation>
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part2)]</label>
						<font>lyr2</font>
						<align>center</align>
						<aligny>center</aligny>
						<textcolor>$PARAM[col22]</textcolor>
					</control>
				</control>
				<control type="grouplist">
					<left>0</left>
					<top>20</top>
					<width>1920</width>
					<height>600</height>
					<itemgap>30</itemgap>
					<scrolltime>0</scrolltime>
					<orientation>horizontal</orientation>
					<visible>true</visible>
					<align>center</align>
					<control type="label">
						<visible>String.IsEqual(Container(110).Currentitem,2) | String.EndsWith(Container(110).Currentitem,17) | String.EndsWith(Container(110).Currentitem,32) | String.EndsWith(Container(110).Currentitem,47) | String.EndsWith(Container(110).Currentitem,62) | String.EndsWith(Container(110).Currentitem,77) | String.EndsWith(Container(110).Currentitem,92) | String.EndsWith(Container(110).Currentitem,07)</visible>
						<animation type="Visible" reversible="false">
							<effect type="zoom" center="auto" start="400" end="100" tween="sine" easing="out" time="700"/>
						</animation>
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part3)]</label>
						<font>lyr2</font>
						<shadowcolor>black</shadowcolor>
						<align>right</align>
						<aligny>top</aligny>
						<textcolor>$PARAM[col23]</textcolor>
					</control>
					<control type="label">
						<width max="700">auto</width>
						<height>600</height>
						<wrapmultiline>true</wrapmultiline>
						<visible>String.IsEqual(Container(110).Currentitem,2) | String.EndsWith(Container(110).Currentitem,17) | String.EndsWith(Container(110).Currentitem,32) | String.EndsWith(Container(110).Currentitem,47) | String.EndsWith(Container(110).Currentitem,62) | String.EndsWith(Container(110).Currentitem,77) | String.EndsWith(Container(110).Currentitem,92) | String.EndsWith(Container(110).Currentitem,07)</visible>
						<animation effect="slide" end="0,10" condition="true">Conditional</animation>
						<animation type="Visible" reversible="false">
							<effect type="zoom" center="480,200" start="0" end="100" tween="sine" easing="out" time="700"/>
						</animation>
						<label>$INFO[Container(110).ListItem.Property(part4)]</label>
						<font>lyr2b</font>
						<shadowcolor>black</shadowcolor>
						<aligny>top</aligny>
						<textcolor>$PARAM[col24]</textcolor>
					</control>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics3">
		<param name="col31" default="black"/>
		<param name="col32" default="black"/>
		<param name="col33" default="black"/>
		<definition>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,3) | String.EndsWith(Container(110).Currentitem,18) | String.EndsWith(Container(110).Currentitem,33) | String.EndsWith(Container(110).Currentitem,48) | String.EndsWith(Container(110).Currentitem,63) | String.EndsWith(Container(110).Currentitem,78) | String.EndsWith(Container(110).Currentitem,93) | String.EndsWith(Container(110).Currentitem,08)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" start="100,-300" end="50,0" time="250" tween="back" easing="out"/>
					<effect type="rotate" delay="900" center="auto" start="15" end="-10" time="200" tween="sine" easing="out"/>
					<effect type="rotate" delay="1100" center="auto" end="10" time="200" tween="back" easing="out"/>
					<effect type="slide" delay="900" end="-50,0" time="300" tween="back" easing="out"/>
				</animation>
				<width>auto</width>
				<height>115</height>
				<label>$INFO[Container(110).ListItem.Property(part1)]</label>
				<font>lyr3</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$PARAM[col31]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,3) | String.EndsWith(Container(110).Currentitem,18) | String.EndsWith(Container(110).Currentitem,33) | String.EndsWith(Container(110).Currentitem,48) | String.EndsWith(Container(110).Currentitem,63) | String.EndsWith(Container(110).Currentitem,78) | String.EndsWith(Container(110).Currentitem,93) | String.EndsWith(Container(110).Currentitem,08)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" start="0,-300" end="0,0" time="500" tween="back" easing="out"/>
					<effect type="rotate" delay="900" center="auto" start="-8" end="11" time="200" tween="sine" easing="out"/>
					<effect type="rotate" delay="1100" center="auto" end="-11" time="250" tween="back" easing="out"/>
				</animation>
				<width>auto</width>
				<height>115</height>
				<label>$INFO[Container(110).ListItem.Property(part2)]</label>
				<font>lyr3</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$PARAM[col32]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,3) | String.EndsWith(Container(110).Currentitem,18) | String.EndsWith(Container(110).Currentitem,33) | String.EndsWith(Container(110).Currentitem,48) | String.EndsWith(Container(110).Currentitem,63) | String.EndsWith(Container(110).Currentitem,78) | String.EndsWith(Container(110).Currentitem,93) | String.EndsWith(Container(110).Currentitem,08)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" start="-100,-300" end="-50,0" time="650" tween="back" easing="out"/>
					<effect type="rotate" delay="900" center="auto" start="22" end="-12" time="200" tween="sine" easing="out"/>
					<effect type="rotate" delay="1100" center="auto" end="12" time="300" tween="back" easing="out"/>
					<effect type="slide" delay="900" end="50,0" time="350" tween="back" easing="out"/>
				</animation>
				<width>auto</width>
				<height>115</height>
				<label>$INFO[Container(110).ListItem.Property(part3)]</label>
				<font>lyr3</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$PARAM[col33]</textcolor>
			</control>
		</definition>
	</include>
	<include name="Lyrics3b">
		<param name="col34" default="black"/>
		<param name="3b_left" default="510"/>
		<param name="3b_top" default="230"/>
		<definition>
			<control type="group">
				<left>$PARAM[3b_left]</left>
				<top>$PARAM[3b_top]</top>
				<visible>String.IsEqual(Container(110).Currentitem,3) | String.EndsWith(Container(110).Currentitem,18) | String.EndsWith(Container(110).Currentitem,33) | String.EndsWith(Container(110).Currentitem,48) | String.EndsWith(Container(110).Currentitem,63) | String.EndsWith(Container(110).Currentitem,78) | String.EndsWith(Container(110).Currentitem,93) | String.EndsWith(Container(110).Currentitem,08)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" delay="700" start="0,250" end="0,0" time="350" tween="back"/>
					<effect type="rotate" delay="700" center="auto" start="4" end="0" time="600" tween="bounce" easing="out"/>
				</animation>
				<control type="textbox">
					<left>0</left>
					<top>74</top>
					<width>900</width>
					<height>600</height>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr3b</font>
					<shadowcolor>black</shadowcolor>
					<align>center</align>
					<aligny>top</aligny>
					<textcolor>$PARAM[col34]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics4">
		<param name="col41" default="black"/>
		<param name="col42" default="black"/>
		<param name="col43" default="black"/>
		<param name="col44" default="black"/>
		<param name="4_left" default="110"/>
		<param name="4_top" default="30"/>
		<definition>
			<control type="group">
				<top>$PARAM[4_top]</top>
				<left>$PARAM[4_left]</left>
				<animation effect="rotate" center="auto" start="5" end="5" condition="true">Conditional</animation>
				<control type="label">
					<visible>String.IsEqual(Container(110).Currentitem,4) | String.EndsWith(Container(110).Currentitem,19) | String.EndsWith(Container(110).Currentitem,34) | String.EndsWith(Container(110).Currentitem,49) | String.EndsWith(Container(110).Currentitem,64) | String.EndsWith(Container(110).Currentitem,79) | String.EndsWith(Container(110).Currentitem,94) | String.EndsWith(Container(110).Currentitem,09)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" end="0,-115" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="300" end="0,-160" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="600" end="-280,0" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="1150" end="0,-160" time="250" tween="back" easing="out"/>
					</animation>
					<left>-30</left>
					<top>520</top>
					<width>1135</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part1)]</label>
					<font>lyr4</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col41]</textcolor>
				</control>
				<control type="label">
					<left>-30</left>
					<visible>String.IsEqual(Container(110).Currentitem,4) | String.EndsWith(Container(110).Currentitem,19) | String.EndsWith(Container(110).Currentitem,34) | String.EndsWith(Container(110).Currentitem,49) | String.EndsWith(Container(110).Currentitem,64) | String.EndsWith(Container(110).Currentitem,79) | String.EndsWith(Container(110).Currentitem,94) | String.EndsWith(Container(110).Currentitem,09)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="300" end="0,-160" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="600" end="-280,0" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="1150" end="0,-160" time="300" tween="back" easing="out"/>
					</animation>
					<top>520</top>
					<width>1135</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part2)]</label>
					<font>lyr4</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col42]</textcolor>
				</control>
				<control type="label">
					<visible>String.IsEqual(Container(110).Currentitem,4) | String.EndsWith(Container(110).Currentitem,19) | String.EndsWith(Container(110).Currentitem,34) | String.EndsWith(Container(110).Currentitem,49) | String.EndsWith(Container(110).Currentitem,64) | String.EndsWith(Container(110).Currentitem,79) | String.EndsWith(Container(110).Currentitem,94) | String.EndsWith(Container(110).Currentitem,09)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="600" end="0,-160" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="1150" end="0,-160" time="350" tween="back" easing="out"/>
					</animation>
					<left>830</left>
					<top>520</top>
					<width>1135</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part3)]</label>
					<font>lyr4</font>
					<shadowcolor>black</shadowcolor>
					<aligny>center</aligny>
					<textcolor>$PARAM[col43]</textcolor>
				</control>
				<control type="textbox">
					<left>860</left>
					<top>478</top>
					<width>700</width>
					<height>600</height>
					<visible>String.IsEqual(Container(110).Currentitem,4) | String.EndsWith(Container(110).Currentitem,19) | String.EndsWith(Container(110).Currentitem,34) | String.EndsWith(Container(110).Currentitem,49) | String.EndsWith(Container(110).Currentitem,64) | String.EndsWith(Container(110).Currentitem,79) | String.EndsWith(Container(110).Currentitem,94) | String.EndsWith(Container(110).Currentitem,09)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="1100" end="0,-160" time="350" tween="back" easing="out"/>
					</animation>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr4b</font>
					<shadowcolor>black</shadowcolor>
					<align>left</align>
					<aligny>top</aligny>
					<textcolor>$PARAM[col44]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics5">
		<param name="col51" default="black"/>
		<param name="col52" default="black"/>
		<param name="col53" default="black"/>
		<param name="col54" default="black"/>
		<definition>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,5) | String.EndsWith(Container(110).Currentitem,20) | String.EndsWith(Container(110).Currentitem,35) | String.EndsWith(Container(110).Currentitem,50) | String.EndsWith(Container(110).Currentitem,65) | String.EndsWith(Container(110).Currentitem,80) | String.EndsWith(Container(110).Currentitem,95)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" end="-1950,0" time="500" tween="sine" easing="out"/>
				</animation>
				<width>auto</width>
				<height>350</height>
				<label>$INFO[Container(110).ListItem.Property(part1)]</label>
				<font>lyr5</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col51]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,5) | String.EndsWith(Container(110).Currentitem,20) | String.EndsWith(Container(110).Currentitem,35) | String.EndsWith(Container(110).Currentitem,50) | String.EndsWith(Container(110).Currentitem,65) | String.EndsWith(Container(110).Currentitem,80) | String.EndsWith(Container(110).Currentitem,95)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" end="-150,70"/>
					<effect type="slide" delay="100" end="-2000,0" time="500" tween="sine" easing="out"/>
					<effect type="slide" delay="650" end="200,0" time="200" tween="sine" easing="out"/>
				</animation>
				<width>auto</width>
				<height>350</height>
				<label>$INFO[Container(110).ListItem.Property(part2)]</label>
				<font>lyr5</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col52]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,5) | String.EndsWith(Container(110).Currentitem,20) | String.EndsWith(Container(110).Currentitem,35) | String.EndsWith(Container(110).Currentitem,50) | String.EndsWith(Container(110).Currentitem,65) | String.EndsWith(Container(110).Currentitem,80) | String.EndsWith(Container(110).Currentitem,95)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" end="-200,140"/>
					<effect type="slide" delay="150" end="-1950,0" time="500" tween="sine" easing="out"/>
					<effect type="slide" delay="700" end="200,0" time="250" tween="sine" easing="out"/>
				</animation>
				<width>auto</width>
				<height>350</height>
				<label>$INFO[Container(110).ListItem.Property(part3)]</label>
				<font>lyr5</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col53]</textcolor>
			</control>
			<control type="label">
				<wrapmultiline>true</wrapmultiline>
				<visible>String.IsEqual(Container(110).Currentitem,5) | String.EndsWith(Container(110).Currentitem,20) | String.EndsWith(Container(110).Currentitem,35) | String.EndsWith(Container(110).Currentitem,50) | String.EndsWith(Container(110).Currentitem,65) | String.EndsWith(Container(110).Currentitem,80) | String.EndsWith(Container(110).Currentitem,95)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" end="-250,196"/>
					<effect type="slide" delay="250" end="-2100,0" time="500" tween="sine" easing="out"/>
					<effect type="slide" delay="700" end="400,0" time="300" tween="sine" easing="out"/>
				</animation>
				<width min="100" max="700">auto</width>
				<height>350</height>
				<label>$INFO[Container(110).ListItem.Property(part4)]</label>
				<font>lyr5b</font>
				<shadowcolor>black</shadowcolor>
				<aligny>top</aligny>
				<textcolor>$PARAM[col54]</textcolor>
			</control>
		</definition>
	</include>
	<include name="Lyrics6">
		<param name="col61" default="black"/>
		<param name="col62" default="black"/>
		<param name="col63" default="black"/>
		<definition>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,6) | String.EndsWith(Container(110).Currentitem,21) | String.EndsWith(Container(110).Currentitem,36) | String.EndsWith(Container(110).Currentitem,51) | String.EndsWith(Container(110).Currentitem,66) | String.EndsWith(Container(110).Currentitem,81) | String.EndsWith(Container(110).Currentitem,96)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" end="0,400" time="1000" tween="bounce" easing="out"/>
					<effect type="rotate" start="440" center="auto" end="360" time="1000" tween="cubic" easing="out"/>
				</animation>
				<width>auto</width>
				<height>100</height>
				<label>$INFO[Container(110).ListItem.Property(part1)]</label>
				<font>lyr6</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$PARAM[col61]</textcolor>
			</control>
			<control type="label">
				<animation type="Visible" reversible="false">
					<effect type="slide" delay="150" end="0,400" time="1000" tween="bounce" easing="out"/>
					<effect type="rotate" delay="150" start="440" center="auto" end="360" time="1000" tween="cubic" easing="out"/>
				</animation>
				<visible>String.IsEqual(Container(110).Currentitem,6) | String.EndsWith(Container(110).Currentitem,21) | String.EndsWith(Container(110).Currentitem,36) | String.EndsWith(Container(110).Currentitem,51) | String.EndsWith(Container(110).Currentitem,66) | String.EndsWith(Container(110).Currentitem,81) | String.EndsWith(Container(110).Currentitem,96)</visible>
				<width>auto</width>
				<height>100</height>
				<label>$INFO[Container(110).ListItem.Property(part2)]</label>
				<font>lyr6</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$PARAM[col62]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,6) | String.EndsWith(Container(110).Currentitem,21) | String.EndsWith(Container(110).Currentitem,36) | String.EndsWith(Container(110).Currentitem,51) | String.EndsWith(Container(110).Currentitem,66) | String.EndsWith(Container(110).Currentitem,81) | String.EndsWith(Container(110).Currentitem,96)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" delay="300" end="0,400" time="1000" tween="bounce" easing="out"/>
					<effect type="rotate" delay="300" start="440" center="auto" end="360" time="1000" tween="cubic" easing="out"/>
				</animation>
				<width>auto</width>
				<height>100</height>
				<label>$INFO[Container(110).ListItem.Property(part3)]</label>
				<font>lyr6</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$PARAM[col63]</textcolor>
			</control>
		</definition>
	</include>
	<include name="Lyrics6b">
		<param name="col64" default="black"/>
		<param name="6b_left" default="510"/>
		<param name="6b_top" default="224"/>
		<definition>
			<control type="group">
				<left>$PARAM[6b_left]</left>
				<top>$PARAM[6b_top]</top>
				<visible>String.IsEqual(Container(110).Currentitem,6) | String.EndsWith(Container(110).Currentitem,21) | String.EndsWith(Container(110).Currentitem,36) | String.EndsWith(Container(110).Currentitem,51) | String.EndsWith(Container(110).Currentitem,66) | String.EndsWith(Container(110).Currentitem,81) | String.EndsWith(Container(110).Currentitem,96)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" delay="225" start="0,200" end="0,0" time="350" tween="back"/>
				</animation>
				<control type="textbox">
					<left>0</left>
					<top>80</top>
					<width>900</width>
					<height>600</height>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr6b</font>
					<shadowcolor>black</shadowcolor>
					<align>center</align>
					<aligny>top</aligny>
					<textcolor>$PARAM[col64]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics7">
		<param name="col71" default="black"/>
		<param name="col72" default="black"/>
		<param name="col73" default="black"/>
		<param name="col74" default="black"/>
		<param name="7_left" default="10"/>
		<param name="7_top" default="0"/>
		<definition>
			<control type="group">
				<top>$PARAM[7_top]</top>
				<left>$PARAM[7_left]</left>
				<control type="label">
					<visible>String.IsEqual(Container(110).Currentitem,7) | String.EndsWith(Container(110).Currentitem,22) | String.EndsWith(Container(110).Currentitem,37) | String.EndsWith(Container(110).Currentitem,52) | String.EndsWith(Container(110).Currentitem,67) | String.EndsWith(Container(110).Currentitem,82) | String.EndsWith(Container(110).Currentitem,97)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" end="0,-115" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="300" end="0,-160" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="600" end="0,-160" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="1150" end="-200,0" time="250" tween="back" easing="out"/>
					</animation>
					<left>50</left>
					<top>520</top>
					<width>1200</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part1)]</label>
					<font>lyr7</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col71]</textcolor>
				</control>
				<control type="label">
					<left>50</left>
					<visible>String.IsEqual(Container(110).Currentitem,7) | String.EndsWith(Container(110).Currentitem,22) | String.EndsWith(Container(110).Currentitem,37) | String.EndsWith(Container(110).Currentitem,52) | String.EndsWith(Container(110).Currentitem,67) | String.EndsWith(Container(110).Currentitem,82) | String.EndsWith(Container(110).Currentitem,97)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="300" end="0,-160" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="600" end="0,-160" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="1150" end="-200,0" time="300" tween="back" easing="out"/>
					</animation>
					<top>520</top>
					<width>1200</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part2)]</label>
					<font>lyr7a</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col72]</textcolor>
				</control>
				<control type="label">
					<visible>String.IsEqual(Container(110).Currentitem,7) | String.EndsWith(Container(110).Currentitem,22) | String.EndsWith(Container(110).Currentitem,37) | String.EndsWith(Container(110).Currentitem,52) | String.EndsWith(Container(110).Currentitem,67) | String.EndsWith(Container(110).Currentitem,82) | String.EndsWith(Container(110).Currentitem,97)</visible>
					<animation type="Visible" reversible="false">
						<effect type="zoom" delay="600" center="960,540" start="0" end="100" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="1150" end="-200,0" time="350" tween="back" easing="out"/>
					</animation>
					<left>50</left>
					<top>350</top>
					<width>1200</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part3)]</label>
					<font>lyr7b</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col73]</textcolor>
				</control>
				<control type="textbox">
					<left>1080</left>
					<top>-15</top>
					<width>525</width>
					<height>600</height>
					<visible>String.IsEqual(Container(110).Currentitem,7) | String.EndsWith(Container(110).Currentitem,22) | String.EndsWith(Container(110).Currentitem,37) | String.EndsWith(Container(110).Currentitem,52) | String.EndsWith(Container(110).Currentitem,67) | String.EndsWith(Container(110).Currentitem,82) | String.EndsWith(Container(110).Currentitem,97)</visible>
					<animation type="Visible" reversible="false">
						<effect type="zoom" delay="1100" center="auto" start="0" end="100" time="350" tween="back" easing="out"/>
						<effect type="rotate" delay="1100" center="auto" start="4" end="0" time="600" tween="bounce" easing="out"/>
					</animation>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr7c</font>
					<shadowcolor>black</shadowcolor>
					<align>left</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col74]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics8">
		<param name="col81" default="black"/>
		<param name="col82" default="black"/>
		<param name="col83" default="black"/>
		<definition>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,8) | String.EndsWith(Container(110).Currentitem,23) | String.EndsWith(Container(110).Currentitem,38) | String.EndsWith(Container(110).Currentitem,53) | String.EndsWith(Container(110).Currentitem,68) | String.EndsWith(Container(110).Currentitem,83) | String.EndsWith(Container(110).Currentitem,98)</visible>
				<animation type="Visible" reversible="false">
					<effect type="rotatey" center="0,0" start="90" end="0" time="450" tween="sine" easing="out"/>
				</animation>
				<width>auto</width>
				<height>120</height>
				<label>$INFO[Container(110).ListItem.Property(part1)]</label>
				<font>lyr8</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col81]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,8) | String.EndsWith(Container(110).Currentitem,23) | String.EndsWith(Container(110).Currentitem,38) | String.EndsWith(Container(110).Currentitem,53) | String.EndsWith(Container(110).Currentitem,68) | String.EndsWith(Container(110).Currentitem,83) | String.EndsWith(Container(110).Currentitem,98)</visible>
				<animation type="Visible" reversible="false">
					<effect type="rotatex" center="0,0" start="90" end="0" time="600" tween="sine" easing="out"/>
				</animation>
				<width>auto</width>
				<height>120</height>
				<label>$INFO[Container(110).ListItem.Property(part2)]</label>
				<font>lyr8</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col82]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,8) | String.EndsWith(Container(110).Currentitem,23) | String.EndsWith(Container(110).Currentitem,38) | String.EndsWith(Container(110).Currentitem,53) | String.EndsWith(Container(110).Currentitem,68) | String.EndsWith(Container(110).Currentitem,83) | String.EndsWith(Container(110).Currentitem,98)</visible>
				<animation type="Visible" reversible="false">
					<effect type="rotate" center="0,0" start="170" end="0" time="750" tween="sine" easing="out"/>
				</animation>
				<width>auto</width>
				<height>120</height>
				<label>$INFO[Container(110).ListItem.Property(part3)]</label>
				<font>lyr8</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col83]</textcolor>
			</control>
		</definition>
	</include>
	<include name="Lyrics8b">
		<param name="col84" default="black"/>
		<param name="8b_left" default="510"/>
		<param name="8b_top" default="270"/>
		<definition>
			<control type="group">
				<left>$PARAM[8b_left]</left>
				<top>$PARAM[8b_top]</top>
				<visible>String.IsEqual(Container(110).Currentitem,8) | String.EndsWith(Container(110).Currentitem,23) | String.EndsWith(Container(110).Currentitem,38) | String.EndsWith(Container(110).Currentitem,53) | String.EndsWith(Container(110).Currentitem,68) | String.EndsWith(Container(110).Currentitem,83) | String.EndsWith(Container(110).Currentitem,98)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" delay="750" start="-800,0" end="0,0" time="400" tween="back" easing="out"/>
					<effect type="rotate" delay="750" center="auto" start="3" end="0" time="575" tween="bounce" easing="out"/>
				</animation>
				<control type="textbox">
					<left>0</left>
					<top>24</top>
					<width>900</width>
					<height>600</height>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr8b</font>
					<shadowcolor>black</shadowcolor>
					<align>center</align>
					<aligny>top</aligny>
					<textcolor>$PARAM[col84]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics9">
		<param name="col91" default="black"/>
		<param name="col92" default="black"/>
		<param name="col93" default="black"/>
		<param name="col94" default="black"/>
		<param name="9_left" default="20"/>
		<param name="9_top" default="-20"/>
		<definition>
			<control type="group">
				<top>$PARAM[9_top]</top>
				<left>$PARAM[9_left]</left>
				<control type="label">
					<visible>String.IsEqual(Container(110).Currentitem,9) | String.EndsWith(Container(110).Currentitem,24) | String.EndsWith(Container(110).Currentitem,39) | String.EndsWith(Container(110).Currentitem,54) | String.EndsWith(Container(110).Currentitem,69) | String.EndsWith(Container(110).Currentitem,84) | String.EndsWith(Container(110).Currentitem,99)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="400" start="0,-400" end="0,0" time="250" tween="back" easing="out"/>
						<effect type="rotate" center="720,270" delay="900" start="35" end="0" time="250" tween="back" easing="out"/>
					</animation>
					<left>0</left>
					<top>395</top>
					<width>940</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part3)]</label>
					<font>lyr9</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col93]</textcolor>
				</control>
				<control type="label">
					<left>0</left>
					<visible>String.IsEqual(Container(110).Currentitem,9) | String.EndsWith(Container(110).Currentitem,24) | String.EndsWith(Container(110).Currentitem,39) | String.EndsWith(Container(110).Currentitem,54) | String.EndsWith(Container(110).Currentitem,69) | String.EndsWith(Container(110).Currentitem,84) | String.EndsWith(Container(110).Currentitem,99)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="150" start="0,-400" end="0,0" time="350" tween="back" easing="out"/>
						<effect type="rotate" center="720,270" delay="900" start="35" end="0" time="300" tween="back" easing="out"/>
					</animation>
					<top>270</top>
					<width>940</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part2)]</label>
					<font>lyr9</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col92]</textcolor>
				</control>
				<control type="label">
					<visible>String.IsEqual(Container(110).Currentitem,9) | String.EndsWith(Container(110).Currentitem,24) | String.EndsWith(Container(110).Currentitem,39) | String.EndsWith(Container(110).Currentitem,54) | String.EndsWith(Container(110).Currentitem,69) | String.EndsWith(Container(110).Currentitem,84) | String.EndsWith(Container(110).Currentitem,99)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" start="0,-400" end="0,0" time="250" tween="back" easing="out"/>
						<effect type="rotate" center="720,270" delay="900" start="35" end="0" time="350" tween="back" easing="out"/>
					</animation>
					<left>0</left>
					<top>145</top>
					<width>940</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part1)]</label>
					<font>lyr9</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col91]</textcolor>
				</control>
				<control type="textbox">
					<left>960</left>
					<top>30</top>
					<width>600</width>
					<height>600</height>
					<visible>String.IsEqual(Container(110).Currentitem,9) | String.EndsWith(Container(110).Currentitem,24) | String.EndsWith(Container(110).Currentitem,39) | String.EndsWith(Container(110).Currentitem,54) | String.EndsWith(Container(110).Currentitem,69) | String.EndsWith(Container(110).Currentitem,84) | String.EndsWith(Container(110).Currentitem,99)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="700" start="600,0" end="0,0" time="350" tween="back"/>
						<effect type="rotate" delay="700" center="auto" start="4" end="0" time="600" tween="bounce" easing="out"/>
					</animation>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr9b</font>
					<shadowcolor>black</shadowcolor>
					<align>left</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col94]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics10">
		<param name="col101" default="black"/>
		<param name="col102" default="black"/>
		<param name="col103" default="black"/>
		<param name="col104" default="black"/>
		<param name="10_left" default="0"/>
		<param name="10_top" default="150"/>
		<definition>
			<control type="group">
				<top>$PARAM[10_top]</top>
				<left>$PARAM[10_left]</left>
				<control type="label">
					<visible>String.EndsWith(Container(110).Currentitem,10) | String.EndsWith(Container(110).Currentitem,25) | String.EndsWith(Container(110).Currentitem,40) | String.EndsWith(Container(110).Currentitem,55) | String.EndsWith(Container(110).Currentitem,70) | String.EndsWith(Container(110).Currentitem,85) | String.EndsWith(Container(110).Currentitem,00)</visible>
					<animation type="Visible" reversible="false">
						<effect type="zoom" center="auto" start="400" end="100" tween="back" easing="out" time="350"/>
						<effect type="slide" delay="800" start="0,0" end="0,-200" time="350" tween="back" easing="out"/>
					</animation>
					<left>0</left>
					<top>154</top>
					<width>1920</width>
					<height>115</height>
					<label>$INFO[Container(110).ListItem.Property(part1)]</label>
					<font>lyr10</font>
					<shadowcolor>black</shadowcolor>
					<align>center</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col101]</textcolor>
				</control>
				<control type="grouplist">
					<left>0</left>
					<top>260</top>
					<width>1920</width>
					<height>125</height>
					<itemgap>35</itemgap>
					<scrolltime>0</scrolltime>
					<orientation>horizontal</orientation>
					<visible>true</visible>
					<align>center</align>
					<control type="label">
						<visible>String.EndsWith(Container(110).Currentitem,10) | String.EndsWith(Container(110).Currentitem,25) | String.EndsWith(Container(110).Currentitem,40) | String.EndsWith(Container(110).Currentitem,55) | String.EndsWith(Container(110).Currentitem,70) | String.EndsWith(Container(110).Currentitem,85) | String.EndsWith(Container(110).Currentitem,00)</visible>
						<animation type="Visible" reversible="false">
							<effect type="zoom" center="auto" start="400" end="100" tween="back" easing="out" time="550"/>
							<effect type="slide" delay="800" start="0,0" end="0,-200" time="400" tween="back" easing="out"/>
						</animation>
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part2)]</label>
						<font>lyr10</font>
						<shadowcolor>black</shadowcolor>
						<align>center</align>
						<aligny>center</aligny>
						<textcolor>$PARAM[col102]</textcolor>
					</control>
					<control type="label">
						<visible>String.EndsWith(Container(110).Currentitem,10) | String.EndsWith(Container(110).Currentitem,25) | String.EndsWith(Container(110).Currentitem,40) | String.EndsWith(Container(110).Currentitem,55) | String.EndsWith(Container(110).Currentitem,70) | String.EndsWith(Container(110).Currentitem,85) | String.EndsWith(Container(110).Currentitem,00)</visible>
						<animation type="Visible" reversible="false">
							<effect type="zoom" center="auto" start="400" end="100" tween="back" easing="out" time="750"/>
							<effect type="slide" delay="800" start="0,0" end="0,-200" time="450" tween="back" easing="out"/>
						</animation>
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part3)]</label>
						<font>lyr10</font>
						<shadowcolor>black</shadowcolor>
						<align>center</align>
						<aligny>center</aligny>
						<textcolor>$PARAM[col103]</textcolor>
					</control>
				</control>
				<control type="textbox">
					<left>610</left>
					<top>178</top>
					<width>700</width>
					<height>600</height>
					<visible>String.EndsWith(Container(110).Currentitem,10) | String.EndsWith(Container(110).Currentitem,25) | String.EndsWith(Container(110).Currentitem,40) | String.EndsWith(Container(110).Currentitem,55) | String.EndsWith(Container(110).Currentitem,70) | String.EndsWith(Container(110).Currentitem,85) | String.EndsWith(Container(110).Currentitem,00)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="1150" start="400,0" end="0,0" time="200" tween="sine" easing="out"/>
						<effect type="rotate" delay="1150" center="auto" start="4" end="0" time="600" tween="bounce" easing="out"/>
					</animation>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr10b</font>
					<shadowcolor>black</shadowcolor>
					<align>center</align>
					<aligny>top</aligny>
					<textcolor>$PARAM[col104]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics11">
		<param name="col111" default="black"/>
		<param name="col112" default="black"/>
		<param name="col113" default="black"/>
		<param name="col114" default="black"/>
		<param name="11_left" default="0"/>
		<param name="11_top" default="250"/>
		<definition>
			<control type="group">
				<top>$PARAM[11_top]</top>
				<left>$PARAM[11_left]</left>
				<control type="grouplist">
					<animation type="Visible" reversible="false">
						<effect type="slide" start="0,-200" end="0,0" time="200"/>
					</animation>
					<visible>String.EndsWith(Container(110).Currentitem,11) | String.EndsWith(Container(110).Currentitem,26) | String.EndsWith(Container(110).Currentitem,41) | String.EndsWith(Container(110).Currentitem,56) | String.EndsWith(Container(110).Currentitem,71) | String.EndsWith(Container(110).Currentitem,86) | String.EndsWith(Container(110).Currentitem,01)</visible>
					<left>0</left>
					<top>-95</top>
					<width>1920</width>
					<height>125</height>
					<itemgap>25</itemgap>
					<scrolltime>0</scrolltime>
					<orientation>horizontal</orientation>
					<visible>true</visible>
					<align>center</align>
					<control type="label">
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part1)]</label>
						<font>lyr11b</font>
						<shadowcolor>black</shadowcolor>
						<align>center</align>
						<aligny>center</aligny>
						<textcolor>$PARAM[col112]</textcolor>
					</control>
					<control type="label">
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part2)]</label>
						<font>lyr11</font>
						<align>center</align>
						<aligny>center</aligny>
						<textcolor>00fFFFFF</textcolor>
					</control>
				</control>
				<control type="grouplist">
					<visible>String.EndsWith(Container(110).Currentitem,11) | String.EndsWith(Container(110).Currentitem,26) | String.EndsWith(Container(110).Currentitem,41) | String.EndsWith(Container(110).Currentitem,56) | String.EndsWith(Container(110).Currentitem,71) | String.EndsWith(Container(110).Currentitem,86) | String.EndsWith(Container(110).Currentitem,01)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="250" start="400,0" end="0,0" time="200"/>
					</animation>
					<left>0</left>
					<top>-95</top>
					<width>1920</width>
					<height>125</height>
					<itemgap>25</itemgap>
					<scrolltime>0</scrolltime>
					<orientation>horizontal</orientation>
					<visible>true</visible>
					<align>center</align>
					<control type="label">
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part1)]</label>
						<font>lyr11b</font>
						<align>center</align>
						<aligny>center</aligny>
						<textcolor>00fFFFFF</textcolor>
					</control>
					<control type="label">
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part2)]</label>
						<font>lyr11</font>
						<shadowcolor>black</shadowcolor>
						<align>center</align>
						<aligny>center</aligny>
						<textcolor>$PARAM[col113]</textcolor>
					</control>
				</control>
				<control type="grouplist">
					<visible>String.EndsWith(Container(110).Currentitem,11) | String.EndsWith(Container(110).Currentitem,26) | String.EndsWith(Container(110).Currentitem,41) | String.EndsWith(Container(110).Currentitem,56) | String.EndsWith(Container(110).Currentitem,71) | String.EndsWith(Container(110).Currentitem,86) | String.EndsWith(Container(110).Currentitem,01)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="500" start="-400,0" end="0,0" time="200"/>
					</animation>
					<left>0</left>
					<top>15</top>
					<width>1920</width>
					<height>600</height>
					<itemgap>40</itemgap>
					<scrolltime>0</scrolltime>
					<orientation>horizontal</orientation>
					<visible>true</visible>
					<align>center</align>
					<control type="label">
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part3)]</label>
						<font>lyr11</font>
						<shadowcolor>black</shadowcolor>
						<align>right</align>
						<aligny>top</aligny>
						<textcolor>$PARAM[col111]</textcolor>
					</control>
					<control type="label">
						<animation effect="slide" end="0,10" condition="true">Conditional</animation>
						<width max="700">auto</width>
						<height>600</height>
						<wrapmultiline>true</wrapmultiline>
						<label>$INFO[Container(110).ListItem.Property(part4)]</label>
						<font>lyr11b</font>
						<aligny>top</aligny>
						<textcolor>00ffffff</textcolor>
					</control>
				</control>
				<control type="grouplist">
					<visible>String.EndsWith(Container(110).Currentitem,11) | String.EndsWith(Container(110).Currentitem,26) | String.EndsWith(Container(110).Currentitem,41) | String.EndsWith(Container(110).Currentitem,56) | String.EndsWith(Container(110).Currentitem,71) | String.EndsWith(Container(110).Currentitem,86) | String.EndsWith(Container(110).Currentitem,01)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="750" start="0,200" end="0,0" time="200"/>
					</animation>
					<left>0</left>
					<top>30</top>
					<width>1920</width>
					<height>600</height>
					<itemgap>40</itemgap>
					<scrolltime>0</scrolltime>
					<orientation>horizontal</orientation>
					<visible>true</visible>
					<align>center</align>
					<control type="label">
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part3)]</label>
						<font>lyr11</font>
						<align>right</align>
						<aligny>top</aligny>
						<textcolor>00ffffff</textcolor>
					</control>
					<control type="label">
						<animation effect="slide" end="0,10" condition="true">Conditional</animation>
						<width max="700">auto</width>
						<height>600</height>
						<wrapmultiline>true</wrapmultiline>
						<label>$INFO[Container(110).ListItem.Property(part4)]</label>
						<font>lyr11b</font>
						<shadowcolor>black</shadowcolor>
						<aligny>top</aligny>
						<textcolor>$PARAM[col114]</textcolor>
					</control>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics12">
		<param name="col121" default="black"/>
		<param name="12_left" default="10"/>
		<param name="12_top" default="0"/>
		<definition>
			<control type="group">
				<top>$PARAM[12_top]</top>
				<left>$PARAM[12_left]</left>
				<control type="label">
					<visible>String.EndsWith(Container(110).Currentitem,12) | String.EndsWith(Container(110).Currentitem,27) | String.EndsWith(Container(110).Currentitem,42) | String.EndsWith(Container(110).Currentitem,57) | String.EndsWith(Container(110).Currentitem,72) | String.EndsWith(Container(110).Currentitem,87) | String.EndsWith(Container(110).Currentitem,02)</visible>
					<animation type="Visible" reversible="false">
						<effect type="zoom" center="auto" start="0" end="100" time="200"/>
					</animation>
					<left>40</left>
					<top>5</top>
					<width>1820</width>
					<height>400</height>
					<label>$INFO[Container(110).ListItem.Property(part1)]</label>
					<font>lyr12</font>
					<shadowcolor>black</shadowcolor>
					<scroll>true</scroll>
					<scrollspeed>100</scrollspeed>
					<scrollsuffix/>
					<align>center</align>
					<aligny>top</aligny>
					<textcolor>$PARAM[col121]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics12b">
		<param name="col122" default="black"/>
		<param name="col123" default="black"/>
		<param name="12b_left" default="10"/>
		<param name="12b_top" default="180"/>
		<definition>
			<control type="grouplist">
				<top>$PARAM[12b_top]</top>
				<left>$PARAM[12b_left]</left>
				<width>1900</width>
				<height>350</height>
				<itemgap>45</itemgap>
				<scrolltime>0</scrolltime>
				<orientation>horizontal</orientation>
				<visible>true</visible>
				<align>center</align>
				<control type="label">
					<visible>String.EndsWith(Container(110).Currentitem,12) | String.EndsWith(Container(110).Currentitem,27) | String.EndsWith(Container(110).Currentitem,42) | String.EndsWith(Container(110).Currentitem,57) | String.EndsWith(Container(110).Currentitem,72) | String.EndsWith(Container(110).Currentitem,87) | String.EndsWith(Container(110).Currentitem,02)</visible>
					<width>auto</width>
					<height>350</height>
					<label>$INFO[Container(110).ListItem.Property(part2)]</label>
					<font>lyr12b</font>
					<align>center</align>
					<aligny>top</aligny>
					<textcolor>00fFFFFF</textcolor>
				</control>
				<control type="label">
					<visible>String.EndsWith(Container(110).Currentitem,12) | String.EndsWith(Container(110).Currentitem,27) | String.EndsWith(Container(110).Currentitem,42) | String.EndsWith(Container(110).Currentitem,57) | String.EndsWith(Container(110).Currentitem,72) | String.EndsWith(Container(110).Currentitem,87) | String.EndsWith(Container(110).Currentitem,02)</visible>
					<animation type="Visible" reversible="false">
						<effect type="zoom" delay="500" center="auto" start="0" end="100" time="200"/>
					</animation>
					<width>auto</width>
					<height>350</height>
					<label>$INFO[Container(110).ListItem.Property(part3)]</label>
					<font>lyr12c</font>
					<shadowcolor>black</shadowcolor>
					<align>center</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col123]</textcolor>
				</control>
			</control>
			<control type="grouplist">
				<top>$PARAM[12b_top]</top>
				<left>$PARAM[12b_left]</left>
				<width>1900</width>
				<height>350</height>
				<itemgap>45</itemgap>
				<scrolltime>0</scrolltime>
				<orientation>horizontal</orientation>
				<visible>true</visible>
				<align>center</align>
				<control type="label">
					<visible>String.EndsWith(Container(110).Currentitem,12) | String.EndsWith(Container(110).Currentitem,27) | String.EndsWith(Container(110).Currentitem,42) | String.EndsWith(Container(110).Currentitem,57) | String.EndsWith(Container(110).Currentitem,72) | String.EndsWith(Container(110).Currentitem,87) | String.EndsWith(Container(110).Currentitem,02)</visible>
					<animation type="Visible" reversible="false">
						<effect type="zoom" delay="250" center="auto" start="0" end="100" time="200"/>
					</animation>
					<width>auto</width>
					<height>350</height>
					<label>$INFO[Container(110).ListItem.Property(part2)]</label>
					<font>lyr12b</font>
					<shadowcolor>black</shadowcolor>
					<align>center</align>
					<aligny>top</aligny>
					<textcolor>$PARAM[col122]</textcolor>
				</control>
				<control type="label">
					<visible>String.EndsWith(Container(110).Currentitem,12) | String.EndsWith(Container(110).Currentitem,27) | String.EndsWith(Container(110).Currentitem,42) | String.EndsWith(Container(110).Currentitem,57) | String.EndsWith(Container(110).Currentitem,72) | String.EndsWith(Container(110).Currentitem,87) | String.EndsWith(Container(110).Currentitem,02)</visible>
					<width>auto</width>
					<height>350</height>
					<label>$INFO[Container(110).ListItem.Property(part3)]</label>
					<font>lyr12c</font>
					<align>center</align>
					<aligny>center</aligny>
					<textcolor>00fFFFFF</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics12c">
		<param name="col124" default="black"/>
		<param name="12c_left" default="10"/>
		<param name="12c_top" default="0"/>
		<definition>
			<control type="group">
				<top>$PARAM[12c_top]</top>
				<left>$PARAM[12c_left]</left>
				<control type="textbox">
					<left>600</left>
					<top>390</top>
					<width>700</width>
					<height>600</height>
					<visible>String.EndsWith(Container(110).Currentitem,12) | String.EndsWith(Container(110).Currentitem,27) | String.EndsWith(Container(110).Currentitem,42) | String.EndsWith(Container(110).Currentitem,57) | String.EndsWith(Container(110).Currentitem,72) | String.EndsWith(Container(110).Currentitem,87) | String.EndsWith(Container(110).Currentitem,02)</visible>
					<animation type="Visible" reversible="false">
						<effect type="zoom" delay="800" center="960,400" start="0" end="100" time="200"/>
					</animation>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr12d</font>
					<shadowcolor>black</shadowcolor>
					<align>center</align>
					<aligny>top</aligny>
					<textcolor>$PARAM[col124]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics13">
		<param name="col131" default="black"/>
		<param name="col132" default="black"/>
		<param name="col133" default="black"/>
		<definition>
			<control type="label">
				<visible>String.EndsWith(Container(110).Currentitem,13) | String.EndsWith(Container(110).Currentitem,28) | String.EndsWith(Container(110).Currentitem,43) | String.EndsWith(Container(110).Currentitem,58) | String.EndsWith(Container(110).Currentitem,73) | String.EndsWith(Container(110).Currentitem,88) | String.EndsWith(Container(110).Currentitem,03)</visible>
				<animation type="Visible" reversible="false">
					<effect type="zoom" center="auto" start="25" end="100" time="300"/>
					<effect type="rotate" center="auto" start="360" end="0" time="300" tween="sine" easing="out"/>
				</animation>
				<width>auto</width>
				<height>120</height>
				<label>$INFO[Container(110).ListItem.Property(part1)]</label>
				<font>lyr13</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col131]</textcolor>
			</control>
			<control type="label">
				<visible>String.EndsWith(Container(110).Currentitem,13) | String.EndsWith(Container(110).Currentitem,28) | String.EndsWith(Container(110).Currentitem,43) | String.EndsWith(Container(110).Currentitem,58) | String.EndsWith(Container(110).Currentitem,73) | String.EndsWith(Container(110).Currentitem,88) | String.EndsWith(Container(110).Currentitem,03)</visible>
				<animation type="Visible" reversible="false">
					<effect type="zoom" center="auto" start="25" end="100" time="500"/>
					<effect type="rotate" center="auto" start="450" end="0" time="500" tween="sine" easing="out"/>
				</animation>
				<width>auto</width>
				<height>120</height>
				<label>$INFO[Container(110).ListItem.Property(part2)]</label>
				<font>lyr13</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col132]</textcolor>
			</control>
			<control type="label">
				<visible>String.EndsWith(Container(110).Currentitem,13) | String.EndsWith(Container(110).Currentitem,28) | String.EndsWith(Container(110).Currentitem,43) | String.EndsWith(Container(110).Currentitem,58) | String.EndsWith(Container(110).Currentitem,73) | String.EndsWith(Container(110).Currentitem,88) | String.EndsWith(Container(110).Currentitem,03)</visible>
				<animation type="Visible" reversible="false">
					<effect type="zoom" center="auto" start="25" end="100" time="600"/>
					<effect type="rotate" center="auto" start="540" end="0" time="700" tween="sine" easing="out"/>
				</animation>
				<width>auto</width>
				<height>120</height>
				<label>$INFO[Container(110).ListItem.Property(part3)]</label>
				<font>lyr13</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col133]</textcolor>
			</control>
		</definition>
	</include>
	<include name="Lyrics13b">
		<param name="col134" default="black"/>
		<param name="13b_left" default="510"/>
		<param name="13b_top" default="220"/>
		<definition>
			<control type="group">
				<left>$PARAM[13b_left]</left>
				<top>$PARAM[13b_top]</top>
				<visible>String.EndsWith(Container(110).Currentitem,13) | String.EndsWith(Container(110).Currentitem,28) | String.EndsWith(Container(110).Currentitem,43) | String.EndsWith(Container(110).Currentitem,58) | String.EndsWith(Container(110).Currentitem,73) | String.EndsWith(Container(110).Currentitem,88) | String.EndsWith(Container(110).Currentitem,03)</visible>
				<animation type="Visible" reversible="false">
					<effect type="zoom" center="450,370" delay="700" start="25" end="100" tween="sine" easing="out" time="300"/>
				</animation>
				<control type="textbox">
					<left>0</left>
					<top>82</top>
					<width>900</width>
					<height>600</height>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr13b</font>
					<shadowcolor>black</shadowcolor>
					<align>center</align>
					<aligny>top</aligny>
					<textcolor>$PARAM[col134]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics14">
		<param name="col141" default="00ffffff"/>
		<param name="col142" default="00ffffff"/>
		<param name="col143" default="00ffffff"/>
		<definition>
			<control type="label">
				<animation effect="rotate" center="auto" start="4" end="4" condition="true">Conditional</animation>
				<visible>String.EndsWith(Container(110).Currentitem,14) | String.EndsWith(Container(110).Currentitem,29) | String.EndsWith(Container(110).Currentitem,44) | String.EndsWith(Container(110).Currentitem,59) | String.EndsWith(Container(110).Currentitem,74) | String.EndsWith(Container(110).Currentitem,89) | String.EndsWith(Container(110).Currentitem,04)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" end="0,-400"/>
					<effect type="slide" delay="100" end="0,400" time="10"/>
					<effect type="fade" delay="100" start="0" end="100" time="250"/>
					<effect type="zoom" delay="100" start="0" end="100" time="250" tween="back" easing="out"/>
				</animation>
				<width>auto</width>
				<height>350</height>
				<label>$INFO[Container(110).ListItem.Property(part1)]</label>
				<font>lyr14</font>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col141]</textcolor>
			</control>
			<control type="label">
				<animation effect="rotate" center="auto" start="-4" end="-4" condition="true">Conditional</animation>
				<visible>String.EndsWith(Container(110).Currentitem,14) | String.EndsWith(Container(110).Currentitem,29) | String.EndsWith(Container(110).Currentitem,44) | String.EndsWith(Container(110).Currentitem,59) | String.EndsWith(Container(110).Currentitem,74) | String.EndsWith(Container(110).Currentitem,89) | String.EndsWith(Container(110).Currentitem,04)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" end="-10,-400"/>
					<effect type="slide" delay="450" end="0,390" time="10"/>
					<effect type="fade" delay="450" start="0" end="100" time="250"/>
					<effect type="zoom" delay="450" start="0" end="100" time="250" tween="back" easing="out"/>
				</animation>
				<width>auto</width>
				<height>350</height>
				<label>$INFO[Container(110).ListItem.Property(part2)]</label>
				<font>lyr14</font>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col142]</textcolor>
			</control>
			<control type="label">
				<animation effect="rotate" center="auto" start="4" end="4" condition="true">Conditional</animation>
				<visible>String.EndsWith(Container(110).Currentitem,14) | String.EndsWith(Container(110).Currentitem,29) | String.EndsWith(Container(110).Currentitem,44) | String.EndsWith(Container(110).Currentitem,59) | String.EndsWith(Container(110).Currentitem,74) | String.EndsWith(Container(110).Currentitem,89) | String.EndsWith(Container(110).Currentitem,04)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" end="0,-400"/>
					<effect type="slide" delay="800" end="0,410" time="10"/>
					<effect type="fade" delay="800" start="0" end="100" time="250"/>
					<effect type="zoom" delay="800" start="0" end="100" time="250" tween="back" easing="out"/>
				</animation>
				<width>auto</width>
				<height>350</height>
				<label>$INFO[Container(110).ListItem.Property(part3)]</label>
				<font>lyr14</font>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col143]</textcolor>
			</control>
		</definition>
	</include>
	<include name="Lyrics14b">
		<param name="col144" default="00ffffff"/>
		<param name="14b_left" default="610"/>
		<param name="14b_top" default="340"/>
		<definition>
			<control type="textbox">
				<left>$PARAM[14b_left]</left>
				<top>$PARAM[14b_top]</top>
				<visible>String.EndsWith(Container(110).Currentitem,14) | String.EndsWith(Container(110).Currentitem,29) | String.EndsWith(Container(110).Currentitem,44) | String.EndsWith(Container(110).Currentitem,59) | String.EndsWith(Container(110).Currentitem,74) | String.EndsWith(Container(110).Currentitem,89) | String.EndsWith(Container(110).Currentitem,04)</visible>
				<animation type="Visible" reversible="false">
					<effect type="fade" delay="1200" start="0" end="100" time="250"/>
					<effect type="zoom" center="960,500" delay="1200" start="0" end="105" time="250" tween="back" easing="out"/>
				</animation>
				<width>700</width>
				<height>600</height>
				<label>$INFO[Container(110).ListItem.Property(part4)]</label>
				<font>lyr14b</font>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col144]</textcolor>
			</control>
		</definition>
	</include>
	<include name="Lyrics15">
		<param name="col151" default="black"/>
		<param name="col152" default="black"/>
		<param name="col153" default="black"/>
		<param name="col154" default="black"/>
		<param name="15_left" default="170"/>
		<param name="15_top" default="0"/>
		<definition>
			<control type="group">
				<top>$PARAM[15_top]</top>
				<left>$PARAM[15_left]</left>
				<control type="label">
					<visible>String.EndsWith(Container(110).Currentitem,15) | String.EndsWith(Container(110).Currentitem,30) | String.EndsWith(Container(110).Currentitem,45) | String.EndsWith(Container(110).Currentitem,60) | String.EndsWith(Container(110).Currentitem,75) | String.EndsWith(Container(110).Currentitem,90) | String.EndsWith(Container(110).Currentitem,05)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" start="1000,0" end="0,0" time="350" tween="back" easing="out"/>
						<effect type="slide" delay="800" start="0,0" end="-200,0" time="350" tween="back" easing="out"/>
					</animation>
					<left>50</left>
					<top>125</top>
					<width>925</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part1)]</label>
					<font>lyr15</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col151]</textcolor>
				</control>
				<control type="label">
					<left>50</left>
					<visible>String.EndsWith(Container(110).Currentitem,15) | String.EndsWith(Container(110).Currentitem,30) | String.EndsWith(Container(110).Currentitem,45) | String.EndsWith(Container(110).Currentitem,60) | String.EndsWith(Container(110).Currentitem,75) | String.EndsWith(Container(110).Currentitem,90) | String.EndsWith(Container(110).Currentitem,05)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="150" start="1000,0" end="0,0" time="350" tween="back" easing="out"/>
						<effect type="slide" delay="800" start="0,0" end="-200,0" time="350" tween="back" easing="out"/>
					</animation>
					<top>250</top>
					<width>925</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part2)]</label>
					<font>lyr15</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col152]</textcolor>
				</control>
				<control type="label">
					<visible>String.EndsWith(Container(110).Currentitem,15) | String.EndsWith(Container(110).Currentitem,30) | String.EndsWith(Container(110).Currentitem,45) | String.EndsWith(Container(110).Currentitem,60) | String.EndsWith(Container(110).Currentitem,75) | String.EndsWith(Container(110).Currentitem,90) | String.EndsWith(Container(110).Currentitem,05)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="300" start="1000,0" end="0,0" time="350" tween="back" easing="out"/>
						<effect type="slide" delay="800" start="0,0" end="-200,0" time="350" tween="back" easing="out"/>
					</animation>
					<left>50</left>
					<top>375</top>
					<width>925</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part3)]</label>
					<font>lyr15</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col153]</textcolor>
				</control>
				<control type="textbox">
					<left>800</left>
					<top>10</top>
					<width>600</width>
					<height>600</height>
					<visible>String.EndsWith(Container(110).Currentitem,15) | String.EndsWith(Container(110).Currentitem,30) | String.EndsWith(Container(110).Currentitem,45) | String.EndsWith(Container(110).Currentitem,60) | String.EndsWith(Container(110).Currentitem,75) | String.EndsWith(Container(110).Currentitem,90) | String.EndsWith(Container(110).Currentitem,05)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="650" start="0,-400" end="0,0" time="1200" tween="bounce" easing="out"/>
					</animation>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr15b</font>
					<shadowcolor>black</shadowcolor>
					<align>left</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col154]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="line1">
		<width>900</width>
		<height>600</height>
		<font>lyrsh16</font>
		<align>center</align>
		<aligny>center</aligny>
	</include>
	<include name="line3">
		<width>900</width>
		<height>600</height>
		<font>lyrsh38</font>
		<align>center</align>
		<aligny>center</aligny>
	</include>
	<include name="line7">
		<width>900</width>
		<height>600</height>
		<font>lyrsh72</font>
		<align>center</align>
		<aligny>center</aligny>
	</include>
	<include name="line9">
		<width>900</width>
		<height>600</height>
		<font>lyrsh94</font>
		<align>center</align>
		<aligny>center</aligny>
	</include>
	<!-- End of Video Lyrics includes -->

	<include name="defaultskinsettings">
		<!-- various default settings  -->
		<onload>Skin.SetBool(SkinHelper.EnablePVRThumbs)</onload>
		<onload>Skin.SetBool(SkinHelper.EnableMusicArt)</onload>
		<onload>Skin.SetString(SkinHelper.RandomFanartDelay,0)</onload>
	</include>
	<!-- Postion and size of fullscreen image -->
	<!-- NB, don't change height to a percentage as it will break fadebackground -->
	<include name="fullscreenimage">
		<left>0</left>
		<top>0</top>
		<width>100%</width>
		<height>1080</height>
	</include>
	<!-- Background shadow -->
	<!-- Don't fade background if on Fullscreen video screen -->
	<include name="maskfadebackground">
		<control type="image">
			<include>fullscreenimage</include>
			<texture colordiffuse="$VAR[BackgndImageVisibity]">background-mask.png</texture>
			<aspectratio>stretch</aspectratio>
			<visible>!Window.IsVisible(fullscreenvideo)</visible>
		</control>
	</include>
	<include name="fadebackground">
		<control type="image">
			<include>fullscreenimage</include>
			<texture colordiffuse="background-mask">background-mask.png</texture>
			<aspectratio>stretch</aspectratio>
			<visible>!Window.IsVisible(fullscreenvideo)</visible>
		</control>
	</include>
	<include name="HiddenObject">
		<left>-3000</left>
		<top>-3000</top>
		<width>1</width>
		<height>1</height>
		<texturefocus />
		<texturenofocus />
		<label></label>
		<font></font>
		<itemlayout/>
		<focusedlayout/>
	</include>
	<include name="fadebackgroundbusy">
		<control type="image">
			<include>fullscreenimage</include>
			<texture>background-mask.png</texture>
			<colordiffuse>mask-background-busy</colordiffuse>
			<aspectratio>stretch</aspectratio>
			<visible>!Window.IsVisible(fullscreenvideo)</visible>
		</control>
	</include>	
	<include name="background-osd">
		<control type="image">
			<texture colordiffuse="ff000000" border="15">gradient_overlay_osd.png</texture>
			<visible>!System.HasAddon(script.cinema.experience) + [$EXP[isMovie] | $EXP[isTvshow] | $EXP[isVideoAddon] | $EXP[isEpisode] | $EXP[isVideo] | $EXP[isSeason] | $EXP[isParentFolder] | $EXP[isRepository]]</visible>						
		</control>
	</include>		
	<include name="vignette">
		<control type="image">
			<texture flipx="true" colordiffuse="ff000000" border="15">gradient_overlay_info.png</texture>
			<visible>!System.HasAddon(script.cinema.experience) + [$EXP[isMovie] | $EXP[isTvshow] | $EXP[isVideoAddon] | $EXP[isEpisode] | $EXP[isVideo] | $EXP[isSeason] | $EXP[isParentFolder] | $EXP[isRepository]]</visible>						
		</control>
	</include>	
	<include name="vignette-views">
		<control type="image">
			<texture colordiffuse="black">overlay_info.png</texture>
			<visible>Control.IsVisible(54) | Control.IsVisible(554)</visible>						
		</control>
	</include>		
	<include name="vignette-menu">
		<control type="image">
				<left>0</left>
				<top>50</top>
				<height>1080</height>
				<width>1920</width>		
			<texture colordiffuse="ff000000" border="15">gradient_overlay_osd.png</texture>
		</control>
	</include>		
	<include name="backgroundhome">
		<control type="image">
			<texture>colours/black.png</texture>
		</control>
	</include>		
	<include name="background">
		<control type="group">
			<visible>!Window.IsVisible(fullscreenvideo)</visible>
			<!-- Don't try to show background if Video screen is showing -->
			<control type="fadelabel" id="300000"><!-- Randomizer for plugin-free multiple fanart -->
				<top>-1000</top> <!-- Don't need to see it, but can't change its visibility. Put it off screen -->
				<width>1</width>
				<height>1</height>
				<info>ListItem.Art(fanart1)</info>
				<info>ListItem.Art(fanart2)</info>
				<info>ListItem.Art(fanart3)</info>
				<info>ListItem.Art(fanart4)</info>
				<info>ListItem.Art(fanart5)</info>
				<info>ListItem.Art(fanart6)</info>
				<info>ListItem.Art(fanart7)</info>
				<info>ListItem.Art(fanart8)</info>
				<info>ListItem.Art(fanart9)</info>
				<!-- tvshow.fanart are filled with the series fanart when navigating season and episode lists -->
				<info>ListItem.Art(tvshow.fanart1)</info>
				<info>ListItem.Art(tvshow.fanart2)</info>
				<info>ListItem.Art(tvshow.fanart3)</info>
				<info>ListItem.Art(tvshow.fanart4)</info>
				<info>ListItem.Art(tvshow.fanart5)</info>
				<info>ListItem.Art(tvshow.fanart6)</info>
				<info>ListItem.Art(tvshow.fanart7)</info>
				<info>ListItem.Art(tvshow.fanart8)</info>
				<info>ListItem.Art(tvshow.fanart9)</info>
				<randomize>true</randomize>
				<pauseatend>6000</pauseatend> <!-- Time to show each image, in milliseconds -->
				<!-- No scrolling so only the pauseatend above (plus a short fade-in) affects length of time each image is shown -->
				<scroll>false</scroll>
				<scrollout>false</scrollout>
				<!-- Resets the timer when navigating to a new item, so each item's first visible fanart will
					show for the full amount of time -->
				<resetonlabelchange>true</resetonlabelchange>
				<visible>!Skin.HasSetting(staticbg)</visible>
			</control>
			<control type="image"><!-- Use Skin default background as a base layer for backdrops -->
				<texture>background.png</texture>
				<aspectratio>scale</aspectratio>
			</control>
			<control type="multiimage">
				<include>fullscreenimage</include>
				<randomize>true</randomize>
				<timeperimage>6000</timeperimage>
				<fadetime>400</fadetime>
				<imagepath background="false">$VAR[BackgndImage]</imagepath>
				<aspectratio>stretch</aspectratio>
				<colordiffuse>70FFFFFF</colordiffuse>
				<animation effect="fade" start="0" end="100" time="200" delay="1300">Visible</animation>
				<visible>!Container().Scrolling + !System.ScreenSaverActive</visible>
			</control>
			<control type="group">
				<visible>Skin.HasSetting(background-playingmedia) + [[Skin.HasSetting(homemenu-vertical) + Window.IsVisible(home)] | !Window.IsVisible(home)]</visible>
				<control type="videowindow">
					<include>fullscreenimage</include>
					<colordiffuse>40FFFFFF</colordiffuse>
					<visible>Player.HasVideo</visible>
				</control>
				<control type="visualisation">
					<include>fullscreenimage</include>
					<colordiffuse>40FFFFFF</colordiffuse>
					<animation effect="fade" time="200">VisibleChange</animation>
					<visible>Player.HasAudio + String.IsEmpty(Window(home).Property(PlayingOST))</visible>
				</control>
			</control>
		</control>
	</include>
	<include name="backgroundsport">
		<control type="group">
			<visible>!Window.IsVisible(fullscreenvideo)</visible>
			<!-- Don't try to show background if Video screen is showing -->
			<control type="fadelabel" id="300000"><!-- Randomizer for plugin-free multiple fanart -->
				<top>-1000</top> <!-- Don't need to see it, but can't change its visibility. Put it off screen -->
				<width>1</width>
				<height>1</height>
				<info>ListItem.Art(fanart1)</info>
				<info>ListItem.Art(fanart2)</info>
				<info>ListItem.Art(fanart3)</info>
				<info>ListItem.Art(fanart4)</info>
				<info>ListItem.Art(fanart5)</info>
				<info>ListItem.Art(fanart6)</info>
				<info>ListItem.Art(fanart7)</info>
				<info>ListItem.Art(fanart8)</info>
				<info>ListItem.Art(fanart9)</info>
				<!-- tvshow.fanart are filled with the series fanart when navigating season and episode lists -->
				<info>ListItem.Art(tvshow.fanart1)</info>
				<info>ListItem.Art(tvshow.fanart2)</info>
				<info>ListItem.Art(tvshow.fanart3)</info>
				<info>ListItem.Art(tvshow.fanart4)</info>
				<info>ListItem.Art(tvshow.fanart5)</info>
				<info>ListItem.Art(tvshow.fanart6)</info>
				<info>ListItem.Art(tvshow.fanart7)</info>
				<info>ListItem.Art(tvshow.fanart8)</info>
				<info>ListItem.Art(tvshow.fanart9)</info>
				<randomize>true</randomize>
				<pauseatend>6000</pauseatend> <!-- Time to show each image, in milliseconds -->
				<!-- No scrolling so only the pauseatend above (plus a short fade-in) affects length of time each image is shown -->
				<scroll>false</scroll>
				<scrollout>false</scrollout>
				<!-- Resets the timer when navigating to a new item, so each item's first visible fanart will
					show for the full amount of time -->
				<resetonlabelchange>true</resetonlabelchange>
				<visible>!Skin.HasSetting(staticbg)</visible>
			</control>
			<control type="image"><!-- Use Skin default background as a base layer for backdrops -->
				<texture>background.png</texture>
				<aspectratio>scale</aspectratio>
			</control>
			<control type="multiimage">
				<include>fullscreenimage</include>
				<randomize>true</randomize>
				<timeperimage>6000</timeperimage>
				<fadetime>400</fadetime>
				<imagepath background="false">$VAR[BackgndImagesport]</imagepath>
				<aspectratio>stretch</aspectratio>
				<colordiffuse>70FFFFFF</colordiffuse>
				<animation effect="fade" start="0" end="100" time="200" delay="1300">Visible</animation>
				<visible>!Container().Scrolling + !System.ScreenSaverActive</visible>
			</control>
			<control type="group">
				<visible>Skin.HasSetting(background-playingmedia) + [[Skin.HasSetting(homemenu-vertical) + Window.IsVisible(home)] | !Window.IsVisible(home)]</visible>
				<control type="videowindow">
					<include>fullscreenimage</include>
					<colordiffuse>40FFFFFF</colordiffuse>
					<visible>Player.HasVideo</visible>
				</control>
				<control type="visualisation">
					<include>fullscreenimage</include>
					<colordiffuse>40FFFFFF</colordiffuse>
					<animation effect="fade" time="200">VisibleChange</animation>
					<visible>Player.HasAudio + String.IsEmpty(Window(home).Property(PlayingOST))</visible>
				</control>
			</control>
		</control>
	</include>
	<include name="player-mediaicon">
		<control type="group" id="1">
			<!-- Player Media Icon -->
			<visible>[$EXP[isFullscreenVideo]] + ![Window.IsActive(musicosd)]</visible>
			<animation effect="fade" time="200">VisibleChange</animation>
			<control type="image" id="1">
				<!-- Movies or Tv Episodes -->
				<left>30</left>
				<top>460</top>
				<width>320</width>
				<height>470</height>
				<texture diffuse="diffuse/bigposter.png">$VAR[PlayerVideoArt]</texture>
				<aspectratio aligny="bottom">keep</aspectratio>
				<visible>[VideoPlayer.Content(movies) | VideoPlayer.Content(episodes)] + ![String.Contains(Player.FolderPath,pvr://) | String.StartsWith(Player.FileNameAndPath,http) | String.StartsWith(Player.FileNameAndPath,htsp) | String.StartsWith(Player.FileNameAndPath,mms) | String.StartsWith(Player.FileNameAndPath,rtmp)]</visible>
			</control>
			<control type="image" id="1">
				<!-- LiveTV playing -->
				<left>20</left>
				<top>600</top>
				<width>320</width>
				<height>320</height>
				<texture fallback="icon-livetv.png">$VAR[PVRPgmIcon]</texture>
				<aspectratio aligny="bottom">keep</aspectratio>
					<visible>String.Contains(Player.FolderPath,pvr://) + ![String.StartsWith(Player.FileNameAndPath,http) | String.StartsWith(Player.FileNameAndPath,htsp) | String.StartsWith(Player.FileNameAndPath,mms) | String.StartsWith(Player.FileNameAndPath,rtmp)]</visible>
			</control>
			<control type="image" id="1">
				<!-- Any video other than Movies and TV Episodes and LiveTV -->
				<left>12</left>
				<top>500</top>
				<width>320</width>
				<height>450</height>
				<texture fallback="DefaultVideo.png">$INFO[Player.Art(thumb)]</texture>
				<aspectratio aligny="bottom">keep</aspectratio>
				<visible>[!VideoPlayer.Content(movies) + !VideoPlayer.Content(episodes) + !String.Contains(Player.FolderPath,pvr://)] | [String.StartsWith(Player.FileNameAndPath,http) | String.StartsWith(Player.FileNameAndPath,htsp) | String.StartsWith(Player.FileNameAndPath,mms) | String.StartsWith(Player.FileNameAndPath,rtmp)] </visible>
			</control>
		</control>
	</include>
	<include name="page-info">
		<control type="group">
			<visible>!System.ScreenSaverActive</visible>
			<animation effect="slide" end="282,0" condition="$EXP[isEnabledTouch]">Conditional</animation>
			<control type="image">
				<!-- RSS Logo -->
				<left>8</left>
				<top>1026</top>
				<width>32</width>
				<height>32</height>
				<aspectratio>keep</aspectratio>
				<texture>rss.png</texture>
			</control>
			<control type="rss">
				<left>60</left>
				<top>1018</top>
				<width>1860</width>
				<height>33</height>
				<font>ctouch20</font>
				<urlset>1</urlset>
				<textcolor>info-text</textcolor>
				<titlecolor>rss-title-text</titlecolor>
				<headlinecolor>rss-headline-text</headlinecolor>
			</control>
		</control>
	</include>
	<include name="fake-overlay">
	<control type="image">
		<visible>Player.HasVideo + !Skin.HasSetting(background-playingmedia) + Skin.HasSetting(homemenu-icon)</visible>
		<!-- Dialog background image -->
		<centerleft>50%</centerleft>
		<top>-5</top>
		<height>140</height>
		<width>700</width>
		<texture colordiffuse="midgrey">button-default.png</texture>
		<aspectratio>scale</aspectratio>
	</control>		
		<control type="group">
			<visible>!Window.IsActive(playercontrols) + Skin.HasSetting(homemenu-icon)</visible>
			<control type="group">
				<!-- Video Stuff -->
				<visible>Player.HasVideo</visible>
				<control type="videowindow">
					<centerleft>38%</centerleft>
					<top>5</top>
					<width>200</width>
					<height>120</height>
				</control>
				<control type="label">
					<!-- Now playing -->
					<centerleft>56%</centerleft>
					<top>10</top>
					<width>430</width>
					<height>30</height>
					<label>[COLOR blue][B]Reproduciendo ahora[/B][/COLOR]</label>
					<font>ctouch18</font>
				</control>
				<control type="group">
					<visible>!Pvr.IsPlayingTv</visible>
					<control type="label">
						<centerleft>56%</centerleft>
						<top>50</top>
						<width>430</width>
						<height>30</height>
						<label>[B]$INFO[VideoPlayer.Title][/B]</label>
						<font>ctouch18</font>
						<include>scrolltext</include>
						<visible>!VideoPlayer.Content(episodes)</visible>
					</control>
					<control type="label">
						<centerleft>56%</centerleft>
						<top>50</top>
						<width>430</width>
						<height>30</height>
						<label>$INFO[VideoPlayer.TVShowTitle]</label>
						<font>ctouch18</font>
						<include>scrolltext</include>
						<visible>VideoPlayer.Content(episodes)</visible>
					</control>
					<control type="label">
						<centerleft>56%</centerleft>
						<top>50</top>
						<width>430</width>
						<height>30</height>
						<label>$INFO[VideoPlayer.Title]</label>
						<font>ctouch18</font>
						<include>scrolltext</include>
						<visible>VideoPlayer.Content(episodes)</visible>
					</control>
				</control>
				<control type="label">
					<centerleft>56%</centerleft>
					<top>80</top>
					<width>430</width>
					<height>30</height>
					<label>$INFO[VideoPlayer.ChannelName]</label>
					<font>ctouch16</font>
					<include>scrolltext</include>
					<visible>Pvr.IsPlayingTv</visible>
				</control>
				<control type="label">
					<centerleft>56%</centerleft>
					<top>50</top>
					<width>430</width>
					<height>30</height>
					<label>$INFO[VideoPlayer.Title]</label>
					<font>ctouch18</font>
					<include>scrolltext</include>
					<visible>Pvr.IsPlayingTv</visible>
				</control>
				<control type="label">
					<!-- Time and duration -->
					<centerleft>56%</centerleft>
					<top>90</top>
					<width>430</width>
					<height>30</height>
					<label>[B]$INFO[Player.Time]$INFO[Player.Duration, / ][/B]</label>
					<font>ctouch18</font>
					<visible>!String.IsEmpty(Player.Time) + !String.IsEmpty(Player.Duration)</visible>
				</control>
				<control type="button">
					<!-- Touch Close button -->
					<centerleft>68%</centerleft>
					<top>100</top>
					<width>48</width>
					<height>48</height>
					<texturefocus>touch-close.png</texturefocus>
					<texturenofocus>touch-close.png</texturenofocus>
					<onclick>PlayerControl(Stop)</onclick>
				</control>				
			</control>
		</control>
	</include>
	<include name="horzhomelistitem">
		<control type="label">
			<left>12</left>
			<top>12</top>
			<width>291</width>
			<height>33</height>
			<font>ctouch22</font>
			<align>center</align>
			<label fallback="20333">$INFO[ListItem.Label]</label>
			<include>scrolltext</include>
			<animation effect="fade" start="100" end="35" condition="!ListItem.Property(isActive) | Control.HasFocus(402)">Conditional</animation>
		</control>
	</include>
	<!-- Dummy button for mouse control -->
	<include name="fullscreendummy">
		<control type="button" id="3550">
			<left>0</left>
			<top>0</top>
			<width>100%</width>
			<height>100%</height>
			<texturefocus>blank.png</texturefocus>
			<texturenofocus>blank.png</texturenofocus>
			
		</control>
	</include>
	<include name="illegal-action">
		<param name="controlid"/>
		<param name="returnid"/>
		<definition>
			<control type="button" id="$PARAM[controlid]">
				<left>-20</left>
				<top>-10</top>
				<width>1</width>
				<height>1</height>
				<onfocus>SetFocus($PARAM[returnid])</onfocus>
				<onfocus>SetFocus($PARAM[returnid])</onfocus>
				<onfocus>ActivateWindow(1157)</onfocus>
			</control>
		</definition>
	</include>
	<include name="Animation_AlarmDelay">
		<animation effect="slide" end="0,0" time="3000" reversible="false">Focus</animation>
	</include>
	<include name="use-alttexture">
		<param name="visiblecondition"/>
		<definition>
			<usealttexture>$PARAM[visiblecondition]</usealttexture>
		</definition>
	</include>
	<include name="listitem-count">
		<param name="left" default="0"/>
		<param name="top" default="0"/>
		<param name="count"/>
		<param name="size" default="100"/>
		<definition>
			<control type="group">
				<visible>Integer.IsGreater($PARAM[count],0)</visible>
				<animation condition="true" effect="zoom" start="100" end="$PARAM[size]" center="auto">Conditional</animation>
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<control type="image">
					<description> Count (less than 10) </description>
					<left>22</left>
					<top>0</top>
					<width>40</width>
					<height>40</height>
					<texture colordiffuse="$VAR[AccentColor]">overlaynumberitems.png</texture>
					<visible>!Integer.IsGreater($PARAM[count],9)</visible>
				</control>
				<control type="image">
					<description> Count (10 - 99) </description>
					<left>10</left>
					<top>0</top>
					<width>64</width>
					<height>40</height>
					<texture colordiffuse="$VAR[AccentColor]" border="16,0,16,0">overlaynumberitems.png</texture>
					<visible>Integer.IsGreater($PARAM[count],9) + !Integer.IsGreater($PARAM[count],99)</visible>
				</control>
				<control type="image">
					<description> Count (100 - 999) </description>
					<left>0</left>
					<top>0</top>
					<width>84</width>
					<height>40</height>
					<texture colordiffuse="$VAR[AccentColor]" border="16,0,16,0">overlaynumberitems.png</texture>
					<visible>Integer.IsGreater($PARAM[count],99) + !Integer.IsGreater($PARAM[count],999)</visible>
				</control>
				<control type="label">
					<shadowcolor/>
					<left>14</left>
					<top>4</top>
					<width>54</width>
					<height>30</height>
					<font>ctouch20</font>
					<label>$INFO[$PARAM[count]]</label>
					<textcolor>white</textcolor>
					<align>center</align>
				</control>
			</control>
		</definition>
	</include>
	<include name="listitem-weather">
		<param name="left" default="0"/>
		<param name="top" default="0"/>
		<param name="size" default="100"/>
		<param name="currently"/>
		<param name="visible"/>
		<definition>
			<control type="group">
				<visible>$PARAM[visible]</visible>
				<animation condition="true" effect="zoom" start="100" end="$PARAM[size]" center="auto">Conditional</animation>
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<control type="image">
					<left>60</left>
					<top>30</top>
					<width>140</width>
					<height>140</height>
					<aspectratio>keep</aspectratio>
					<texture background="true">http://localhost:52307/getvarimage&amp;title=$INFO{Window(weather).Property(Day0.OutlookIcon)}</texture>
				</control>
				<control type="label">
					<left>200</left>
					<top>70</top>
					<width>130</width>
					<height>57</height>
					<font>ctouch38</font>
					<textcolor>white</textcolor>
					<label>$INFO[$PARAM[currently]]</label>
					<align>center</align>
				</control>
			</control>
		</definition>
	</include>
	<include name="listpanelitems">
		<param name="itemcustombase"/>
		<param name="itemthumb"/>
		<param name="itemlabel"/>
		<param name="itemmenuheading"/>
		<param name="itemmenuid"/>
		<param name="itemcondition"/>
		<param name="itemtoggle"/>
		<definition>
			<item>
				<thumb>$PARAM[itemthumb]</thumb>
				<label>$PARAM[itemlabel]</label>
				<property name="isActive">true</property>
				<property name="visibleToggle">$PARAM[itemtoggle]</property>
				<property name="customBase">$PARAM[itemcustombase]</property>
				<property name="menuHeading">$PARAM[itemmenuheading]</property>
				<property name="menuID">$PARAM[itemmenuid]</property>
				<onclick>SetProperty(ListActive,true,settings)</onclick>
				<onclick>SetProperty(ListLabel,$PARAM[itemlabel],settings)</onclick>
				<onclick>SetProperty(ListID,$PARAM[itemmenuid],settings)</onclick>
				<onclick>SetProperty(ListToggle,$PARAM[itemtoggle],settings)</onclick>
				<onclick>SetProperty(ListCustomBase,$PARAM[itemcustombase],settings)</onclick>
				<onclick>SetProperty(CurrentType,$INFO[Skin.String($PARAM[itemcustombase].Type)],settings)</onclick>
				<onclick>SetProperty(CurrentAction,$PARAM[itemcustombase].Path,settings)</onclick>
				<onclick>SetProperty(CurrentLabel,$PARAM[itemcustombase].Label,settings)</onclick>
				<onclick>SetProperty(CurrentIcon,$PARAM[itemcustombase].Icon,settings)</onclick>
				<onclick>ActivateWindow(1153)</onclick>
				<visible>$PARAM[itemcondition]</visible>
			</item>
			<item>
				<thumb>$PARAM[itemthumb]</thumb>
				<label>$PARAM[itemlabel]</label>
				<property name="isActive"/>
				<property name="visibleToggle">$PARAM[itemtoggle]</property>
				<property name="customBase">$PARAM[itemcustombase]</property>
				<property name="menuHeading">$PARAM[itemmenuheading]</property>
				<property name="menuID">$PARAM[itemmenuid]</property>
				<onclick>ClearProperty(ListActive,settings)</onclick>
				<onclick>SetProperty(ListLabel,$PARAM[itemlabel],settings)</onclick>
				<onclick>SetProperty(ListID,$PARAM[itemmenuid],settings)</onclick>
				<onclick>SetProperty(ListToggle,$PARAM[itemtoggle],settings)</onclick>
				<onclick>SetProperty(ListCustomBase,$PARAM[itemcustombase],settings)</onclick>
				<onclick>SetProperty(CurrentType,$INFO[Skin.String($PARAM[itemcustombase].Type)],settings)</onclick>
				<onclick>SetProperty(CurrentAction,$PARAM[itemcustombase].Path,settings)</onclick>
				<onclick>SetProperty(CurrentLabel,$PARAM[itemcustombase].Label,settings)</onclick>
				<onclick>SetProperty(CurrentIcon,$PARAM[itemcustombase].Icon,settings)</onclick>
				<onclick>ActivateWindow(1153)</onclick>
				<visible>!$PARAM[itemcondition]</visible>
			</item>
		</definition>
	</include>
	<include name="page-offscreen-vertical">
		<param name="indicator1left" default="0"/>
		<param name="indicator1top" default="0"/>
		<param name="indicator2left" default="0"/>
		<param name="indicator2top" default="0"/>
		<param name="indicatorsize" default="0"/>
		<param name="indicatorcontainer"/>
		<definition>
			<control type="group">
				<visible>Integer.IsGreater(Container($PARAM[indicatorcontainer]).NumItems,0) + Control.IsVisible($PARAM[indicatorcontainer])</visible>
				<control type="image">
					<left>$PARAM[indicator1left]</left>
					<top>$PARAM[indicator1top]</top>
					<height>$PARAM[indicatorsize]</height>
					<width>$PARAM[indicatorsize]</width>
					<texture>scroll-up.png</texture>
					<visible>Container($PARAM[indicatorcontainer]).HasPrevious</visible>
				</control>
				<control type="image">
					<left>$PARAM[indicator2left]</left>
					<top>$PARAM[indicator2top]</top>
					<height>$PARAM[indicatorsize]</height>
					<width>$PARAM[indicatorsize]</width>
					<texture>scroll-down.png</texture>
					<visible>Container($PARAM[indicatorcontainer]).HasNext</visible>
				</control>
			</control>
		</definition>
	</include>
	
	<include name="page-offscreen-horizontal">
		<param name="indicator1left" default="0"/>
		<param name="indicator1top" default="0"/>
		<param name="indicator2left" default="0"/>
		<param name="indicator2top" default="0"/>
		<param name="indicatorsize" default="0"/>
		<param name="indicatorcontainer"/>
		<definition>
			<control type="group">
				<visible>Integer.IsGreater(Container($PARAM[indicatorcontainer]).NumItems,0) + Control.IsVisible($PARAM[indicatorcontainer])</visible>
				<control type="image">
					<left>$PARAM[indicator1left]</left>
					<top>$PARAM[indicator1top]</top>
					<height>$PARAM[indicatorsize]</height>
					<width>$PARAM[indicatorsize]</width>
					<texture>scroll-left.png</texture>
					<visible>Container($PARAM[indicatorcontainer]).HasPrevious</visible>
				</control>
				<control type="image">
					<left>$PARAM[indicator2left]</left>
					<top>$PARAM[indicator2top]</top>
					<height>$PARAM[indicatorsize]</height>
					<width>$PARAM[indicatorsize]</width>
					<texture>scroll-right.png</texture>
					<visible>Container($PARAM[indicatorcontainer]).HasNext</visible>
				</control>
			</control>
		</definition>
	</include>
	<include name="BusyWidgets">
			<control type="group" id="$PARAM[list_id]599">
				<visible>Container($PARAM[list_id]).IsUpdating + !Integer.IsGreater(Container($PARAM[list_id]).NumItems,0)</visible>
				<control type="label">
					<top>150</top>
					<left>875</left>
					<width>300</width>
					<height>100</height>
					<font>ctouch18</font>
					<textcolor>dimgrey</textcolor>
					<label>[B]Cargando[/B]</label>
					<align>left</align>					
				</control>
			<control type="image">
				<!-- Busy animation -->
					<left>770</left>
					<top>160</top>
					<width>80</width>
					<height>80</height>
					<colordiffuse>dimgrey</colordiffuse>
					<texture>busy_bg.png</texture>
					<aspectratio>keep</aspectratio>
				</control>
				<control type="image">
					<left>770</left>
					<top>160</top>
					<width>80</width>
					<height>80</height>
					<aspectratio aligny="center">keep</aspectratio>
					<colordiffuse>dimgrey</colordiffuse>
					<texture>busy.png</texture>
					<align>center</align>					
					<include>busy-spin</include>
				</control>
			</control>
	</include>	
	<include name="BusyWidgetsSport">
			<control type="group" id="$PARAM[list_id]599">
				<visible>Container($PARAM[list_id]).IsUpdating + !Integer.IsGreater(Container($PARAM[list_id]).NumItems,0)</visible>
				<control type="label">
					<top>350</top>
					<left>375</left>
					<width>300</width>
					<height>100</height>
					<font>ctouch18</font>
					<textcolor>dimgrey</textcolor>
					<label>[B]Cargando[/B]</label>
					<align>left</align>					
				</control>
			<control type="image">
				<!-- Busy animation -->
					<left>270</left>
					<top>360</top>
					<width>80</width>
					<height>80</height>
					<colordiffuse>dimgrey</colordiffuse>
					<texture>busy_bg.png</texture>
					<aspectratio>keep</aspectratio>
				</control>
				<control type="image">
					<left>270</left>
					<top>360</top>
					<width>80</width>
					<height>80</height>
					<aspectratio aligny="center">keep</aspectratio>
					<colordiffuse>dimgrey</colordiffuse>
					<texture>busy.png</texture>
					<align>center</align>					
					<include>busy-spin</include>
				</control>
			</control>
	</include>	
	<include name="WidgetTitle">
		<control type="group" id="$PARAM[list_id]">
			<control type="label">
				<top>5</top>
				<left>150</left>
				<width>500</width>
				<height>20</height>
				<font>ctouch18</font>
				<textcolor>dimgrey</textcolor>
				<label>$PARAM[widget_header]</label>
				<align>left</align>					
			</control>
		</control>
	</include>	
	<include name="BusyWidgetTVSport1">
			<control type="group" id="$PARAM[list_id]599">
				<height>125</height>
				<visible>Container($PARAM[list_id]).IsUpdating + !Integer.IsGreater(Container($PARAM[list_id]).NumItems,0)</visible>
				<visible>$PARAM[visible]</visible>
				<control type="label">
					<top>100</top>
					<left>240</left>
					<width>300</width>
					<height>100</height>
					<font>ctouch18</font>
					<textcolor>dimgrey</textcolor>
					<label>[B]Cargando[/B]</label>
					<align>left</align>					
				</control>
				<control type="image">
					<left>100</left>
					<top>75</top>
					<width>150</width>
					<height>150</height>
					<aspectratio aligny="center">keep</aspectratio>
					<colordiffuse>dimgrey</colordiffuse>
					<texture>busy.png</texture>
					<align>center</align>					
					<animation effect="rotate" center="auto" start="360" end="0" time="3000" loop="true" condition="true">Conditional</animation>
				</control>
			</control>
	</include>	
    <include name="Defs_TMDbHelper_Loader">
        <include content="Object_Hidden_List">
            <param name="id">99950</param>
        </include>
    </include>
	<include name="WidgetList">
		<orientation>horizontal</orientation>
		<preloaditems>7</preloaditems>
		<focusposition>0</focusposition>
		<movement>7</movement>
		<onback>SetFocus($PARAM[list_id],0,absolute)</onback>
		<onunfocus>SetProperty(listposition,$INFO[Container($PARAM[list_id]).Position],home)</onunfocus>				
	</include>	
	<include name="WidgetListSquare">
		<orientation>horizontal</orientation>
		<preloaditems>4</preloaditems>
		<focusposition>1</focusposition>
		<movement>4</movement>
		<onback>SetFocus($PARAM[list_id],0,absolute)</onback>
		<onunfocus>SetProperty(listposition,$INFO[Container($PARAM[list_id]).Position],home)</onunfocus>				
	</include>	
	<include name="WidgetListLandscape">
		<orientation>horizontal</orientation>
		<preloaditems>10</preloaditems>
		<focusposition>0</focusposition>
		<movement>10</movement>		
		<onback>SetFocus($PARAM[list_id],0,absolute)</onback>		
		<onunfocus>SetProperty(listposition,$INFO[Container($PARAM[list_id]).Position],home)</onunfocus>		
	</include>
	<include name="WidgetListSports">
		<orientation>vertical</orientation>
		<preloaditems>5</preloaditems>
		<focusposition>0</focusposition>
		<movement>1</movement>		
		<onback>SetFocus($PARAM[list_id],0,absolute)</onback>		
		<onunfocus>SetProperty(listposition,$INFO[Container($PARAM[list_id]).Position],home)</onunfocus>		
	</include>			
	<include name="WidgetPoster">
		<param name="visible" value="$PARAM[visible]"/> 
		<param name="widget_limit" value="$PARAM[widget_limit]"/>
		<definition>
			<include content="BusyWidgets">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<control type="panel" id="$PARAM[list_id]">
				<height>500</height>
				<include content="WidgetList">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<onfocus>SetProperty(TMDbHelper.WidgetContainer,$PARAM[list_id],home)</onfocus>
				<itemlayout width="311">
					<control type="image">
						<left>0</left>
						<top>0</top>
						<width>275</width>
						<height>406</height>
						<texture background="true">diffuse/bigposter_shadow.png</texture>
						<aspectratio scalediffuse="false">stretch</aspectratio>
						<visible>$EXP[isnotParentFolder]</visible>	
					</control>	
					<control type="image">
						<left>0</left>
						<top>0</top>
						<width>270</width>
						<height>400</height>
						<aspectratio scalediffuse="false" align="center" aligny="center">scale</aspectratio>
						<texture background="true" fallback="DefaultVideo.png" diffuse="diffuse/bigposter.png">$VAR[IconPoster]</texture>
						<bordersize>5</bordersize>										
					</control>
				</itemlayout>
				<focusedlayout width="311">
					<control type="image">
						<left>0</left>
						<top>0</top>
						<width>270</width>
						<height>400</height>
						<texture diffuse="diffuse/bigposter.png" background="true" fallback="DefaultVideo.png">$VAR[IconPoster]</texture>
						<bordertexture colordiffuse="$VAR[AccentColor]">homeiconlite_poster.png</bordertexture>
						<bordersize>5</bordersize>
						<aspectratio scalediffuse="false" align="center" aligny="center">scale</aspectratio>
					</control>
					<control type="button">
						<include>HiddenObject</include>
						<onunfocus condition="!Window.IsActive(DialogVideoInfo.xml) + Window.isVisible(home) + Skin.HasSetting(autotrailer)">CancelAlarm(PlayTrailer,true)</onunfocus>
						<onunfocus condition="Window.isVisible(home) + Skin.HasSetting(autotrailer)">PlayerControl(Stop)</onunfocus>
						<onfocus condition="!Window.isActive(DialogVideoInfo.xml) + Window.isVisible(home) + Skin.HasSetting(autotrailer) + !Player.HasVideo + String.IsEmpty(ListItem.Trailer) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Trailer)">AlarmClock(PlayTrailer,PlayMedia($INFO[Window(Home).Property(TMDbHelper.ListItem.Trailer)],1),00:$VAR[Label_SkinSetting_AutoTrailerTime],silent)</onfocus>
					</control>
				</focusedlayout>				
				<content target="$PARAM[widget_target]" limit="$PARAM[widget_limit]">$PARAM[content_path]</content>
			</control>
		</definition>		
	</include>	
	<include name="WidgetPosterL">
		<param name="visible">True</param>
		<param name="widget_limit">50</param>
		<definition>
			<include content="BusyWidgetTVSport">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<control type="panel" id="$PARAM[list_id]">
				<height>350</height>
				<include content="WidgetList">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<itemlayout width="235">
					<control type="image">
						<left>0</left>
						<top>0</top>
						<width>215</width>
						<height>330</height>
						<aspectratio scalediffuse="false" align="center" aligny="center">scale</aspectratio>
						<texture background="true" fallback="DefaultVideo.png" diffuse="diffuse/bigposter.png">$VAR[IconPoster]</texture>
						<bordersize>6</bordersize>										
					</control>
				</itemlayout>
				<focusedlayout width="235">
					<control type="image">
						<left>0</left>
						<top>0</top>
						<width>215</width>
						<height>330</height>
						<texture diffuse="diffuse/bigposter.png" background="true" fallback="DefaultVideo.png">$VAR[IconPoster]</texture>
						<bordertexture border="6" colordiffuse="$VAR[AccentColor]">homeiconlite.png</bordertexture>
						<bordersize>6</bordersize>
						<aspectratio scalediffuse="false" align="center" aligny="center">scale</aspectratio>
					</control>
				</focusedlayout>				
				<content target="$PARAM[widget_target]" limit="$PARAM[widget_limit]">$PARAM[content_path]</content>
			</control>
		</definition>		
	</include>			
	<include name="WidgetLandscape">
		<param name="visible" value="$PARAM[visible]"/> 
		<param name="widget_limit" value="$PARAM[widget_limit]"/>
		<definition>
			<include content="BusyWidgets">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<control type="panel" id="$PARAM[list_id]">
				<height>500</height>
				<include content="WidgetListLandscape">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<onfocus>SetProperty(TMDbHelper.WidgetContainer,$PARAM[list_id],home)</onfocus>
				<itemlayout width="440" height="215">
					<control type="image">
						<left>0</left>
						<top>0</top>
						<width>385</width>
						<height>198</height>
						<texture background="true">diffuse/landscape_shadow.png</texture>
						<aspectratio scalediffuse="false">stretch</aspectratio>
					</control>	
					<control type="image">
						<left>0</left>
						<top>0</top>
						<width>380</width>
						<height>195</height>
						<aspectratio scalediffuse="false" align="center" aligny="center">scale</aspectratio>
						<align>center</align>
						<texture background="true" fallback="DefaultVideo.png" diffuse="diffuse/landscape.png">$VAR[Landscape]</texture>
						<bordersize>5</bordersize>										
					</control>
				</itemlayout>
				<focusedlayout width="440" height="215">
					<control type="image">
						<left>0</left>
						<top>0</top>
						<width>380</width>
						<height>195</height>
						<align>center</align>						
						<texture diffuse="diffuse/landscape.png" background="true" fallback="DefaultVideo.png">$VAR[Landscape]</texture>
						<bordertexture diffuse="diffuse/landscape.png" colordiffuse="$VAR[AccentColor]">homeiconlite_landscape.png</bordertexture>
						<bordersize>5</bordersize>
						<aspectratio scalediffuse="false" align="center" aligny="center">scale</aspectratio>
					</control>
					<control type="button">
						<include>HiddenObject</include>
						<onunfocus condition="Window.isVisible(home) + Skin.HasSetting(autotrailer)">PlayerControl(Stop)</onunfocus>
						<onunfocus condition="!Window.IsActive(DialogVideoInfo.xml) + Window.isVisible(home) + Skin.HasSetting(autotrailer)">CancelAlarm(PlayTrailer,true)</onunfocus>
						<onfocus condition="!Window.isActive(DialogVideoInfo.xml) + Window.isVisible(home) + Skin.HasSetting(autotrailer) + !Player.HasVideo + String.IsEmpty(ListItem.Trailer) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Trailer)">AlarmClock(PlayTrailer,PlayMedia($INFO[Window(Home).Property(TMDbHelper.ListItem.Trailer)],1),00:$VAR[Label_SkinSetting_AutoTrailerTime],silent)</onfocus>
					</control>
				</focusedlayout>				
				<content target="$PARAM[widget_target]" limit="$PARAM[widget_limit]">$PARAM[content_path]</content>
			</control>
		</definition>		
	</include>	
	<include name="WidgetSports">
		<param name="visible" value="$PARAM[visible]"/> 
		<param name="widget_limit" value="$PARAM[widget_limit]"/>
		<definition>
			<include content="BusyWidgetsSport">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<control type="panel" id="$PARAM[list_id]">
				<orientation>vertical</orientation>
				<height>900</height>
				<include content="WidgetListSports">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<itemlayout width="220" height="232">
					<control type="image">
						<left>0</left>
						<top>0</top>
						<width>200</width>
						<height>200</height>
						<aspectratio scalediffuse="false" align="center" aligny="center">scale</aspectratio>
						<align>center</align>
						<texture background="true" diffuse="diffuse/square.png">$INFO[ListItem.Icon]</texture>
						<bordersize>5</bordersize>										
					</control>
					<control type="label">
						<left>3</left>
						<top>205</top>
						<font>font11</font>
						<width>194</width>
						<height>20</height>
						<align>center</align>
						<label>$INFO[ListItem.Label]</label>
						<visible>Skin.HasSetting(etiquetas-visibles)</visible>
					</control>
				</itemlayout>
				<focusedlayout width="220" height="232">
					<control type="image">
						<left>0</left>
						<top>0</top>
						<width>200</width>
						<height>200</height>
						<texture background="true">diffuse/square_shadow.png</texture>
						<aspectratio scalediffuse="false">stretch</aspectratio>
					</control>	
					<control type="image">
						<left>0</left>
						<top>0</top>
						<width>200</width>
						<height>200</height>
						<align>center</align>						
						<texture diffuse="diffuse/square.png" background="true">$INFO[ListItem.Icon]</texture>
						<bordertexture diffuse="diffuse/square.png" colordiffuse="$VAR[AccentColor]">homeiconlite_square.png</bordertexture>
						<bordersize>5</bordersize>
						<aspectratio scalediffuse="false" align="center" aligny="center">scale</aspectratio>
					</control>
					<control type="label">
						<left>3</left>
						<top>205</top>
						<font>font11</font>
						<width>194</width>
						<height>20</height>
						<align>center</align>
						<label>$INFO[ListItem.Label]</label>
						<include>scrolltext</include>
						<visible>Skin.HasSetting(etiquetas-visibles)</visible>
					</control>
				</focusedlayout>				
				<content target="$PARAM[widget_target]" limit="$PARAM[widget_limit]">$PARAM[content_path]</content>
			</control>
		</definition>		
	</include>	
	<include name="WidgetSportsdiary">
		<param name="visible" value="$PARAM[visible]"/> 
		<param name="widget_limit" value="$PARAM[widget_limit]"/>
		<definition>
			<include content="BusyWidgetsSport">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<control type="panel" id="$PARAM[list_id]">
				<orientation>vertical</orientation>
				<height>900</height>
				<include content="WidgetListSports">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<itemlayout width="925" height="92">
					<control type="label">
						<left>15</left>
						<top>0</top>
						<width>890</width>
						<height>85</height>
						<font>ctouch20</font>
						<label>$INFO[ListItem.Label]</label>
					</control>
				</itemlayout>
				<focusedlayout width="925" height="92">
					<control type="image">
						<!-- Button focus slider -->
						<left>0</left>
						<top>0</top>
						<width>920</width>
						<height>90</height>
						<texture border="9">button-default-focus.png</texture>
						<aspectratio>stretch</aspectratio>
						<bordertexture border="9" diffuse="button-default-focus_back.png" colordiffuse="$VAR[AccentColor]">homeiconlite.png</bordertexture>				
					</control>				
					<control type="label">
						<left>15</left>
						<top>0</top>
						<width>890</width>
						<height>85</height>
						<font>ctouch20</font>
						<label>$INFO[ListItem.Label]</label>
						<include>scrolltext</include>
					</control>
				</focusedlayout>				
				<content target="$PARAM[widget_target]" limit="$PARAM[widget_limit]">$PARAM[content_path]</content>
			</control>
		</definition>		
	</include>	
	<include name="WidgetSquare">
		<param name="visible">True</param>
		<param name="widget_limit">50</param>
		<definition>
			<include content="BusyWidgetTVSport">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<control type="panel" id="$PARAM[list_id]">
				<height>350</height>
				<include content="WidgetListSquare">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<right>50</right>
				<width>570</width>
				<itemlayout height="170" width="265">
					<control type="image">
						<width>250</width>
						<height>150</height>
						<texture>button-menu-background-t.png</texture>
					</control>	
					<control type="image">
						<top>10</top>
						<left>60</left>
						<width>130</width>
						<height>130</height>
						<texture>$INFO[ListItem.Icon]</texture>
					</control>											
				</itemlayout>
				<focusedlayout height="170" width="265">
					<control type="image">
						<width>250</width>
						<height>150</height>
						<texture>button-menu-background-t.png</texture>
					</control>			
					<control type="group">
						<width>250</width>
						<height>150</height>
						<include>bgbox</include>
					</control>		
					<control type="image">
						<top>10</top>
						<left>60</left>
						<width>130</width>
						<height>130</height>
						<texture>$INFO[ListItem.Icon]</texture>
					</control>	
				</focusedlayout>
				<content target="videos" limit="$PARAM[widget_limit]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>		
	<include name="titleitems">
		<control type="group">
		<visible>Control.HasFocus(9000)</visible>						
			<top>300</top>
			<left>0</left>
			<control type="label">
				<!-- Title -->
				<left>60</left>
				<width>1000</width>
				<height>215</height>
				<font>ctouch25w</font>
				<wrapmultiline>true</wrapmultiline>
				<include>scrolltext</include>
				<align>left</align>
				<label>[B]$INFO[ListItem.Label][/B]</label>
			</control>
		</control>
	</include>		
	<include name="PlotandDetailsHome">
			<control type="group">
			<visible>Control.HasFocus(9830) | Control.HasFocus(9831) | Control.HasFocus(9829) | Control.HasFocus(9828) | Control.HasFocus(9827) | Control.HasFocus(9826) | Control.HasFocus(9825) | Control.HasFocus(9824) | Control.HasFocus(9823) | Control.HasFocus(9822) | Control.HasFocus(9821) | Control.HasFocus(9820) | Control.HasFocus(9819) | Control.HasFocus(9818) | Control.HasFocus(9817) | Control.HasFocus(9816) | Control.HasFocus(9815) | Control.HasFocus(9814) | Control.HasFocus(9813) | Control.HasFocus(9812) | Control.HasFocus(9811) | Control.HasFocus(9810) | Control.HasFocus(9802) | Control.HasFocus(9803) | Control.HasFocus(9804) | Control.HasFocus(9805) | Control.HasFocus(9806) | Control.HasFocus(9807) | Control.HasFocus(9808) | Control.HasFocus(9809)</visible>						
				<top>85</top>
				<left>0</left>
				<control type="image">
					<!-- Show logo -->
					<left>62</left>
					<top>0</top>
					<width>860</width>
					<height>160</height>
					<aspectratio>keep</aspectratio>
					<align>center</align>
					<aligny>center</aligny>
					<texture background="true">$VAR[VideoLogo]</texture>
					<visible>Skin.HasSetting(clearlogo_on)</visible>
				</control>
				<control type="label">
					<!-- Title -->
					<left>60</left>
					<top>0</top>
					<width>860</width>
					<height>180</height>
					<font>ctouch29w</font>
					<include>scrolltext</include>
					<wrapmultiline>true</wrapmultiline>
					<align>center</align>
					<label>[B]$INFO[ListItem.Title][/B]</label>
					<visible>String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.ClearLogo)) + String.IsEmpty(ListItem.Art(clearlogo)) + Skin.HasSetting(clearlogo_on)</visible>
				</control>			
				<control type="label">
					<!-- Title -->
					<left>60</left>
					<top>0</top>
					<width>860</width>
					<height>180</height>
					<font>ctouch29w</font>
					<include>scrolltext</include>
					<wrapmultiline>true</wrapmultiline>
					<align>center</align>
					<label>[B]$INFO[ListItem.Title][/B]</label>
					<visible>!Skin.HasSetting(clearlogo_on)</visible>
				</control>			
				<control type="textbox">
					<!-- Plot (Show if no outline available) -->
					<top>260</top>
					<left>62</left>
					<width>860</width>
					<height>142</height>
					<font>ctouch18</font>
					<label>$INFO[ListItem.Plot]</label>
					<align>justify</align>
					<visible>!String.IsEmpty(ListItem.Plot)</visible>
				</control>
				<control type="label">
					<top>160</top>
					<left>62</left>
					<width>860</width>
					<height>40</height>
					<font>ctouch16</font>
					<label>[I]$INFO[Window(home).Property(TMDbHelper.ListItem.Tagline)][/I]</label>
					<textcolor>yellow</textcolor>
					<align>center</align>
				</control>																	
				<control type="image">
					<top>494</top>
					<left>62</left>
					<width>40</width>
					<height>40</height>
					<texture diffuse="diffuse/square.png">$VAR[WidgetIcon]</texture>
					<aspectratio>scale</aspectratio>
				</control>	
				<control type="label">
					<top>500</top>
					<left>110</left>
					<width>600</width>
					<height>40</height>
					<textcolor>midgrey</textcolor>
					<label>$VAR[WidgetTitle]</label>
					<font>ctouch18</font>
					<align>left</align>
					<visible>![Control.HasFocus(9815) | Control.HasFocus(9816) | Control.HasFocus(9817) | Control.HasFocus(9818) | Control.HasFocus(9819) | Control.HasFocus(9820) | Control.HasFocus(9821) | Control.HasFocus(9822) | Control.HasFocus(9823) | Control.HasFocus(9824) | Control.HasFocus(9825) | Control.HasFocus(9826)]</visible> 
				</control>								
				<control type="label">
					<top>494</top>
					<left>62</left>
					<width>600</width>
					<height>40</height>
					<textcolor>midgrey</textcolor>
					<label>$VAR[WidgetTitle]</label>
					<font>ctouch18</font>
					<align>left</align>
					<visible>[Control.HasFocus(9815) | Control.HasFocus(9816) | Control.HasFocus(9817) | Control.HasFocus(9818) | Control.HasFocus(9819) | Control.HasFocus(9820) | Control.HasFocus(9821) | Control.HasFocus(9822) | Control.HasFocus(9823) | Control.HasFocus(9824) | Control.HasFocus(9825) | Control.HasFocus(9826)]</visible> 
				</control>								
			</control>
			<control type="grouplist">
				<left>62</left>
				<top>300</top>
				<width>860</width>
				<align>center</align>
				<itemgap>10</itemgap>
				<orientation>horizontal</orientation>
				<visible>Control.HasFocus(9829) | Control.HasFocus(9828) | Control.HasFocus(9827) | Control.HasFocus(9825) | Control.HasFocus(9824) | Control.HasFocus(9823) | Control.HasFocus(9822) | Control.HasFocus(9821) | Control.HasFocus(9820) | Control.HasFocus(9819) | Control.HasFocus(9818) | Control.HasFocus(9817) | Control.HasFocus(9816) | Control.HasFocus(9815) | Control.HasFocus(9814) | Control.HasFocus(9813) | Control.HasFocus(9812) | Control.HasFocus(9811) | Control.HasFocus(9810) | Control.HasFocus(9802) | Control.HasFocus(9803) | Control.HasFocus(9804) | Control.HasFocus(9805) | Control.HasFocus(9806) | Control.HasFocus(9807) | Control.HasFocus(9808) | Control.HasFocus(9809)</visible>						
				<control type="image">
					<width>25</width>
					<height>25</height>
					<visible>!String.isEmpty(ListItem.Duration)</visible>
					<texture colordiffuse="orange">icons/duration.png</texture>
				</control>
				<control type="label">
					<!-- Duration -->
					<width>110</width>
					<height>25</height>
					<font>ctouch17</font>
					<label>$INFO[Listitem.Duration(h),,h] $INFO[Listitem.Duration(mm),,m]</label>
					<visible>!String.isEmpty(ListItem.Duration)</visible>
					<textcolor>lightgrey</textcolor>
				</control>
				<control type="image">
					<width>25</width>
					<height>25</height>
					<visible>!String.isEmpty(ListItem.Year)</visible>
					<texture>icons/year.png</texture>
				</control>
				<control type="label">
					<!-- Year -->
					<width>75</width>
					<height>25</height>
					<font>ctouch17</font>
					<texture>icons/timer.png</texture>
					<label>$INFO[Listitem.Year]</label>
					<visible>!String.isEmpty(ListItem.Year)</visible>
					<textcolor>lightgrey</textcolor>
				</control>
				<control type="image">
					<width>35</width>
					<height>25</height>
					<visible>!String.isEmpty(ListItem.Genre)</visible>
					<texture colordiffuse="red">icons/generos.png</texture>
				</control>
				<control type="label">
					<!-- Género -->
					<height>25</height>
					<width max="500">auto</width>
					<label>$INFO[ListItem.Genre]</label>	
					<font>ctouch17</font>
					<textcolor>lightgrey</textcolor>
					<visible>!String.isEmpty(ListItem.Genre)</visible>
				</control>				
				<control type="image">
					<width>25</width>
					<height>25</height>
					<visible>!String.isEmpty(Window(home).Property(TMDbHelper.ListItem.Status)) + $EXP[isTvshow]</visible>
					<texture colordiffuse="green">icons/status.png</texture>
				</control>
				<control type="label">
					<!-- Estado -->
					<height>25</height>
					<width>auto</width>
					<font>ctouch17</font>
					<label>$INFO[Window(home).Property(TMDbHelper.ListItem.Status)]</label>
					<visible>!String.isEmpty(Window(home).Property(TMDbHelper.ListItem.Status)) + $EXP[isTvshow]</visible>
					<textcolor>lightgrey</textcolor>
				</control>
			</control>
			<control type="grouplist">
				<left>62</left>
				<top>495</top>
				<width>860</width>
				<align>left</align>
				<itemgap>20</itemgap>
				<orientation>horizontal</orientation>
				<visible>Control.HasFocus(9829) | Control.HasFocus(9828) | Control.HasFocus(9827) | Control.HasFocus(9825) | Control.HasFocus(9824) | Control.HasFocus(9823) | Control.HasFocus(9822) | Control.HasFocus(9821) | Control.HasFocus(9820) | Control.HasFocus(9819) | Control.HasFocus(9818) | Control.HasFocus(9817) | Control.HasFocus(9816) | Control.HasFocus(9815) | Control.HasFocus(9814) | Control.HasFocus(9813) | Control.HasFocus(9812) | Control.HasFocus(9811) | Control.HasFocus(9810) | Control.HasFocus(9802) | Control.HasFocus(9803) | Control.HasFocus(9804) | Control.HasFocus(9805) | Control.HasFocus(9806) | Control.HasFocus(9807) | Control.HasFocus(9808) | Control.HasFocus(9809)</visible>						
				<control type="image">
					<!-- Star Rating -->
					<width>25</width>
					<height>55</height>
					<texture>tmdb.png</texture>
					<align>center</align>
					<aspectratio>keep</aspectratio>
					<visible>!String.isEmpty(ListItem.Rating) | !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Rating))</visible>										
				</control>
				<control type="label">
					<!-- Star Rating -->
					<width>auto</width>
					<height>50</height>
					<label>$INFO[Window(Home).Property(TMDbHelper.ListItem.Rating)]</label>
					<font>ctouch16</font>
					<align>right</align>
				</control>								
				<control type="image">
					<width>25</width>
					<height>50</height>
					<visible>!String.isEmpty(Window(home).Property(TMDbHelper.ListItem.Season)) + !String.isEmpty(Window(home).Property(TMDbHelper.ListItem.Episode)) + $EXP[isTvshow]</visible>
					<texture colordiffuse="purple">icons/ts.png</texture>
					<aspectratio>keep</aspectratio>
				</control>
				<control type="label">
					<!-- Temporades -->
					<width>auto</width>
					<height>50</height>
					<font>ctouch16</font>
					<label>[B]T[/B]: $INFO[Window(home).Property(TMDbHelper.ListItem.Season)]</label>
					<visible>!String.isEmpty(Window(home).Property(TMDbHelper.ListItem.Season)) + $EXP[isTvshow]</visible>
					<textcolor>lightgrey</textcolor>
				</control>
				<control type="label">
					<!-- Episodis -->
					<width>auto</width>
					<height>50</height>
					<font>ctouch16</font>
					<label>[B]E[/B]: $INFO[Window(home).Property(TMDbHelper.ListItem.Episode)]</label>
					<visible>!String.isEmpty(Window(home).Property(TMDbHelper.ListItem.Episode)) + $EXP[isTvshow]</visible>
					<textcolor>lightgrey</textcolor>
				</control>
				<control type="image">
					<!-- Studio -->
					<width>90</width>
					<height>50</height>
					<texture>$VAR[Image_CombinedStudio]</texture>
					<align>center</align>
					<aspectratio>keep</aspectratio>
					<visible>!String.isEmpty(Window(home).Property(TMDbHelper.ListItem.Studio))</visible>
				</control>
			</control>			
	</include>
	<include name="AutoHideOSD">
        <onfocus>AlarmClock(osd_hide,SetFocus(65555),00:05,silent)</onfocus>
        <onunfocus>CancelAlarm(osd_hide,true)</onunfocus>
    </include>
    <include name="OSDFade">
        <animation effect="fade" start="0" end="100" time="100">WindowOpen</animation>
        <animation effect="fade" start="100" end="0" time="100">WindowClose</animation>
    </include>
	<include name="DetailsCategorias">
			<control type="group">
			<visible>Control.HasFocus(9701) | Control.HasFocus(9702) | Control.HasFocus(9703) | Control.HasFocus(9704)</visible>						
				<control type="label">
					<!-- Title -->
					<left>50</left>
					<top>110</top>
					<width>1000</width>
					<height>50</height>
					<font>ctouch21w</font>
					<wrapmultiline>true</wrapmultiline>
					<include>scrolltext</include>
					<align>left</align>
					<label>[B]$INFO[ListItem.Label][/B]</label>
				</control>
			</control>
			<control type="group">
			<visible>Control.HasFocus(9902) | Control.HasFocus(9905)</visible>						
				<control type="label">
					<top>500</top>
					<label>$INFO[ListItem.Title]</label>
					<width>700</width>
					<height>50</height>
					<right>50</right>
					<font>ctouch20w</font>
					<align>right</align>
					<wrapmultiline>true</wrapmultiline>
				</control>
				<control type="label">
					<top>120</top>
					<label>[B]$INFO[ListItem.ChannelName][/B]</label>
					<width>670</width>
					<height>50</height>
					<right>50</right>
					<font>ctouch21w</font>
					<align>right</align>
					<wrapmultiline>true</wrapmultiline>
				</control>				
			</control>
	</include>
    <include name="bgbox">
        <param name="overlay" default="true" />
        <definition>
             <control type="group">
                <control type="image">
                    <texture colordiffuse="ffe55e35" border="10">diffuse/selectbox.png</texture>
                </control>
                <control type="image">
                    <texture colordiffuse="ffe5b535" border="10">diffuse/gradient-diffuse-selectbox.png</texture>
                </control>
            </control>
        </definition>
    </include>	
    <include name="bglist">
        <param name="overlay" default="true" />
        <definition>
             <control type="group">
                <control type="image">
                    <texture colordiffuse="ffe55e35" aspectratio="keep">diffuse/gradient-diffuse-selectbox.png</texture>
                </control>
            </control>
        </definition>
    </include>					
	<include name="touch-controls">
		<control type="grouplist" id="8000">
			<right>40</right>
			<top>15</top>
			<width>950</width>
			<height>100</height>	
			<itemgap>30</itemgap>
			<align>right</align>
			<orientation>horizontal</orientation>
			<defaultcontrol>2</defaultcontrol>	
			<viewtype>button</viewtype>		
			<ondown condition="Control.isVisible(50) + !Control.isVisible(57) + !Control.isVisible(58) + !Control.isVisible(52) + !Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(54) + !Control.isVisible(554)">50</ondown>
			<ondown condition="!Control.isVisible(50) + Control.isVisible(57) + !Control.isVisible(58) + !Control.isVisible(52) + !Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(54) + !Control.isVisible(554)">57</ondown>
			<ondown condition="!Control.isVisible(50) + !Control.isVisible(57) + Control.isVisible(58) + !Control.isVisible(52) + !Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(54) + !Control.isVisible(554)">58</ondown>
			<ondown condition="!Control.isVisible(50) + !Control.isVisible(57) + !Control.isVisible(58) + Control.isVisible(52) + !Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(54) + !Control.isVisible(554)">52</ondown>
			<ondown condition="!Control.isVisible(50) + !Control.isVisible(57) + !Control.isVisible(58) + !Control.isVisible(52) + Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(54) + !Control.isVisible(554)">59</ondown>
			<ondown condition="!Control.isVisible(50) + !Control.isVisible(57) + !Control.isVisible(58) + !Control.isVisible(52) + !Control.isVisible(59) + Control.isVisible(55) + !Control.isVisible(54) + !Control.isVisible(554)">55</ondown>
			<ondown condition="!Control.isVisible(50) + !Control.isVisible(57) + !Control.isVisible(58) + !Control.isVisible(52) + !Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(554) + Control.isVisible(54)">54</ondown>
			<ondown condition="!Control.isVisible(50) + !Control.isVisible(57) + !Control.isVisible(58) + !Control.isVisible(52) + !Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(54) + Control.IsVisible(554)">554</ondown>
			<ondown condition="!Window.isActive(Settings + !Control.isVisible(50) + !Control.isVisible(57) + !Control.isVisible(58) + !Control.isVisible(52) + !Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(54) + !Control.isVisible(554)">Control.SetFocus(9000,$INFO[Container(80001).Position])</ondown>
			<ondown condition="Control.IsVisible(10) | Window.isActive(tvguide)">10</ondown>
			<ondown condition="Control.IsVisible(7)">7</ondown>
			<ondown condition="Window.isActive(Settings)">8999</ondown>
			<visible>Skin.HasSetting(menulittle)</visible>
			<control type="button" id="70001">
				<width>80</width>
				<height>80</height>
				<texturefocus>touch-stop.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">touch-stop1.png</texturenofocus>
				<onclick>PlayerControl(Stop)</onclick>
				<include>focus-zoom</include>
				<visible>Player.HasVideo</visible>
			</control>
			<control type="button" id="70002">
				<width>80</width>
				<height>80</height>
				<texturefocus>touch-fullscreen.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">touch-fullscreen1.png</texturenofocus>
				<onclick>ActivateWindow(fullscreenvideo)</onclick>
				<include>focus-zoom</include>
				<visible>Player.HasVideo</visible>
			</control>			
			<control type="button" id="80001">
				<!-- Back -->
				<width>80</width>
				<height>80</height>
				<texturefocus>touch-back.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">touch-back1.png</texturenofocus>
				<onclick>Back</onclick>
				<include>focus-zoom</include>
				<visible>!Window.IsVisible(Home)</visible>
			</control>
			<control type="button" id="80002">
				<!-- Home -->
				<width>80</width>
				<height>80</height>
				<texturefocus>touch-home.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">touch-home1.png</texturenofocus>
				<onclick>ActivateWindow(Home)</onclick>
				<include>focus-zoom</include>
				<visible>!Window.IsVisible(Home)</visible>
			</control>			
			<control type="button" id="80003">
				<!-- Search -->
				<width>80</width>
				<height>80</height>
				<texturefocus>touch-search.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">touch-search1.png</texturenofocus>
				<onclick>ActivateWindow(1132)</onclick>
				<include>focus-zoom</include>
			</control>
			<control type="button" id="80004">
				<!-- Screen Settings -->
				<width>80</width>
				<height>80</height>
				<texturefocus>touch-settings.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">touch-settings1.png</texturenofocus>
				<onclick condition="!String.IsEqual(Window(home).Property(ShowScreenSettings),show)">SetFocus(9000)</onclick>
				<onclick condition="!String.IsEqual(Window(home).Property(ShowScreenSettings),show)">SetProperty(ShowScreenSettings,show,home)</onclick>
				<onclick condition="String.IsEqual(Window(home).Property(ShowScreenSettings),show)">ClearProperty(ShowScreenSettings,home)</onclick>
				<include>focus-zoom</include>
				<visible>[Window.isActive(tvguide) | Control.isVisible(50) | Control.isVisible(57) | Control.isVisible(58) | Control.isVisible(52) | Control.isVisible(59) | Control.isVisible(55) | Control.isVisible(54) | Control.isVisible(554)]</visible>
			</control>
			<control type="button" id="80005">
				<!-- Favourite -->
				<width>80</width>
				<height>80</height>
				<texturefocus>touch-fav.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">touch-fav1.png</texturenofocus>
				<onclick>ActivateWindow(favouritesbrowser)</onclick>
				<include>focus-zoom</include>
			</control>
			<control type="button" id="80006">
				<!-- Settings -->
				<width>80</width>
				<height>80</height>
				<texturefocus>isettings.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">isettings1.png</texturenofocus>
				<onclick>Activatewindow(1136)</onclick>
				<include>focus-zoom</include>
			</control>
		</control>
		<control type="grouplist" id="8000">
			<right>40</right>
			<top>15</top>
			<width>900</width>
			<height>75</height>	
			<itemgap>20</itemgap>
			<align>right</align>
			<orientation>horizontal</orientation>
			<defaultcontrol>2</defaultcontrol>	
			<viewtype>button</viewtype>		
			<onleft>80006</onleft>
			<ondown condition="Control.isVisible(50) + !Control.isVisible(57) + !Control.isVisible(58) + !Control.isVisible(52) + !Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(54) + !Control.isVisible(554)">50</ondown>
			<ondown condition="!Control.isVisible(50) + Control.isVisible(57) + !Control.isVisible(58) + !Control.isVisible(52) + !Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(54) + !Control.isVisible(554)">57</ondown>
			<ondown condition="!Control.isVisible(50) + !Control.isVisible(57) + Control.isVisible(58) + !Control.isVisible(52) + !Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(54) + !Control.isVisible(554)">58</ondown>
			<ondown condition="!Control.isVisible(50) + !Control.isVisible(57) + !Control.isVisible(58) + Control.isVisible(52) + !Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(54) + !Control.isVisible(554)">52</ondown>
			<ondown condition="!Control.isVisible(50) + !Control.isVisible(57) + !Control.isVisible(58) + !Control.isVisible(52) + Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(54) + !Control.isVisible(554)">59</ondown>
			<ondown condition="!Control.isVisible(50) + !Control.isVisible(57) + !Control.isVisible(58) + !Control.isVisible(52) + !Control.isVisible(59) + Control.isVisible(55) + !Control.isVisible(54) + !Control.isVisible(554)">55</ondown>
			<ondown condition="!Control.isVisible(50) + !Control.isVisible(57) + !Control.isVisible(58) + !Control.isVisible(52) + !Control.isVisible(59) + !Control.isVisible(55) + Control.isVisible(54) + !Control.isVisible(554)">54</ondown>
			<ondown condition="!Control.isVisible(50) + !Control.isVisible(57) + !Control.isVisible(58) + !Control.isVisible(52) + !Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(54) + Control.isVisible(554)">554</ondown>
			<ondown condition="!Control.isVisible(50) + !Control.isVisible(57) + !Control.isVisible(58) + !Control.isVisible(52) + !Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(54) + !Control.isVisible(554) + Control.IsVisible(10)">10</ondown>
			<ondown condition="!Window.isActive(Settings + !Control.isVisible(50) + !Control.isVisible(57) + !Control.isVisible(58) + !Control.isVisible(52) + !Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(54) + !Control.isVisible(554) + !Control.IsVisible(10)">Control.SetFocus(9000,$INFO[Container(80001).Position])</ondown>
			<ondown condition="Control.IsVisible(10) | Window.isActive(tvguide)">10</ondown>
			<ondown condition="Control.IsVisible(7)">7</ondown>
			<ondown condition="Window.isActive(Settings)">8999</ondown>
			<visible>!Skin.HasSetting(menulittle) + !Control.isVisible(450) + !Skin.HasSetting(menuoculto)</visible>
			<visible>Window.isVisible(Home) + !Player.HasVideo</visible>
			<control type="button" id="70001">
				<width>60</width>
				<height>60</height>
				<texturefocus>touch-stop.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">touch-stop1.png</texturenofocus>
				<onclick>PlayerControl(Stop)</onclick>
				<include>focus-zoom</include>
				<visible>Player.HasVideo</visible>
			</control>
			<control type="button" id="70002">
				<width>60</width>
				<height>60</height>
				<texturefocus>touch-fullscreen.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">touch-fullscreen1.png</texturenofocus>
				<onclick>ActivateWindow(fullscreenvideo)</onclick>
				<include>focus-zoom</include>
				<visible>Player.HasVideo</visible>
			</control>			
			<control type="button" id="80001">
				<!-- Back -->
				<width>60</width>
				<height>60</height>
				<texturefocus>touch-back.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">touch-back1.png</texturenofocus>
				<onclick>Back</onclick>
				<include>focus-zoom</include>
				<visible>!Window.IsVisible(Home)</visible>
			</control>
			<control type="button" id="80002">
				<!-- Home -->
				<width>60</width>
				<height>60</height>
				<texturefocus>touch-home.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">touch-home1.png</texturenofocus>
				<onclick>ActivateWindow(Home)</onclick>
				<include>focus-zoom</include>
				<visible>!Window.IsActive(Home)</visible>
			</control>			
			<control type="button" id="80003">
				<!-- Search -->
				<width>60</width>
				<height>60</height>
				<texturefocus>touch-search.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">touch-search1.png</texturenofocus>
				<onclick>ActivateWindow(1132)</onclick>
				<include>focus-zoom</include>
			</control>
			<control type="button" id="80004">
				<!-- Screen Settings -->
				<width>60</width>
				<height>60</height>
				<texturefocus>touch-settings.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">touch-settings1.png</texturenofocus>
				<onclick condition="!String.IsEqual(Window(home).Property(ShowScreenSettings),show)">SetFocus(9000)</onclick>
				<onclick condition="!String.IsEqual(Window(home).Property(ShowScreenSettings),show)">SetProperty(ShowScreenSettings,show,home)</onclick>
				<onclick condition="String.IsEqual(Window(home).Property(ShowScreenSettings),show)">ClearProperty(ShowScreenSettings,home)</onclick>
				<include>focus-zoom</include>
				<visible>[Window.isActive(tvguide) | Control.isVisible(50) | Control.isVisible(57) | Control.isVisible(58) | Control.isVisible(52) | Control.isVisible(59) | Control.isVisible(55) | Control.isVisible(54) | Control.isVisible(554)]</visible>
			</control>
			<control type="button" id="80005">
				<!-- Favourite -->
				<width>60</width>
				<height>60</height>
				<texturefocus>touch-fav.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">touch-fav1.png</texturenofocus>
				<onclick>ActivateWindow(favouritesbrowser)</onclick>
				<include>focus-zoom</include>
			</control>
			<control type="button" id="80006">
				<!-- Settings -->
				<width>60</width>
				<height>60</height>
				<texturefocus>isettings.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">isettings1.png</texturenofocus>
				<onclick condition="!Window.IsVisible(1136)">Activatewindow(1136)</onclick>
				<onclick condition="Window.IsVisible(1136)">Dialog.Close(1136)</onclick>
				<include>focus-zoom</include>
			</control>
		</control>
		<control type="grouplist" id="8000">
			<right>40</right>
			<top>15</top>
			<width>900</width>
			<height>75</height>	
			<itemgap>20</itemgap>
			<align>right</align>
			<orientation>horizontal</orientation>
			<defaultcontrol>2</defaultcontrol>	
			<viewtype>button</viewtype>		
			<onleft>80006</onleft>
			<ondown condition="Control.isVisible(50) + !Control.isVisible(57) + !Control.isVisible(58) + !Control.isVisible(52) + !Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(54) + !Control.isVisible(554)">50</ondown>
			<ondown condition="!Control.isVisible(50) + Control.isVisible(57) + !Control.isVisible(58) + !Control.isVisible(52) + !Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(54) + !Control.isVisible(554)">57</ondown>
			<ondown condition="!Control.isVisible(50) + !Control.isVisible(57) + Control.isVisible(58) + !Control.isVisible(52) + !Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(54) + !Control.isVisible(554)">58</ondown>
			<ondown condition="!Control.isVisible(50) + !Control.isVisible(57) + !Control.isVisible(58) + Control.isVisible(52) + !Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(54) + !Control.isVisible(554)">52</ondown>
			<ondown condition="!Control.isVisible(50) + !Control.isVisible(57) + !Control.isVisible(58) + !Control.isVisible(52) + Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(54) + !Control.isVisible(554)">59</ondown>
			<ondown condition="!Control.isVisible(50) + !Control.isVisible(57) + !Control.isVisible(58) + !Control.isVisible(52) + !Control.isVisible(59) + Control.isVisible(55) + !Control.isVisible(54) + !Control.isVisible(554)">55</ondown>
			<ondown condition="!Control.isVisible(50) + !Control.isVisible(57) + !Control.isVisible(58) + !Control.isVisible(52) + !Control.isVisible(59) + !Control.isVisible(55) + Control.isVisible(54) + !Control.isVisible(554)">54</ondown>
			<ondown condition="!Control.isVisible(50) + !Control.isVisible(57) + !Control.isVisible(58) + !Control.isVisible(52) + !Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(54) + Control.isVisible(554)">554</ondown>
			<ondown condition="!Control.isVisible(50) + !Control.isVisible(57) + !Control.isVisible(58) + !Control.isVisible(52) + !Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(54) + !Control.isVisible(554) + Control.IsVisible(10)">10</ondown>
			<ondown condition="!Window.isActive(Settings + !Control.isVisible(50) + !Control.isVisible(57) + !Control.isVisible(58) + !Control.isVisible(52) + !Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(54) + !Control.isVisible(554) + !Control.IsVisible(10)">Control.SetFocus(9000,$INFO[Container(80001).Position])</ondown>
			<ondown condition="Control.IsVisible(10) | Window.isActive(tvguide)">10</ondown>
			<ondown condition="Control.IsVisible(7)">7</ondown>
			<ondown condition="Window.isActive(Settings)">8999</ondown>
			<visible>!Skin.HasSetting(menulittle) + !Control.isVisible(450) + !Skin.HasSetting(menuoculto) + !Window.isVisible(Home)</visible>
			<control type="button" id="70001">
				<width>60</width>
				<height>60</height>
				<texturefocus>touch-stop.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">touch-stop1.png</texturenofocus>
				<onclick>PlayerControl(Stop)</onclick>
				<include>focus-zoom</include>
				<visible>Player.HasVideo</visible>
			</control>
			<control type="button" id="70002">
				<width>60</width>
				<height>60</height>
				<texturefocus>touch-fullscreen.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">touch-fullscreen1.png</texturenofocus>
				<onclick>ActivateWindow(fullscreenvideo)</onclick>
				<include>focus-zoom</include>
				<visible>Player.HasVideo</visible>
			</control>			
			<control type="button" id="80001">
				<!-- Back -->
				<width>60</width>
				<height>60</height>
				<texturefocus>touch-back.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">touch-back1.png</texturenofocus>
				<onclick>Back</onclick>
				<include>focus-zoom</include>
				<visible>!Window.IsVisible(Home)</visible>
			</control>
			<control type="button" id="80002">
				<!-- Home -->
				<width>60</width>
				<height>60</height>
				<texturefocus>touch-home.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">touch-home1.png</texturenofocus>
				<onclick>ActivateWindow(Home)</onclick>
				<include>focus-zoom</include>
				<visible>!Window.IsActive(Home)</visible>
			</control>			
			<control type="button" id="80003">
				<!-- Search -->
				<width>60</width>
				<height>60</height>
				<texturefocus>touch-search.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">touch-search1.png</texturenofocus>
				<onclick>ActivateWindow(1132)</onclick>
				<include>focus-zoom</include>
			</control>
			<control type="button" id="80004">
				<!-- Screen Settings -->
				<width>60</width>
				<height>60</height>
				<texturefocus>touch-settings.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">touch-settings1.png</texturenofocus>
				<onclick condition="!String.IsEqual(Window(home).Property(ShowScreenSettings),show)">SetFocus(9000)</onclick>
				<onclick condition="!String.IsEqual(Window(home).Property(ShowScreenSettings),show)">SetProperty(ShowScreenSettings,show,home)</onclick>
				<onclick condition="String.IsEqual(Window(home).Property(ShowScreenSettings),show)">ClearProperty(ShowScreenSettings,home)</onclick>
				<include>focus-zoom</include>
				<visible>[Window.isActive(tvguide) | Control.isVisible(50) | Control.isVisible(57) | Control.isVisible(58) | Control.isVisible(52) | Control.isVisible(59) | Control.isVisible(55) | Control.isVisible(54) | Control.isVisible(554)]</visible>
			</control>
			<control type="button" id="80005">
				<!-- Favourite -->
				<width>60</width>
				<height>60</height>
				<texturefocus>touch-fav.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">touch-fav1.png</texturenofocus>
				<onclick>ActivateWindow(favouritesbrowser)</onclick>
				<include>focus-zoom</include>
			</control>
			<control type="button" id="80006">
				<!-- Settings -->
				<width>60</width>
				<height>60</height>
				<texturefocus>isettings.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">isettings1.png</texturenofocus>
				<onclick condition="!Window.IsVisible(1136)">Activatewindow(1136)</onclick>
				<onclick condition="Window.IsVisible(1136)">Dialog.Close(1136)</onclick>
				<include>focus-zoom</include>
			</control>
		</control>
		<control type="grouplist" id="8000">
			<right>40</right>
			<top>15</top>
			<width>900</width>
			<height>60</height>	
			<itemgap>20</itemgap>
			<align>right</align>
			<orientation>horizontal</orientation>
			<defaultcontrol>2</defaultcontrol>	
			<viewtype>button</viewtype>		
			<ondown condition="Control.isVisible(50) + !Control.isVisible(57) + !Control.isVisible(58) + !Control.isVisible(52) + !Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(54) + !Control.isVisible(554)">50</ondown>
			<ondown condition="!Control.isVisible(50) + Control.isVisible(57) + !Control.isVisible(58) + !Control.isVisible(52) + !Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(54) + !Control.isVisible(554)">57</ondown>
			<ondown condition="!Control.isVisible(50) + !Control.isVisible(57) + Control.isVisible(58) + !Control.isVisible(52) + !Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(54) + !Control.isVisible(554)">58</ondown>
			<ondown condition="!Control.isVisible(50) + !Control.isVisible(57) + !Control.isVisible(58) + Control.isVisible(52) + !Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(54) + !Control.isVisible(554)">52</ondown>
			<ondown condition="!Control.isVisible(50) + !Control.isVisible(57) + !Control.isVisible(58) + !Control.isVisible(52) + Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(54) + !Control.isVisible(554)">59</ondown>
			<ondown condition="!Control.isVisible(50) + !Control.isVisible(57) + !Control.isVisible(58) + !Control.isVisible(52) + !Control.isVisible(59) + Control.isVisible(55) + !Control.isVisible(54) + !Control.isVisible(554)">55</ondown>
			<ondown condition="!Control.isVisible(50) + !Control.isVisible(57) + !Control.isVisible(58) + !Control.isVisible(52) + !Control.isVisible(59) + !Control.isVisible(55) + Control.isVisible(54) + !Control.isVisible(554)">54</ondown>
			<ondown condition="!Control.isVisible(50) + !Control.isVisible(57) + !Control.isVisible(58) + !Control.isVisible(52) + !Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(54) + Control.isVisible(554)">554</ondown>
			<ondown condition="Control.IsVisible(10) | Window.isActive(tvguide)">10</ondown>
			<ondown condition="!Window.isActive(Settings + !Control.isVisible(50) + !Control.isVisible(57) + !Control.isVisible(58) + !Control.isVisible(52) + !Control.isVisible(59) + !Control.isVisible(55) + !Control.isVisible(54) + !Control.isVisible(554) + !Window.isActive(tvguide)">Control.SetFocus(9000,$INFO[Container(80001).Position])</ondown>
			<ondown condition="Control.IsVisible(7)">7</ondown>
			<ondown condition="Window.isActive(Settings)">8999</ondown>
			<control type="button" id="70001">
				<width>60</width>
				<height>60</height>
				<texturefocus>touch-stop.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">touch-stop1.png</texturenofocus>
				<onclick>PlayerControl(Stop)</onclick>
				<include>focus-zoom</include>
				<visible>Player.HasVideo</visible>
				<visible>!Skin.HasSetting(menulittle) + !Control.isVisible(450) + Skin.HasSetting(menuoculto) + !Window.IsVisible(Home)</visible>
			</control>
			<control type="button" id="70002">
				<width>60</width>
				<height>60</height>
				<texturefocus>touch-fullscreen.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">touch-fullscreen1.png</texturenofocus>
				<onclick>ActivateWindow(fullscreenvideo)</onclick>
				<include>focus-zoom</include>
				<visible>Player.HasVideo</visible>
				<visible>!Skin.HasSetting(menulittle) + !Control.isVisible(450) + Skin.HasSetting(menuoculto) + !Window.IsVisible(Home)</visible>
			</control>			
			<control type="button" id="80002">
				<!-- Home -->
				<width>60</width>
				<height>60</height>
				<texturefocus>touch-home.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">touch-home1.png</texturenofocus>
				<onclick>ActivateWindow(Home)</onclick>
				<include>focus-zoom</include>
				<visible>!Window.IsActive(Home) + [Window.IsActive(settings) | Window.IsActive(SkinSettings)]</visible>
				<visible>!Skin.HasSetting(menulittle) + !Control.isVisible(450) + Skin.HasSetting(menuoculto) + !Player.HasVideo</visible>
			</control>			
			<control type="button" id="80003">
				<!-- Search -->
				<width>60</width>
				<height>60</height>
				<texturefocus>touch-search.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">touch-search1.png</texturenofocus>
				<onclick>ActivateWindow(1132)</onclick>
				<include>focus-zoom</include>
				<visible>[Window.IsActive(Home) | Window.IsActive(settings) | Window.IsActive(SkinSettings)]</visible>
				<visible>!Skin.HasSetting(menulittle) + !Control.isVisible(450) + Skin.HasSetting(menuoculto) + !Player.HasVideo</visible>
			</control>
			<control type="button" id="80004">
				<!-- Screen Settings -->
				<width>60</width>
				<height>60</height>
				<texturefocus>touch-settings.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">touch-settings1.png</texturenofocus>
				<onclick condition="!String.IsEqual(Window(home).Property(ShowScreenSettings),show)">SetFocus(9000)</onclick>
				<onclick condition="!String.IsEqual(Window(home).Property(ShowScreenSettings),show)">SetProperty(ShowScreenSettings,show,home)</onclick>
				<onclick condition="String.IsEqual(Window(home).Property(ShowScreenSettings),show)">ClearProperty(ShowScreenSettings,home)</onclick>
				<include>focus-zoom</include>
				<visible>Control.isVisible(54)</visible>
				<visible>Skin.HasSetting(menuoculto) + !Player.HasVideo + [Window.isActive(tvguide) | !Skin.HasSetting(menulittle) | !Control.isVisible(450) | Control.isVisible(50) | Control.isVisible(57) | Control.isVisible(58) | Control.isVisible(52) | Control.isVisible(59) | Control.isVisible(55) | Control.isVisible(54) | Control.isVisible(554)]</visible>
			</control>
			<control type="button" id="80005">
				<!-- Favourite -->
				<width>60</width>
				<height>60</height>
				<texturefocus>touch-fav.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">touch-fav1.png</texturenofocus>
				<onclick>ActivateWindow(favouritesbrowser)</onclick>
				<include>focus-zoom</include>
				<visible>[Window.IsActive(Home) | Window.IsActive(settings) | Window.IsActive(SkinSettings)]</visible>
				<visible>!Skin.HasSetting(menulittle) + !Control.isVisible(450) + Skin.HasSetting(menuoculto) + !Player.HasVideo</visible>
			</control>
			<control type="button" id="80006">
				<!-- Settings -->
				<width>60</width>
				<height>60</height>
				<texturefocus>isettings.png</texturefocus>
				<texturenofocus colordiffuse="lightgrey">isettings1.png</texturenofocus>
				<onclick>Activatewindow(1136)</onclick>
				<include>focus-zoom</include>
				<visible>[Window.IsActive(Home) | Window.IsActive(settings) | Window.IsActive(SkinSettings)]</visible>
				<visible>!Skin.HasSetting(menulittle) + !Control.isVisible(450) + Skin.HasSetting(menuoculto) + !Player.HasVideo</visible>
			</control>
		</control>
	</include>	
	<include name="hora">
  	  <control type="grouplist" id="8000">
		<left>30</left>
		<top>15</top>
		<width>400</width>
		<height>80</height>	
		<itemgap>15</itemgap>
		<orientation>horizontal</orientation>
		<defaultcontrol>2</defaultcontrol>	
		<viewtype>button</viewtype>			
		<visible>!Window.isVisible(DialogExtendedProgressBar.xml)</visible>
		<visible>!Window.isVisible(DialogNotification.xml)</visible>
		<visible>!Skin.HasSetting(ocultar-addonicon)</visible>
		<control type="image">
			<width>45</width>
			<height>45</height>
			<texture diffuse="diffuse/square.png">$VAR[AddonIcon]</texture>
			<aspectratio>scale</aspectratio>
		</control>	
		<control type="label">
		  <width>325</width>
          <height>45</height>
  		  <font>ctouch17</font>
          <align>left</align>
          <textcolor>grey</textcolor>
          <label>$INFO[System.Date(d/m/yyyy)] | $INFO[System.Time(hh:mm)]</label>
        </control>
	  </control>		
	</include>
	<include name="PVRChannelNumberInput">
		<control type="label">
			<left>0</left>
			<top>0</top>
			<width>95%</width>
			<height>100%</height>
			<label>$INFO[PVR.ChannelNumberInput]</label>
			<align>right</align>
			<font>Clock</font>
			<aligny>top</aligny>
			<visible>!String.IsEmpty(PVR.ChannelNumberInput)</visible>
		</control>
	</include>
	<include name="settings-submenu-common">
		<width>1328</width>
		<height>84</height>
		<font>ctouch22</font>
	</include>
	<include name="info-options-common">
		<height>144</height>
		<width>144</width>
		<font>ctouch16</font>
		<textcolor>disabled-text</textcolor>
		<focusedcolor>button-text</focusedcolor>
		<align>center</align>
		<aligny>top</aligny>
		<wrapmultiline>true</wrapmultiline>
		<textwidth>136</textwidth>
		<textoffsety>84</textoffsety>
	</include>
	<include name="keyboard-key-common">
		<shadowcolor/>
		<width>96</width>
		<height>96</height>
		<texturenofocus border="9" colordiffuse="midgrey">button-default.png</texturenofocus>
		<texturefocus colordiffuse="$VAR[AccentColor]">key-special-nofocus1.png</texturefocus>
		<font>ctouch25</font>
		<align>center</align>
		<aligny>center</aligny>
	</include>
	<include name="keyboard-auto-complete">
		<content>plugin://plugin.program.autocompletion?info=autocomplete&amp;&amp;id=$INFO[Control.GetLabel(312).index(1)]&amp;&amp;limit=10</content>
	</include>
	<include name="overlay-label">
		<width>1170</width>
		<height>34</height>
		<font>ctouch23</font>
	</include>
	<include name="scrolltext">
		<scroll>true</scroll>
		<visible>![System.ScreenSaverActive]</visible>
	</include>
	<include name="focus-zoom">
		<animation effect="zoom" start="100" end="116" center="auto" time="200" tween="back" easing="out" reversible="false">focus</animation>
	</include>
	<include name="settingbutton-fade">
		<animation effect="fade" start="100" end="60">Visible</animation>
	</include>
	<include name="busy-spin">
		<animation effect="rotate" start="360" end="0" center="auto" time="2000" loop="true" condition="true">conditional</animation>
	</include>
	<include name="screen-settings">
		<animation effect="slide" start="0,0" end="0,-1080">Visible</animation>
		<visible allowhiddenfocus="true">[ControlGroup(9000).HasFocus() | String.IsEqual(Window(home).Property(ShowScreenSettings),show)] + !Skin.HasSetting(lock-screensettings)</visible>
	</include>
	<include name="window-openclose">
		<animation effect="fade" time="100">WindowOpen</animation>
		<animation effect="fade" time="100">WindowClose</animation>
	</include>
	<include name="zoom-openclose">
		<animation type="WindowOpen" reversible="false">
			<effect type="fade" time="200"/>
			<effect type="zoom" start="110" end="100" time="200" center="auto"/>
		</animation>
		<animation type="WindowClose" reversible="false">
			<effect type="fade" time="200"/>
			<effect type="zoom" end="110" time="200" center="auto"/>
		</animation>
	</include>
</includes>